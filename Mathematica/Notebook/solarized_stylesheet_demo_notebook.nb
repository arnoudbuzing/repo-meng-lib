(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    224651,       4721]
NotebookOptionsPosition[    160754,       3445]
NotebookOutlinePosition[    222060,       4643]
CellTagsIndexPosition[    222017,       4640]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 StyleBox["Note",
  FontWeight->"Bold"],
 ": this is a notebook, ",
 StyleBox["not a stylesheet",
  FontSlant->"Italic"],
 ". So please don\[CloseCurlyQuote]t use the File > Install method method to \
apply the stylesheet. Instead, go to the Stylesheet Editor of this notebook \
(Format > Edit Stylesheet...) and follow the instruction in there."
}], "Text",
 CellChangeTimes->{
  3.61081924778518*^9, {3.6110337102242556`*^9, 3.6110337848605247`*^9}}],

Cell[CellGroupData[{

Cell["Title (Alt-1)", "Title",
 CellChangeTimes->{
  3.610964553175173*^9, {3.61096816469274*^9, 3.6109681677629156`*^9}}],

Cell["Subtitle (Alt-1, Tab)", "Subtitle",
 CellChangeTimes->{{3.6109574721001587`*^9, 3.6109574813456874`*^9}, {
  3.6109580126370754`*^9, 3.610958018068386*^9}, {3.610959340334016*^9, 
  3.610959364727411*^9}, {3.6109594435459185`*^9, 3.6109595152200184`*^9}, {
  3.6109636264751687`*^9, 3.6109636290993185`*^9}}],

Cell["Subsubtitle (Alt-1, Tab, Tab)", "Subsubtitle",
 CellChangeTimes->{{3.610959516843111*^9, 3.61095951700112*^9}, {
  3.6109596408312025`*^9, 3.610959641552244*^9}, {3.610959761222089*^9, 
  3.6109597660053625`*^9}, {3.610965134786439*^9, 3.610965144594*^9}}],

Cell[CellGroupData[{

Cell["Section (Alt-2)", "Section",
 CellChangeTimes->{
  3.610940691224347*^9, {3.610957490549214*^9, 3.6109574913382587`*^9}, {
   3.610957866879739*^9, 3.6109578668917394`*^9}, {3.6109580305050974`*^9, 
   3.610958034362318*^9}, {3.61096898589771*^9, 3.610968990407968*^9}, {
   3.6110435148370476`*^9, 3.6110435164641404`*^9}}],

Cell[CellGroupData[{

Cell["Subsection (Alt-2, Tab)", "Subsection",
 CellChangeTimes->{
  3.6109314102895083`*^9, {3.6109575030279274`*^9, 3.6109575043840055`*^9}, {
   3.6109578783703957`*^9, 3.610957878376396*^9}, {3.610958040884691*^9, 
   3.610958044957924*^9}}],

Cell[CellGroupData[{

Cell["Subsubsection (Alt-2, Tab, Tab)", "Subsubsection",
 CellChangeTimes->{{3.610957507666193*^9, 3.610957510254341*^9}, {
  3.610957882530634*^9, 3.6109578825436344`*^9}, {3.610958048227111*^9, 
  3.610958060817831*^9}}],

Cell[CellGroupData[{

Cell["Subsubsubsection (Alt-3)", "Subsubsubsection",
 CellChangeTimes->{
  3.61081924778518*^9, {3.6109575129064927`*^9, 3.61095751845681*^9}, {
   3.610957886010833*^9, 3.6109578860148335`*^9}, {3.6109580555595303`*^9, 
   3.610958058540701*^9}}],

Cell[CellGroupData[{

Cell["Subsubsubsection (Alt-3, Tab)", "Subsubsubsubsection",
 CellChangeTimes->{
  3.6107053378349037`*^9, {3.610957523862119*^9, 3.610957526374263*^9}, {
   3.6109578907091017`*^9, 3.610957918667701*^9}, {3.6109580626499357`*^9, 
   3.6109580657311125`*^9}}],

Cell["Text (Alt-4)", "Text",
 CellChangeTimes->{
  3.6107053378349037`*^9, {3.6109575296214485`*^9, 3.610957534138707*^9}, {
   3.6109579409249735`*^9, 3.6109579417430205`*^9}, {3.6109580681242495`*^9, 
   3.6109580707644005`*^9}, {3.6109636175536585`*^9, 3.610963619656779*^9}, {
   3.6110650857718344`*^9, 3.611065095149371*^9}}],

Cell["Small text (Alt-4, Tab)", "SmallText",
 CellChangeTimes->{{3.610958117424069*^9, 3.6109581243204637`*^9}}],

Cell[CellGroupData[{

Cell["Item (Alt-5)", "Item",
 CellChangeTimes->{{3.6109575417841444`*^9, 3.6109575422241697`*^9}, {
   3.610957861438428*^9, 3.6109578614464283`*^9}, {3.6109579507615366`*^9, 
   3.610957950767537*^9}, 3.6109580732005396`*^9, {3.610958127090622*^9, 
   3.6109581299877872`*^9}, 3.6110307866160345`*^9, 3.611030929422203*^9}],

Cell["ItemNumbered (Alt-5, Tab)", "ItemNumbered",
 CellChangeTimes->{{3.610957546913438*^9, 3.610957549298574*^9}, {
  3.610957835181926*^9, 3.61095785710518*^9}, {3.610957955645816*^9, 
  3.6109579556528163`*^9}, {3.610958133398983*^9, 3.6109581392763186`*^9}}],

Cell["ItemParagraph (Alt-5, Tab, Tab)", "ItemParagraph",
 CellChangeTimes->{{3.610957558481099*^9, 3.610957561032245*^9}, {
  3.610957838611122*^9, 3.6109578551620684`*^9}, {3.6109579589970074`*^9, 
  3.610957959006008*^9}, {3.6109581418884687`*^9, 3.6109581467707477`*^9}}],

Cell[CellGroupData[{

Cell["Subitem (Alt-6)", "Subitem",
 CellChangeTimes->{{3.610957824836334*^9, 3.6109578262434144`*^9}, {
  3.6109579644633203`*^9, 3.6109579644663205`*^9}, {3.6109581521830573`*^9, 
  3.6109581661218543`*^9}}],

Cell["SubitemNumbered (Alt-6, Tab)", "SubitemNumbered",
 CellChangeTimes->{{3.610957830972685*^9, 3.610957843963428*^9}, {
  3.6109579677865105`*^9, 3.6109579677895107`*^9}, {3.6109581554992466`*^9, 
  3.6109581681179686`*^9}}],

Cell["SubitemParagraph (Alt-6, Tab, Tab)", "SubitemParagraph",
 CellChangeTimes->{{3.610957830972685*^9, 3.6109578511408386`*^9}, {
  3.610957970285653*^9, 3.6109579702896533`*^9}, {3.61095815625029*^9, 
  3.6109581707241173`*^9}}],

Cell[CellGroupData[{

Cell["Subsubitem (Alt-6)", "Subsubitem",
 CellChangeTimes->{{3.6109579792561665`*^9, 3.6109579812292795`*^9}, {
  3.610958153003104*^9, 3.6109581739303007`*^9}}],

Cell["SubsubitemNumbered (Alt-6, Tab)", "SubsubitemNumbered",
 CellChangeTimes->{{3.6109579792561665`*^9, 3.6109579893347425`*^9}, {
  3.6109581575983667`*^9, 3.6109581764604454`*^9}}],

Cell["SubsubitemParagraph (Alt-6, Tab, Tab)", "SubsubitemParagraph",
 CellChangeTimes->{{3.6109579792561665`*^9, 3.610957995548098*^9}, {
  3.6109581624726458`*^9, 3.6109581786655717`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Input", ":", " ", 
    RowBox[{"Alt", "-", 
     RowBox[{"8.", " ", 
      ButtonBox["Reference",
       BaseStyle->"Hyperlink",
       ButtonData->{
         URL[
         "http://12000.org/my_notes/mma_matlab_control/KERNEL2/index.htm#x1-\
6200049"], None},
       ButtonNote->
        "http://12000.org/my_notes/mma_matlab_control/KERNEL2/index.htm#x1-\
6200049"]}]}]}], " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Rd", "[", 
      RowBox[{"r_", ",", "z_"}], "]"}], ":=", 
     RowBox[{"1", "/", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"r", "^", "2"}]}], ")"}], "^", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", " ", "z", " ", "r"}], ")"}], "^", "2"}]}], "]"}]}]}], 
    ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"phase", "[", 
      RowBox[{"r_", ",", "z_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "t", "}"}], ",", 
       RowBox[{
        RowBox[{"t", "=", 
         RowBox[{"ArcTan", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "z", " ", "r"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"r", "^", "2"}]}], ")"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"t", "<", "0"}], ",", 
          RowBox[{"t", "=", 
           RowBox[{"t", "+", "Pi"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"180", "/", "Pi"}], " ", "t"}]}]}], "]"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"plotOneZeta", "[", 
      RowBox[{"z_", ",", "f_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"r", ",", "p1", ",", "p2"}], "}"}], ",", 
       RowBox[{
        RowBox[{"p1", "=", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"r", ",", "z"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", "0", ",", "3"}], "}"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"p2", "=", 
         RowBox[{"Graphics", "[", 
          RowBox[{"Text", "[", 
           RowBox[{"z", ",", 
            RowBox[{"{", 
             RowBox[{"1.1", ",", 
              RowBox[{"1.1", 
               RowBox[{"f", "[", 
                RowBox[{"1.1", ",", "z"}], "]"}]}]}], "}"}]}], "]"}], "]"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{"{", 
          RowBox[{"p1", ",", "p2"}], "}"}], "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"p1", "=", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "6"}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"p2", "=", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"plotOneZeta", "[", 
         RowBox[{"#", ",", "Rd"}], "]"}], "&"}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{".1", ",", "1.2", ",", ".2"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"Show", "[", 
    RowBox[{"p2", ",", "p1", ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Subscript[R, d]\>\"", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<r= \[Omega]/Subscript[\[Omega], n]\>\"", ",", 
          "\"\<Dynamics Response vss. Frequency ratio for different \
\[Xi]\>\""}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"GridLinesStyle", "\[Rule]", "Dashed"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6109564139086337`*^9, 3.610956413913634*^9}, {
   3.6109581928743844`*^9, 3.6109582040860257`*^9}, {3.6109582341027427`*^9, 
   3.6109582532778397`*^9}, {3.610962849957754*^9, 3.610962894880324*^9}, {
   3.610963005867672*^9, 3.6109630438958473`*^9}, {3.6109636362697287`*^9, 
   3.6109636847165003`*^9}, {3.610964196020745*^9, 3.610964196124751*^9}, 
   3.6109663062294416`*^9, 3.6109665194016347`*^9, 3.6109716953096795`*^9, {
   3.61097656254307*^9, 3.6109765628740883`*^9}, {3.611043871281435*^9, 
   3.611043878351839*^9}, {3.6110508443632727`*^9, 3.611050846011367*^9}, {
   3.6110806942515883`*^9, 3.611080695999688*^9}, {3.6110870490230603`*^9, 
   3.6110870543673663`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJwVl3c8Vf8fx2/Wtde1VWZWaFDoW96fSpQGSgkhkqyslhmVhk1GQmYZhUpI
yMimjCKjbNnu5BrX+J3f+eec5+Oc8z6vz/u8H+c8njJ27uevM+FwuLJtONz/
9yun3V4Zu3voCuD+v5Hhib2iUofCOShgVAz9n38QJ5wjFKxBxHjUlxnjd8J/
0vtTHAByPbvxGJM/HQ93VXCDqjb3OR6MJZR/V2z1esGP1OFqYYyPeIfua0m5
C6ayjSZSGF9t0s15busLlFvKGSoYPxShbb+icB/Wf/AXamH8s+hCy/OlIEh8
Guytj7H9gFrwcu9DqBaKxJlhvLSNHa6UB4MRm7a+0//zKo+t1qQ8AXHOyFMB
GIuaVBbvCnwGK7MpnLEY53onuIfahsJEtFfIW4zbmgz/XVCIhAar9zVDGBfe
EzS+whING5NaPgyM74UFFkQuRQNjtYUkvo0M7J/MHWm9z+F1o7noFYw7Gxsb
drXEgkvHg+ZAjF8OaMhdLo8DNxy79huMVZh4hypTEqCiLur8EsZUYb//SBEv
QDyhfkOKiQwVytOJMoGJoClQdeMMxmdMvl14YpsE7T89vd9i7J5+t8VIIRV6
OCDaj5kM2sXjCg9F0yDyJ02zGGOcvdIxC5Z0mBHyeEnEuOVefFr4UjqEfL+Y
6chCBos0dwtKbyYcTdUs82Qlg66yQkiocRbcnPWzKcNY9tPfz3ItWeCX2NOE
YyPDXOMp4Uvlr+EAv9/fBIz9iXKd5SnZYPZ9VqIPj70v74HNC8I5kPpCvFOV
nQx6TDFqCxE5cEyfaPAIYx6RzVCpwFxYq3QMOsBBhtQjfSeCbd+Cs8mmxHtO
MtSGh1ecVSiEnfIX1ZZ5yFA12/+dK68QTtnsqPbkJUPlScWhlt3v4YOn4Q0i
xpZMtrgssQ9wi8VofYGPDBerGLJSOz/CQVr1cTZBMhge3OcoqvwJftJDspJF
yHDyX6/HXedP4KHyqE1LlAwGcfd9et59gjXuSP7fGOtR20Jj1YvBu/orTUwc
60ehQwGfZgn4PpVXLZMkg4ZCChUPn+HzSEzvFRky7O85xnAI+gx7janckrJk
2Bs8w9xY+xlUzSpu/MFYfeygcLBeGXjE9UXZyZNBKbVLC2f4BVQrBspDFcmw
XQQfsGJaATknYtiOq5OBlc0LP+NcDfz3ixQuHyHD9KlAPlpONRzyITAMdcnQ
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
Uw3/AyiqZjk=
       "]]}}, InsetBox["0.1`", {1.1, 3.616777720717859}]}, {{{}, {}, 
     {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJwV13k8VN8bB3CyjG+Rkr2SrUGoSKRv+QyViop2EWVNJUmFsiYqe6EioiS+
klTak6WyV5aIsoWss7hDlplr+d3f/Wde7z/m3HOe85znnkfF6fQe1zkCAgKG
ggIC//+dtPS8a33ay2S+wP8fAldcNDRr6buQctPh3f/9lfPnRAzdAa+IU4Nz
KOfKtN77meqGDZMrY0QpEwWboj3onhjWefBwHmVFrR/vZ5u94ZfzRV+K8ka/
SL2qVB+4qz4xUKR8tMIkO97xIjb0WeSqUQ6VHV1ymB4Eu/asWyspNzzfWxU/
FgK5yPLx9ZRdfumGTTSH4pVYfs02ymOCYjj8LgwnJd1kbP4/X61uXknqFRzl
cL+7U5bbXfhiefA1vIo7RPOn/J/frdORjpGI9M3Mj6VcU2HRu5ceC3ldkSPv
KD/xlbI+LHwd0iK6bg2UfaOC82LHrkNx3eFuJmWxgkPuo83x2O9EGqsJEqgr
Ly9bXpUAK4NQGVPKyb/WqNm8S0SfrInbUcor5szvKEy9Ba5TxLEHlEdk/P8d
jrmNw34G8hWU32sNJKkEJ8Fp3NKERXnH7o97rzjeQbn6zND6OQRO3/OpsqKn
gdFiVjlIed2LHnqoXDq2XFOmKwgREHDRNLMVvgcZjPO2U67yvZkePXYPkaKt
Qk8p26aftuU2Z8D6xZ+MGGECJlr0iEjrB2iX//m8krJqQdtrtaoHqP3kaywi
QoBZvl3mwLtM0CLkc0MpB3DU6t6lZuENv0o1TpTaL79fM3tlslEZwhlqorx5
zg1ddkw2bm26tUKJRkBCdiZyWfB/MAvqX1BAOW1jy5Ywx0f4p5AfwBEjUBod
/X4n/QmkXfSJ3HkEioZ+fpmX8wQLvw5CSpxA4TaNjirtfAjfuGx5kbLdHEeB
B/JP4a2mddtKgsD+IlJ1mdIzrI+cFJGUJGBhqOcup1WAt7usvLukCGzrbfby
OVEAJL5Mdl5EYGti0IWm3AKcNooO6ae8eaQmMmHlC6yojIr5K03F44lbnqTB
S7xSEn+sJkdgDT11hIbXCO5IM/qxmIB+kxnpFvIaLV0j588tIbA6bFCovPQ1
4qWW+UkvJbCy21AmbPMbzGUbVR1SIqCZVm8kYPEWndZq2TxlAktkaYGT+96j
l3X2TiydgIioN23wRDE8VsnVS64hMLA9WHI0uxgRBu/aWyhXx0TLTf8pxtuZ
dUEPDAhURH5PuLaqBEsNVAM2GhKIkuI8SM0pgdKw/vkwYwLSqmqfP98thcMv
gVwHBgG6aYywzJVP6EtzLDK3ovK/J0HsTuYnbBMR5JtZU/kbfkd82adPEPS6
1sTYTWCoMltaS+AzHoTMnDLdSyDf+qP6xoufwT/ot/rAQSrfjk5sdvUsw56L
HvbfjhDYHuwY/vJABV7MF4mcOkPFJ67U/P65CiywtLuncZZab7qKWEx8Bc4d
zt637xxVD4q6Il2+VeCp0rzk5z4Ebs04Xl9kXolN56PTQv0J/Al0Sjmztgob
2v/OPRNOICTA+ZmudA1WxD2ZjbxD4ET0J28F/Rr4iAd/G0ohsC9VzUDEugYf
PjZZ7rhLQKOw51VbVA1ezNm3T/oegW+kc2GU0BcYC3g8fvOQmo+/S8XgyBfY
bp/k7XlG4PUF1/aH9d8wZdRg0FBFIMvkZLPiyDfUbroWHlVDzU/oTH2cVC2s
Si/1m38l4BMTUHZhby04whHdn+oIGN5PyNvZVIvlHJUvP5qp/Pzzu+iiRx16
Y3escOwj8GueZJyqVz127lunNV+Eiz2cheL2IfW44httOY/GRXWddMTt6/Xo
erkmZe4/XLy7qXhZ/Fk9dievL5eU4OLOMrrvOLceC+VuuRrIcGG7ZuOR6rMN
yD3ZnN6/nIuftidXeft+h+P8up6pbVxEdm/1uH3lO4JHVxQrWnKx/oR6TuHN
72AE+6Ss38lF6oV2VdqL75BhmNuG7ObiaJKVbCrxHV7092Lqtlz0N62ZLjve
iNeVD4a+nORizHqqWuFwE8quriIeXedi4dYYt1JGM2jTTYdqfnOxOacQ2rub
8fzLgFVODxd+81jyNx2b0Uuv7I3o4+J3rUWNe2gz9MNGxvawuHhqI7Z6wedm
3MgwqRGe5ML6xGWew9YWMMdyXAckR3A95kL01M6fKNwjtPuN6QgWNLo+N7Jr
xf1H5599yhsBg206tO9kK8ynk6U2PRuBl6iSqrd/K9Y6zlqUvRhB/bofNx6n
tMJn0tO84f0I4u+an1Fpa8VY22jE/OoRyBzTWD3Pvg3Rpj57FvaPQJE/kNfh
0I7Xcrobt6mNQk3ZIyfcqRNb3j59/S5zFNEdKvdjznSiWHvqT/5/oxhPbU66
GdIJWUPdyuzHo6hU2HTtYVonYl4qFKS/GIXHIsVjZb868ab07sqnn0dhJ+QS
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
5+qvK8b/AJiNwfE=
       "]]}}, 
    InsetBox["0.30000000000000004`", {1.1, 1.5882096333554363`}]}, {{{}, {}, 
     {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
/AtT1g==
       "]]}}, InsetBox["0.5`", {1.1, 0.9822603219536675}]}, {{{}, {}, 
     {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
8uYmCUvWqdkuf50C/wdXSlqB
       "]]}}, 
    InsetBox["0.7000000000000001`", {1.1, 0.7077358343173563}]}, {{{}, {}, 
     {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
B5YwuZ4=
       "]]}}, InsetBox["0.9`", {1.1, 0.5524569914990429}]}, {{{}, {}, 
     {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
crFaGg//AlBTb5I=
       "]]}}, InsetBox["1.1`", {1.1, 0.45284364539239536`}]}, 
   {RGBColor[1, 0, 0], LineBox[{{1, 0}, {1, 6}}]}},
  AspectRatio->1,
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.2},
  Frame->True,
  FrameLabel->{{
     FormBox["\"Subscript[R, d]\"", TraditionalForm], None}, {
     FormBox["\"r= \[Omega]/Subscript[\[Omega], n]\"", TraditionalForm], 
     FormBox[
     "\"Dynamics Response vs. Frequency ratio for different \[Xi]\"", 
      TraditionalForm]}},
  GridLines->Automatic,
  GridLinesStyle->Dashing[{Small, Small}],
  ImageSize->300,
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.610964553175173*^9, 3.6109660642215996`*^9}]
}, Open  ]],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox[
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"DisplayFormulaNumbered", ":", " ", "Input"}], ",", " ", 
      "Tab"}], " ", "*)"}],
    FontColor->RGBColor[
     0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Rd", "(", 
       RowBox[{"r_", ",", "z_"}], ")"}], ":=", 
      FractionBox["1", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["r", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", " ", "r", " ", "z"}], ")"}], "2"]}]]]}], ";"}], "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"phase", "(", 
       RowBox[{"r_", ",", "z_"}], ")"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "t", "}"}], ",", 
        RowBox[{
         RowBox[{"t", "=", 
          RowBox[{
           SuperscriptBox["tan", 
            RowBox[{"-", "1"}]], "(", 
           FractionBox[
            RowBox[{"2", " ", "r", " ", "z"}], 
            RowBox[{"1", "-", 
             SuperscriptBox["r", "2"]}]], ")"}]}], ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"t", "<", "0"}], ",", 
           RowBox[{"t", "=", 
            RowBox[{"t", "+", "\[Pi]"}]}]}], "]"}], ";", 
         FractionBox[
          RowBox[{"180", " ", "t"}], "\[Pi]"]}]}], "]"}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"plotOneZeta", "(", 
       RowBox[{"z_", ",", "f_"}], ")"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"r", ",", "p1", ",", "p2"}], "}"}], ",", 
        RowBox[{
         RowBox[{"p1", "=", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"f", "(", 
             RowBox[{"r", ",", "z"}], ")"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "0", ",", "3"}], "}"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], ";", 
         RowBox[{"p2", "=", 
          RowBox[{"Graphics", "[", 
           RowBox[{"Text", "[", 
            RowBox[{"z", ",", 
             RowBox[{"{", 
              RowBox[{"1.1", ",", 
               RowBox[{"1.1", " ", 
                RowBox[{"f", "(", 
                 RowBox[{"1.1", ",", "z"}], ")"}]}]}], "}"}]}], "]"}], 
           "]"}]}], ";", 
         RowBox[{"Show", "[", 
          RowBox[{"{", 
           RowBox[{"p1", ",", "p2"}], "}"}], "]"}]}]}], "]"}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{"p1", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Red", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "0"},
             {"1", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          "]"}]}], "}"}], "]"}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{"p2", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"plotOneZeta", "(", 
          RowBox[{"#1", ",", "Rd"}], ")"}], "&"}], ")"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{".1", ",", "1.2", ",", ".2"}], "]"}]}]}], ";"}], "\n", 
    RowBox[{"Show", "[", 
     RowBox[{"p2", ",", "p1", ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"\"\<Subscript[R, d]\>\"", "None"},
          {"\"\<r= \[Omega]/Subscript[\[Omega], n]\>\"", 
           "\"\<Dynamics Response vs. Frequency ratio for different \[Xi]\>\""}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"GridLinesStyle", "\[Rule]", "Dashed"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.6109564139086337`*^9, 3.610956413913634*^9}, {
  3.6109581928743844`*^9, 3.6109582040860257`*^9}, {3.6109582341027427`*^9, 
  3.6109582532778397`*^9}, {3.610962849957754*^9, 3.610962894880324*^9}, {
  3.610963005867672*^9, 3.6109630438958473`*^9}, {3.6109631359121103`*^9, 
  3.6109631638327074`*^9}, {3.6109632548929157`*^9, 3.610963281087414*^9}, {
  3.611200631754757*^9, 3.611200633952883*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox[
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"DisplayFormula", ":", " ", "Input"}], ",", " ", "Tab", ",", 
      " ", 
      RowBox[{
       RowBox[{
        StyleBox[
         RowBox[{"r", "Tab"}]], " ", ".", " ", 
        StyleBox["Shift",
         FontWeight->"Plain",
         Background->RGBColor[1, 0.85, 0.85]]}], 
       StyleBox["-",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{
        "Backspace", " ", "to", " ", "go", " ", "back", " ", "to", " ", 
         "DisplayFormulaNumbered"}],
        FontWeight->"Plain"]}], 
      StyleBox[",",
       FontWeight->"Plain"], 
      StyleBox[
       RowBox[{
       "careful", " ", "when", " ", "moving", " ", "back", " ", "from", " ", 
        "DisplayFormula", " ", "as", " ", "the", " ", "cursor", " ", "moves", 
        " ", "to", " ", "the", " ", "end", " ", "of", " ", "cell"}],
       FontWeight->"Plain"]}], " ", "*)"}],
    FontColor->RGBColor[
     0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Rd", "(", 
       RowBox[{"r_", ",", "z_"}], ")"}], ":=", 
      FractionBox["1", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["r", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", " ", "r", " ", "z"}], ")"}], "2"]}]]]}], ";"}], "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"phase", "(", 
       RowBox[{"r_", ",", "z_"}], ")"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "t", "}"}], ",", 
        RowBox[{
         RowBox[{"t", "=", 
          RowBox[{
           SuperscriptBox["tan", 
            RowBox[{"-", "1"}]], "(", 
           FractionBox[
            RowBox[{"2", " ", "r", " ", "z"}], 
            RowBox[{"1", "-", 
             SuperscriptBox["r", "2"]}]], ")"}]}], ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"t", "<", "0"}], ",", 
           RowBox[{"t", "=", 
            RowBox[{"t", "+", "\[Pi]"}]}]}], "]"}], ";", 
         FractionBox[
          RowBox[{"180", " ", "t"}], "\[Pi]"]}]}], "]"}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"plotOneZeta", "(", 
       RowBox[{"z_", ",", "f_"}], ")"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"r", ",", "p1", ",", "p2"}], "}"}], ",", 
        RowBox[{
         RowBox[{"p1", "=", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"f", "(", 
             RowBox[{"r", ",", "z"}], ")"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "0", ",", "3"}], "}"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], ";", 
         RowBox[{"p2", "=", 
          RowBox[{"Graphics", "[", 
           RowBox[{"Text", "[", 
            RowBox[{"z", ",", 
             RowBox[{"{", 
              RowBox[{"1.1", ",", 
               RowBox[{"1.1", " ", 
                RowBox[{"f", "(", 
                 RowBox[{"1.1", ",", "z"}], ")"}]}]}], "}"}]}], "]"}], 
           "]"}]}], ";", 
         RowBox[{"Show", "[", 
          RowBox[{"{", 
           RowBox[{"p1", ",", "p2"}], "}"}], "]"}]}]}], "]"}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{"p1", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Red", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "0"},
             {"1", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          "]"}]}], "}"}], "]"}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{"p2", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"plotOneZeta", "(", 
          RowBox[{"#1", ",", "Rd"}], ")"}], "&"}], ")"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{".1", ",", "1.2", ",", ".2"}], "]"}]}]}], ";"}], "\n", 
    RowBox[{"Show", "[", 
     RowBox[{"p2", ",", "p1", ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"\"\<Subscript[R, d]\>\"", "None"},
          {"\"\<r= \[Omega]/Subscript[\[Omega], n]\>\"", 
           "\"\<Dynamics Response vs. Frequency ratio for different \[Xi]\>\""}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"GridLinesStyle", "\[Rule]", "Dashed"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}]}], 
  TraditionalForm]], "DisplayFormula",
 CellChangeTimes->{{3.6109564139086337`*^9, 3.610956413913634*^9}, {
   3.6109581928743844`*^9, 3.6109582040860257`*^9}, {3.6109582341027427`*^9, 
   3.6109582532778397`*^9}, {3.6109583127592416`*^9, 3.610958374026746*^9}, {
   3.610963168203957*^9, 3.610963212260477*^9}, {3.6109632934661217`*^9, 
   3.6109633708935504`*^9}, 3.6111996905639243`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox[
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"InlineFormula", ":", " ", "Input"}], ",", " ", "Tab", ",", " ",
       "Tab", ",", " ", "Tab"}], " ", "*)"}],
    FontColor->RGBColor[
     0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]], 
   StyleBox["\[IndentingNewLine]",
    FontColor->RGBColor[1., 0., 0.]], 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Rd", "(", 
       RowBox[{"r_", ",", "z_"}], ")"}], ":=", 
      FractionBox["1", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["r", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", " ", "r", " ", "z"}], ")"}], "2"]}]]]}], ";"}], "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"phase", "(", 
       RowBox[{"r_", ",", "z_"}], ")"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "t", "}"}], ",", 
        RowBox[{
         RowBox[{"t", "=", 
          RowBox[{
           SuperscriptBox["tan", 
            RowBox[{"-", "1"}]], "(", 
           FractionBox[
            RowBox[{"2", " ", "r", " ", "z"}], 
            RowBox[{"1", "-", 
             SuperscriptBox["r", "2"]}]], ")"}]}], ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"t", "<", "0"}], ",", 
           RowBox[{"t", "=", 
            RowBox[{"t", "+", "\[Pi]"}]}]}], "]"}], ";", 
         FractionBox[
          RowBox[{"180", " ", "t"}], "\[Pi]"]}]}], "]"}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"plotOneZeta", "(", 
       RowBox[{"z_", ",", "f_"}], ")"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"r", ",", "p1", ",", "p2"}], "}"}], ",", 
        RowBox[{
         RowBox[{"p1", "=", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"f", "(", 
             RowBox[{"r", ",", "z"}], ")"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "0", ",", "3"}], "}"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], ";", 
         RowBox[{"p2", "=", 
          RowBox[{"Graphics", "[", 
           RowBox[{"Text", "[", 
            RowBox[{"z", ",", 
             RowBox[{"{", 
              RowBox[{"1.1", ",", 
               RowBox[{"1.1", " ", 
                RowBox[{"f", "(", 
                 RowBox[{"1.1", ",", "z"}], ")"}]}]}], "}"}]}], "]"}], 
           "]"}]}], ";", 
         RowBox[{"Show", "[", 
          RowBox[{"{", 
           RowBox[{"p1", ",", "p2"}], "}"}], "]"}]}]}], "]"}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{"p1", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Red", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "0"},
             {"1", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          "]"}]}], "}"}], "]"}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{"p2", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"plotOneZeta", "(", 
          RowBox[{"#1", ",", "Rd"}], ")"}], "&"}], ")"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{".1", ",", "1.2", ",", ".2"}], "]"}]}]}], ";"}], "\n", 
    RowBox[{"Show", "[", 
     RowBox[{"p2", ",", "p1", ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"\"\<Subscript[R, d]\>\"", "None"},
          {"\"\<r= \[Omega]/Subscript[\[Omega], n]\>\"", 
           "\"\<Dynamics Response vs. Frequency ratio for different \[Xi]\>\""}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"GridLinesStyle", "\[Rule]", "Dashed"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}]}], 
  TraditionalForm]], "InlineFormula",
 CellChangeTimes->{{3.6109564139086337`*^9, 3.610956413913634*^9}, {
  3.6109581928743844`*^9, 3.6109582040860257`*^9}, {3.6109582341027427`*^9, 
  3.6109582532778397`*^9}, {3.6109583127592416`*^9, 3.6109583916767554`*^9}, {
  3.6109634163011475`*^9, 3.6109634701042247`*^9}, {3.6109638584834385`*^9, 
  3.610963859144477*^9}, {3.610963990346981*^9, 3.610963994634226*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Code", ":", " ", "Input"}], ",", " ", 
     RowBox[{"Shift", "-", "Tab"}], ",", " ", 
     RowBox[{
      StyleBox["Shift",
       Background->GrayLevel[1]], "-", 
      RowBox[{"Backspace", " ", "to", " ", "go", " ", "back", " ", "to", " ", 
       RowBox[{"Input", ".", "\n", "Be"}], " ", "careful", " ", "when", " ", 
       "moving", " ", "back", " ", "from", " ", "Formula", " ", "as", " ", 
       "the", " ", "cursor", " ", "moves", " ", "to", " ", "the", " ", "end", 
       " ", "of", " ", 
       RowBox[{"cell", "!"}]}]}]}], " ", "*)"}],
   FontColor->RGBColor[1., 0., 0.]], "\n", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Rd", "[", 
      RowBox[{"r_", ",", "z_"}], "]"}], ":=", 
     RowBox[{"1", "/", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"r", "^", "2"}]}], ")"}], "^", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", " ", "z", " ", "r"}], ")"}], "^", "2"}]}], "]"}]}]}], 
    ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"phase", "[", 
      RowBox[{"r_", ",", "z_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "t", "}"}], ",", 
       RowBox[{
        RowBox[{"t", "=", 
         RowBox[{"ArcTan", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "z", " ", "r"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"r", "^", "2"}]}], ")"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"t", "<", "0"}], ",", 
          RowBox[{"t", "=", 
           RowBox[{"t", "+", "Pi"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"180", "/", "Pi"}], " ", "t"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"plotOneZeta", "[", 
      RowBox[{"z_", ",", "f_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"r", ",", "p1", ",", "p2"}], "}"}], ",", 
       RowBox[{
        RowBox[{"p1", "=", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"r", ",", "z"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", "0", ",", "3"}], "}"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"p2", "=", 
         RowBox[{"Graphics", "[", 
          RowBox[{"Text", "[", 
           RowBox[{"z", ",", 
            RowBox[{"{", 
             RowBox[{"1.1", ",", 
              RowBox[{"1.1", 
               RowBox[{"f", "[", 
                RowBox[{"1.1", ",", "z"}], "]"}]}]}], "}"}]}], "]"}], "]"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{"{", 
          RowBox[{"p1", ",", "p2"}], "}"}], "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"p1", "=", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "6"}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"p2", "=", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"plotOneZeta", "[", 
         RowBox[{"#", ",", "Rd"}], "]"}], "&"}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{".1", ",", "1.2", ",", ".2"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"Show", "[", 
    RowBox[{"p2", ",", "p1", ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Subscript[R, d]\>\"", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<r= \[Omega]/Subscript[\[Omega], n]\>\"", ",", 
          "\"\<Dynamics Response vs. Frequency ratio for different \
\[Xi]\>\""}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"GridLinesStyle", "\[Rule]", "Dashed"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}]}]], "Code",
 CellChangeTimes->{{3.6109564139086337`*^9, 3.610956413913634*^9}, {
   3.6109581928743844`*^9, 3.6109582040860257`*^9}, {3.6109582341027427`*^9, 
   3.610958263236409*^9}, {3.610958525813428*^9, 3.610958560772427*^9}, {
   3.610958601936782*^9, 3.610958614601506*^9}, {3.610963717023348*^9, 
   3.610963719753504*^9}, {3.6109638133818593`*^9, 3.6109638478138285`*^9}, 
   3.610963918458869*^9, 3.610963969265775*^9}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJwVl3c8Vf8fx2/Wtde1VWZWaFDoW96fSpQGSgkhkqyslhmVhk1GQmYZhUpI
yMimjCKjbNnu5BrX+J3f+eec5+Oc8z6vz/u8H+c8njJ27uevM+FwuLJtONz/
9yun3V4Zu3voCuD+v5Hhib2iUofCOShgVAz9n38QJ5wjFKxBxHjUlxnjd8J/
0vtTHAByPbvxGJM/HQ93VXCDqjb3OR6MJZR/V2z1esGP1OFqYYyPeIfua0m5
C6ayjSZSGF9t0s15busLlFvKGSoYPxShbb+icB/Wf/AXamH8s+hCy/OlIEh8
Guytj7H9gFrwcu9DqBaKxJlhvLSNHa6UB4MRm7a+0//zKo+t1qQ8AXHOyFMB
GIuaVBbvCnwGK7MpnLEY53onuIfahsJEtFfIW4zbmgz/XVCIhAar9zVDGBfe
EzS+whING5NaPgyM74UFFkQuRQNjtYUkvo0M7J/MHWm9z+F1o7noFYw7Gxsb
drXEgkvHg+ZAjF8OaMhdLo8DNxy79huMVZh4hypTEqCiLur8EsZUYb//SBEv
QDyhfkOKiQwVytOJMoGJoClQdeMMxmdMvl14YpsE7T89vd9i7J5+t8VIIRV6
OCDaj5kM2sXjCg9F0yDyJ02zGGOcvdIxC5Z0mBHyeEnEuOVefFr4UjqEfL+Y
6chCBos0dwtKbyYcTdUs82Qlg66yQkiocRbcnPWzKcNY9tPfz3ItWeCX2NOE
YyPDXOMp4Uvlr+EAv9/fBIz9iXKd5SnZYPZ9VqIPj70v74HNC8I5kPpCvFOV
nQx6TDFqCxE5cEyfaPAIYx6RzVCpwFxYq3QMOsBBhtQjfSeCbd+Cs8mmxHtO
MtSGh1ecVSiEnfIX1ZZ5yFA12/+dK68QTtnsqPbkJUPlScWhlt3v4YOn4Q0i
xpZMtrgssQ9wi8VofYGPDBerGLJSOz/CQVr1cTZBMhge3OcoqvwJftJDspJF
yHDyX6/HXedP4KHyqE1LlAwGcfd9et59gjXuSP7fGOtR20Jj1YvBu/orTUwc
60ehQwGfZgn4PpVXLZMkg4ZCChUPn+HzSEzvFRky7O85xnAI+gx7janckrJk
2Bs8w9xY+xlUzSpu/MFYfeygcLBeGXjE9UXZyZNBKbVLC2f4BVQrBspDFcmw
XQQfsGJaATknYtiOq5OBlc0LP+NcDfz3ixQuHyHD9KlAPlpONRzyITAMdcnQ
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
Uw3/AyiqZjk=
       "]]}}, InsetBox["0.1`", {1.1, 3.616777720717859}]}, {{{}, {}, 
     {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJwV13k8VN8bB3CyjG+Rkr2SrUGoSKRv+QyViop2EWVNJUmFsiYqe6EioiS+
klTak6WyV5aIsoWss7hDlplr+d3f/Wde7z/m3HOe85znnkfF6fQe1zkCAgKG
ggIC//+dtPS8a33ay2S+wP8fAldcNDRr6buQctPh3f/9lfPnRAzdAa+IU4Nz
KOfKtN77meqGDZMrY0QpEwWboj3onhjWefBwHmVFrR/vZ5u94ZfzRV+K8ka/
SL2qVB+4qz4xUKR8tMIkO97xIjb0WeSqUQ6VHV1ymB4Eu/asWyspNzzfWxU/
FgK5yPLx9ZRdfumGTTSH4pVYfs02ymOCYjj8LgwnJd1kbP4/X61uXknqFRzl
cL+7U5bbXfhiefA1vIo7RPOn/J/frdORjpGI9M3Mj6VcU2HRu5ceC3ldkSPv
KD/xlbI+LHwd0iK6bg2UfaOC82LHrkNx3eFuJmWxgkPuo83x2O9EGqsJEqgr
Ly9bXpUAK4NQGVPKyb/WqNm8S0SfrInbUcor5szvKEy9Ba5TxLEHlEdk/P8d
jrmNw34G8hWU32sNJKkEJ8Fp3NKERXnH7o97rzjeQbn6zND6OQRO3/OpsqKn
gdFiVjlIed2LHnqoXDq2XFOmKwgREHDRNLMVvgcZjPO2U67yvZkePXYPkaKt
Qk8p26aftuU2Z8D6xZ+MGGECJlr0iEjrB2iX//m8krJqQdtrtaoHqP3kaywi
QoBZvl3mwLtM0CLkc0MpB3DU6t6lZuENv0o1TpTaL79fM3tlslEZwhlqorx5
zg1ddkw2bm26tUKJRkBCdiZyWfB/MAvqX1BAOW1jy5Ywx0f4p5AfwBEjUBod
/X4n/QmkXfSJ3HkEioZ+fpmX8wQLvw5CSpxA4TaNjirtfAjfuGx5kbLdHEeB
B/JP4a2mddtKgsD+IlJ1mdIzrI+cFJGUJGBhqOcup1WAt7usvLukCGzrbfby
OVEAJL5Mdl5EYGti0IWm3AKcNooO6ae8eaQmMmHlC6yojIr5K03F44lbnqTB
S7xSEn+sJkdgDT11hIbXCO5IM/qxmIB+kxnpFvIaLV0j588tIbA6bFCovPQ1
4qWW+UkvJbCy21AmbPMbzGUbVR1SIqCZVm8kYPEWndZq2TxlAktkaYGT+96j
l3X2TiydgIioN23wRDE8VsnVS64hMLA9WHI0uxgRBu/aWyhXx0TLTf8pxtuZ
dUEPDAhURH5PuLaqBEsNVAM2GhKIkuI8SM0pgdKw/vkwYwLSqmqfP98thcMv
gVwHBgG6aYywzJVP6EtzLDK3ovK/J0HsTuYnbBMR5JtZU/kbfkd82adPEPS6
1sTYTWCoMltaS+AzHoTMnDLdSyDf+qP6xoufwT/ot/rAQSrfjk5sdvUsw56L
HvbfjhDYHuwY/vJABV7MF4mcOkPFJ67U/P65CiywtLuncZZab7qKWEx8Bc4d
zt637xxVD4q6Il2+VeCp0rzk5z4Ebs04Xl9kXolN56PTQv0J/Al0Sjmztgob
2v/OPRNOICTA+ZmudA1WxD2ZjbxD4ET0J28F/Rr4iAd/G0ohsC9VzUDEugYf
PjZZ7rhLQKOw51VbVA1ezNm3T/oegW+kc2GU0BcYC3g8fvOQmo+/S8XgyBfY
bp/k7XlG4PUF1/aH9d8wZdRg0FBFIMvkZLPiyDfUbroWHlVDzU/oTH2cVC2s
Si/1m38l4BMTUHZhby04whHdn+oIGN5PyNvZVIvlHJUvP5qp/Pzzu+iiRx16
Y3escOwj8GueZJyqVz127lunNV+Eiz2cheL2IfW44httOY/GRXWddMTt6/Xo
erkmZe4/XLy7qXhZ/Fk9dievL5eU4OLOMrrvOLceC+VuuRrIcGG7ZuOR6rMN
yD3ZnN6/nIuftidXeft+h+P8up6pbVxEdm/1uH3lO4JHVxQrWnKx/oR6TuHN
72AE+6Ss38lF6oV2VdqL75BhmNuG7ObiaJKVbCrxHV7092Lqtlz0N62ZLjve
iNeVD4a+nORizHqqWuFwE8quriIeXedi4dYYt1JGM2jTTYdqfnOxOacQ2rub
8fzLgFVODxd+81jyNx2b0Uuv7I3o4+J3rUWNe2gz9MNGxvawuHhqI7Z6wedm
3MgwqRGe5ML6xGWew9YWMMdyXAckR3A95kL01M6fKNwjtPuN6QgWNLo+N7Jr
xf1H5599yhsBg206tO9kK8ynk6U2PRuBl6iSqrd/K9Y6zlqUvRhB/bofNx6n
tMJn0tO84f0I4u+an1Fpa8VY22jE/OoRyBzTWD3Pvg3Rpj57FvaPQJE/kNfh
0I7Xcrobt6mNQk3ZIyfcqRNb3j59/S5zFNEdKvdjznSiWHvqT/5/oxhPbU66
GdIJWUPdyuzHo6hU2HTtYVonYl4qFKS/GIXHIsVjZb868ab07sqnn0dhJ+QS
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
5+qvK8b/AJiNwfE=
       "]]}}, 
    InsetBox["0.30000000000000004`", {1.1, 1.5882096333554363`}]}, {{{}, {}, 
     {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
/AtT1g==
       "]]}}, InsetBox["0.5`", {1.1, 0.9822603219536675}]}, {{{}, {}, 
     {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
8uYmCUvWqdkuf50C/wdXSlqB
       "]]}}, 
    InsetBox["0.7000000000000001`", {1.1, 0.7077358343173563}]}, {{{}, {}, 
     {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
B5YwuZ4=
       "]]}}, InsetBox["0.9`", {1.1, 0.5524569914990429}]}, {{{}, {}, 
     {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
crFaGg//AlBTb5I=
       "]]}}, InsetBox["1.1`", {1.1, 0.45284364539239536`}]}, 
   {RGBColor[1, 0, 0], LineBox[{{1, 0}, {1, 6}}]}},
  AspectRatio->1,
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.2},
  Frame->True,
  FrameLabel->{{
     FormBox["\"Subscript[R, d]\"", TraditionalForm], None}, {
     FormBox["\"r= \[Omega]/Subscript[\[Omega], n]\"", TraditionalForm], 
     FormBox[
     "\"Dynamics Response vs. Frequency ratio for different \[Xi]\"", 
      TraditionalForm]}},
  GridLines->Automatic,
  GridLinesStyle->Dashing[{Small, Small}],
  ImageSize->200,
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.610964553175173*^9, 3.6109760254473495`*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["(* Program: Input, Shift-Tab, Shift-Tab *)",
  FontColor->RGBColor[
   0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]],
 StyleBox["\n",
  FontColor->RGBColor[1., 0., 0.]],
 "\nRd[r_,z_]:=1/Sqrt[(1-r^2)^2+(2 z r)^2];\n\n\
phase[r_,z_]:=Module[{t},t=ArcTan[(2z r)/(1-r^2)];\nIf[t<0,t=t+Pi];\n180/Pi \
t];\n\nplotOneZeta[z_,f_]:=Module[{r,p1,p2},p1=Plot[f[r,z],{r,0,3},PlotRange\
\[Rule]All,PlotStyle\[Rule]Blue];\np2=Graphics[Text[z,{1.1,1.1f[1.1,z]}]];\n\
Show[{p1,p2}]];\n\np1=Graphics[{Red,Line[{{1,0},{1,6}}]}];\n\
p2=Map[plotOneZeta[#,Rd]&,Range[.1,1.2,.2]];\n\n\
Show[p2,p1,FrameLabel\[Rule]{{\"Subscript[R, d]\",None},{\"r= \
\[Omega]/Subscript[\[Omega], n]\",\"Dynamics Response vs. Frequency ratio for \
different \[Xi]\"}},Frame\[Rule]True,GridLines\[Rule]Automatic,GridLinesStyle\
\[Rule]Dashed,ImageSize\[Rule]200,AspectRatio\[Rule]1]"
}], "Program",
 CellChangeTimes->{{3.6109564139086337`*^9, 3.610956413913634*^9}, {
   3.6109581928743844`*^9, 3.6109582040860257`*^9}, {3.6109582341027427`*^9, 
   3.610958290661978*^9}, {3.6109585629285507`*^9, 3.610958578192424*^9}, 
   3.6109586652294016`*^9, {3.6109638655918455`*^9, 3.6109638949705257`*^9}, 
   3.610963985187686*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples", "Title",
 CellChangeTimes->{
  3.610940691224347*^9, {3.6110341649972672`*^9, 3.611034166846373*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "How High School Students Discovered New Formulas Using ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " (",
 ButtonBox["Reference",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.mathematica-journal.com/2013/12/chocolate-games/"], None},
  ButtonNote->"http://www.mathematica-journal.com/2013/12/chocolate-games/"],
 ")"
}], "Section",
 CellChangeTimes->{
  3.6107053378349037`*^9, {3.6109761345355887`*^9, 3.61097616586038*^9}, {
   3.6109762350053353`*^9, 3.610976242916788*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "ab", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Column", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Column", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"x", ",", "y", ",", "z"}], "}"}], "==", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Text", "[", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"Rowr", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{"game1count", ",", "2"}], "]"}], "==", "0"}], 
                    ",", "\"\<second\>\"", ",", "\"\<first\>\""}], "]"}], 
                    ",", "\"\< player won\>\""}], "}"}], "]"}], ",", 
                  "Medium"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Text", "[", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{"game1count", ",", "2"}], "]"}], "==", "0"}], 
                    ",", "\"\<first\>\"", ",", "\"\<second\>\""}], "]"}], 
                    ",", "\"\< player's turn\>\""}], "}"}], "]"}], ",", 
                  "Medium"}], "]"}], "]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"EventHandler", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Framed", "@", 
                RowBox[{"Graphics", "[", 
                 RowBox[{
                  RowBox[{"game1graphics", "[", 
                   RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"PlotRange", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "8"}], ",", "9"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "9"}], "}"}]}], "}"}]}], ",", 
                  RowBox[{"ImageSize", "\[Rule]", 
                   RowBox[{"1.2", 
                    RowBox[{"{", 
                    RowBox[{"350", ",", "200"}], "}"}]}]}], ",", 
                  RowBox[{"Background", "\[Rule]", "Black"}]}], "]"}]}], ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{"game1count", ",", "2"}], "]"}], "\[Equal]", 
                    "0"}], "&&", 
                    RowBox[{"firstplayer", "\[Equal]", "\"\<human\>\""}]}], 
                    ")"}], "||", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{"game1count", ",", "2"}], "]"}], "\[Equal]", 
                    "1"}], "&&", 
                    RowBox[{"secondplayer", "\[Equal]", "\"\<human\>\""}]}], 
                    ")"}]}], ")"}], "&&", 
                  RowBox[{"!", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "\[Equal]", "0"}], "&&", 
                    RowBox[{"y", "\[Equal]", "0"}], "&&", 
                    RowBox[{"z", "\[Equal]", "0"}]}], ")"}]}]}], ",", 
                 RowBox[{"\"\<MouseDown\>\"", ":>", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"ab", "=", 
                    RowBox[{"MousePosition", "[", "\"\<Graphics\>\"", "]"}]}],
                     ";", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "z", ",", "game1count"}], 
                    "}"}], "=", 
                    RowBox[{"cutplayer", "[", 
                    RowBox[{
                    "ab", ",", "x", ",", "y", ",", "z", ",", "game1count"}], 
                    "]"}]}]}], ")"}]}]}], "]"}]}], "\[IndentingNewLine]", 
              "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Button", "[", 
              RowBox[{"\"\<click for computer to move\>\"", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{"game1count", ",", "2"}], "]"}], "\[Equal]", 
                    "0"}], "&&", 
                    RowBox[{"firstplayer", "\[Equal]", "\"\<computer\>\""}]}],
                     ")"}], "||", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{"game1count", ",", "2"}], "]"}], "\[Equal]", 
                    "1"}], "&&", 
                    RowBox[{
                    "secondplayer", "\[Equal]", "\"\<computer\>\""}]}], 
                    ")"}]}], ")"}], "&&", 
                  RowBox[{"!", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "\[Equal]", "0"}], "&&", 
                    RowBox[{"y", "\[Equal]", "0"}], "&&", 
                    RowBox[{"z", "\[Equal]", "0"}]}], ")"}]}]}], ",", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"x", ",", "y", ",", "z", ",", "game1count"}], 
                   "}"}], "=", 
                  RowBox[{"cutcomputer", "[", 
                   RowBox[{"x", ",", "y", ",", "z", ",", "game1count"}], 
                   "]"}]}]}], "]"}], ",", 
               RowBox[{"BaseStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<GenericButton\>\"", ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "z"}], "}"}], "\[NotEqual]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{"game1count", ",", "2"}], "]"}], "\[Equal]", 
                    "0"}], "&&", 
                    RowBox[{"firstplayer", "\[Equal]", "\"\<computer\>\""}]}],
                     ")"}], "||", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{"game1count", ",", "2"}], "]"}], "\[Equal]", 
                    "1"}], "&&", 
                    RowBox[{
                    "secondplayer", "\[Equal]", "\"\<computer\>\""}]}], 
                    ")"}]}], ")"}]}], ",", "Bold", ",", 
                    RowBox[{"{", 
                    RowBox[{"Plain", ",", "Gray"}], "}"}]}], "]"}]}], "}"}]}],
                ",", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"210", ",", "30"}], "}"}]}]}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], ",", "Center"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "@", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"nimsum", ",", "Identity", ",", "Invisible"}], "]"}], "@",
            "\[IndentingNewLine]", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"Row", "[", 
                  RowBox[{"{", 
                   RowBox[{
                   "x", ",", "\"\<\[CirclePlus]\>\"", ",", "y", ",", 
                    "\"\<\[CirclePlus]\>\"", ",", "z", ",", "\"\< = \>\"", 
                    ",", 
                    RowBox[{"BitXor", "[", 
                    RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "}"}], "]"}], 
                 ",", "Medium"}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"BitXor", "[", 
                    RowBox[{"x", ",", "y", ",", "z"}], "]"}], "==", "0"}], 
                  ",", "\"\<losing state\>\"", ",", "\"\<winning state\>\""}],
                  "]"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Grid", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Prepend", "[", 
                  RowBox[{
                   RowBox[{"Transpose", "[", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"HoldForm", "[", 
                    SuperscriptBox["2", "2"], "]"}], ",", 
                    RowBox[{"HoldForm", "[", 
                    SuperscriptBox["2", "1"], "]"}], ",", 
                    RowBox[{"HoldForm", "[", 
                    SuperscriptBox["2", "0"], "]"}]}], "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"IntegerDigits", "[", 
                    RowBox[{"x", ",", "2", ",", "3"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"IntegerDigits", "[", 
                    RowBox[{"y", ",", "2", ",", "3"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"IntegerDigits", "[", 
                    RowBox[{"z", ",", "2", ",", "3"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"IntegerDigits", "[", 
                    RowBox[{
                    RowBox[{"BitXor", "[", 
                    RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", "2", ",", 
                    "3"}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"{", 
                    RowBox[{"\"\<\>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}], ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<z\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<nim\[Hyphen]sum\>\""}], "}"}]}], "]"}], ",", 
                 RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], 
              "\[IndentingNewLine]", "}"}], ",", 
             RowBox[{"Alignment", "\[Rule]", "Center"}]}], 
            "\[IndentingNewLine]", "]"}]}]}]}], "\[IndentingNewLine]", "}"}], 
       ",", 
       RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "controls", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Column", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Control", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"nimsum", ",", "False", ",", "\"\<nim\[Hyphen]sum\>\""}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"False", ",", "True"}], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", "\"\<\>\"", ",", "\[IndentingNewLine]", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<dimensions relative to bitter square\>\"", ",", "Bold"}],
         "]"}], ",", "\[IndentingNewLine]", "\"\<\>\"", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Grid", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Row", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Text", "@", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<x\>\"", ",", "Italic", ",", "10"}], "]"}]}], 
               ",", "\"\< left\>\""}], "}"}], "]"}], ",", 
            RowBox[{"Control", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"x", ",", "7", ",", "\"\<\>\""}], "}"}], ",", "0", 
               ",", "7", ",", "1", ",", 
               RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
               RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
              "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Row", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Text", "@", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<y\>\"", ",", "Italic", ",", "10"}], "]"}]}], 
               ",", "\"\< above\>\""}], "}"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Control", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"y", ",", "7", ",", "\"\<\>\""}], "}"}], ",", "0", 
               ",", "7", ",", "1", ",", 
               RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
               RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
              "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Row", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Text", "@", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<z\>\"", ",", "Italic", ",", "10"}], "]"}]}], 
               ",", "\"\< right\>\""}], "}"}], "]"}], ",", 
            RowBox[{"Control", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"z", ",", "7", ",", "\"\<\>\""}], "}"}], ",", "0", 
               ",", "7", ",", "1", ",", 
               RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
               RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
              "}"}]}]}], "}"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
       "\[IndentingNewLine]", "\"\<\>\"", ",", "\[IndentingNewLine]", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<choice of players\>\"", ",", "Bold"}], "]"}], ",", 
       "\[IndentingNewLine]", "\"\<\>\"", ",", "\[IndentingNewLine]", 
       RowBox[{"Grid", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<first\>\"", ",", 
            RowBox[{"Control", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "firstplayer", ",", "\"\<human\>\"", ",", "\"\<\>\""}], "}"}],
                ",", 
               RowBox[{"{", 
                RowBox[{"\"\<human\>\"", ",", "\"\<computer\>\""}], "}"}]}], 
              "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"\"\<second\>\"", ",", 
            RowBox[{"Control", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "secondplayer", ",", "\"\<human\>\"", ",", "\"\<\>\""}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\"\<human\>\"", ",", "\"\<computer\>\""}], "}"}]}], 
              "}"}]}]}], "}"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
       "\[IndentingNewLine]", "\"\<\>\"", ",", "\[IndentingNewLine]", 
       "\"\<\>\"", ",", "\[IndentingNewLine]", 
       RowBox[{"Button", "[", 
        RowBox[{"\"\<new game\>\"", ",", 
         RowBox[{"game1count", "=", "0"}], ",", 
         RowBox[{"BaseStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<GenericButton\>\"", ",", "10"}], "}"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"90", ",", "28"}], "}"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", "\"\<\>\"", ",", "\[IndentingNewLine]", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Click a line to make a move.\>\"", ",", "Bold"}], 
        "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"ControlPlacement", "\[Rule]", "Left"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Initialization", "\[RuleDelayed]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"game1count", "=", "0"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"game1graphics", "[", 
        RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
       "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Brown", ",", 
           RowBox[{"Polygon", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "x"}], ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "x"}], ",", 
                RowBox[{"1", "+", "y"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "+", "z"}], ",", 
                RowBox[{"1", "+", "y"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "+", "z"}], ",", "0"}], "}"}]}], "}"}], "]"}]}], 
          "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Blue", ",", 
           RowBox[{"Polygon", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Black", ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "k"}], ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "k"}], ",", 
                  RowBox[{"1", "+", "y"}]}], "}"}]}], "}"}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "0", ",", "x"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Black", ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "x"}], ",", "k"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"1", "+", "z"}], ",", "k"}], "}"}]}], "}"}], 
              "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "0", ",", 
             RowBox[{"y", "+", "1"}]}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Black", ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"1", "+", "k"}], ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"1", "+", "k"}], ",", 
                  RowBox[{"1", "+", "y"}]}], "}"}]}], "}"}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "0", ",", "z"}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"cutplayer", "[", 
        RowBox[{"ab_", ",", "x_", ",", "y_", ",", "z_", ",", "count_"}], 
        "]"}], ":=", "\[IndentingNewLine]", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "X", ",", "Y", ",", "Z", ",", "g"}], 
          "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a", ",", "b"}], "}"}], "=", "ab"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"X", "=", 
           RowBox[{"Y", "=", 
            RowBox[{"Z", "=", "0"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"g", "=", "0.2"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"-", "x"}], "\[LessEqual]", "a", "\[LessEqual]", 
              RowBox[{"1", "+", "z"}]}], "&&", 
             RowBox[{"0", "\[LessEqual]", "b", "\[LessEqual]", 
              RowBox[{"1", "+", "y"}]}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Do", "[", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "n"}], "-", "g"}], "<", "a", "<", 
                  RowBox[{
                   RowBox[{"-", "n"}], "+", "g"}]}], ",", 
                 RowBox[{"X", "=", 
                  RowBox[{"x", "-", "n"}]}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "0", ",", 
                 RowBox[{"x", "-", "1"}]}], "}"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Do", "[", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"1", "+", "n", "-", "g"}], "<", "b", "<", 
                  RowBox[{"1", "+", "n", "+", "g"}]}], ",", 
                 RowBox[{"Y", "=", 
                  RowBox[{"y", "-", "n"}]}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "0", ",", 
                 RowBox[{"y", "-", "1"}]}], "}"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Do", "[", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"1", "+", "n", "-", "g"}], "<", "a", "<", 
                  RowBox[{"1", "+", "n", "+", "g"}]}], ",", 
                 RowBox[{"Z", "=", 
                  RowBox[{"z", "-", "n"}]}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "0", ",", "z"}], "}"}]}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"X", "+", "Y", "+", "Z"}], "\[NotEqual]", "0"}], "&&", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"X", "+", "Y"}], "\[Equal]", "0"}], "||", 
               RowBox[{
                RowBox[{"Y", "+", "Z"}], "\[Equal]", "0"}], "||", 
               RowBox[{
                RowBox[{"Z", "+", "X"}], "==", "0"}]}], ")"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "-", "X"}], ",", 
              RowBox[{"y", "-", "Y"}], ",", 
              RowBox[{"z", "-", "Z"}], ",", 
              RowBox[{"count", "+", "1"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z", ",", "count"}], "}"}]}], 
           "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"cutcomputer", "[", 
        RowBox[{"x_", ",", "y_", ",", "z_", ",", "count_"}], "]"}], ":=", 
       "\[IndentingNewLine]", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xyzc", ",", "randomway"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"xyzc", "=", 
           RowBox[{"{", 
            RowBox[{"x", ",", "y", ",", "z", ",", "count"}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"randomway", "=", 
           RowBox[{"RandomInteger", "[", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"x", "+", "y", "+", "z", "-", "1"}]}], "}"}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"BitXor", "[", 
              RowBox[{"x", ",", "y", ",", "z"}], "]"}], "\[NotEqual]", "0"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"BitXor", "[", 
                  RowBox[{"x", ",", "y"}], "]"}], "<", "z"}], ",", 
                RowBox[{"xyzc", "=", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y", ",", 
                   RowBox[{"BitXor", "[", 
                    RowBox[{"x", ",", "y"}], "]"}], ",", 
                   RowBox[{"count", "+", "1"}]}], "}"}]}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"BitXor", "[", 
                  RowBox[{"y", ",", "z"}], "]"}], "<", "x"}], ",", 
                RowBox[{"xyzc", "=", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"BitXor", "[", 
                    RowBox[{"y", ",", "z"}], "]"}], ",", "y", ",", "z", ",", 
                   RowBox[{"count", "+", "1"}]}], "}"}]}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"BitXor", "[", 
                  RowBox[{"z", ",", "x"}], "]"}], "<", "y"}], ",", 
                RowBox[{"xyzc", "=", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", 
                   RowBox[{"BitXor", "[", 
                    RowBox[{"z", ",", "x"}], "]"}], ",", "z", ",", 
                   RowBox[{"count", "+", "1"}]}], "}"}]}]}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"randomway", "\[LessEqual]", 
                 RowBox[{"x", "-", "1"}]}], ",", 
                RowBox[{"xyzc", "=", 
                 RowBox[{"{", 
                  RowBox[{"randomway", ",", "y", ",", "z", ",", 
                   RowBox[{"count", "+", "1"}]}], "}"}]}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"x", "\[LessEqual]", "randomway", "\[LessEqual]", 
                 RowBox[{"x", "+", "y", "-", "1"}]}], ",", 
                RowBox[{"xyzc", "=", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", 
                   RowBox[{"randomway", "-", "x"}], ",", "z", ",", 
                   RowBox[{"count", "+", "1"}]}], "}"}]}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"x", "+", "y"}], "\[LessEqual]", "randomway"}], ",", 
                RowBox[{"xyzc", "=", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y", ",", 
                   RowBox[{"randomway", "-", "x", "-", "y"}], ",", 
                   RowBox[{"count", "+", "1"}]}], "}"}]}]}], "]"}]}], 
             "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}], 
          ";", "\[IndentingNewLine]", "xyzc"}]}], "\[IndentingNewLine]", 
        "]"}]}]}], "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.590412664958887*^9, 3.5904126715214157`*^9}, 
   3.590412702908557*^9, {3.5904127502425337`*^9, 3.590412808107501*^9}, {
   3.590412970110304*^9, 3.590413037591112*^9}, {3.590413424912237*^9, 
   3.590413508903419*^9}, {3.590413548901524*^9, 3.590413591840111*^9}, 
   3.590413729708602*^9, {3.590413762815461*^9, 3.590413780780189*^9}, {
   3.590413818769004*^9, 3.590413894200137*^9}, {3.590413932806179*^9, 
   3.590413934048161*^9}, {3.590413966277141*^9, 3.590414000593655*^9}, {
   3.590414040827066*^9, 3.590414093670395*^9}, {3.5904142395865927`*^9, 
   3.590414321595222*^9}, {3.5904143600442743`*^9, 3.5904143755895*^9}, {
   3.590414406147221*^9, 3.590414520724126*^9}, {3.5904247253234177`*^9, 
   3.590424781612903*^9}, {3.5904248121800127`*^9, 3.590424844408943*^9}, {
   3.590425007827917*^9, 3.590425025619347*^9}, {3.590425090989859*^9, 
   3.590425152183319*^9}, 3.590425224616104*^9, {3.59042793800743*^9, 
   3.5904279720977287`*^9}, {3.590428028216002*^9, 3.590428032421206*^9}, {
   3.590428521997953*^9, 3.5904286119151077`*^9}, 3.590502103911756*^9, {
   3.5905184097321997`*^9, 3.590518410850222*^9}, {3.590518458176223*^9, 
   3.590518459408476*^9}, {3.590518499790473*^9, 3.590518509809173*^9}, {
   3.590518577749518*^9, 3.590518582004819*^9}, {3.590518776889237*^9, 
   3.590518799079871*^9}, {3.590519676094531*^9, 3.59051968130643*^9}, {
   3.590519792831641*^9, 3.590519812089172*^9}, 3.590519970194549*^9, 
   3.590520096744514*^9, 3.590520161109976*^9, {3.590691701014979*^9, 
   3.5906917044835663`*^9}, 3.590693363660387*^9, {3.5906933977522306`*^9, 
   3.5906934344454107`*^9}, {3.5906935119663687`*^9, 3.590693517409992*^9}, {
   3.590693572537199*^9, 3.590693572584063*^9}, {3.5906939891281424`*^9, 
   3.590693999028123*^9}, {3.590695330287188*^9, 3.590695337850811*^9}, {
   3.590695565274707*^9, 3.590695635522344*^9}, 3.592940900777619*^9, {
   3.592941089194119*^9, 3.592941193738976*^9}, {3.592941260658407*^9, 
   3.592941264344904*^9}, {3.592941302254178*^9, 3.5929413024839373`*^9}, {
   3.592941361353751*^9, 3.5929413673743343`*^9}, {3.592941407108952*^9, 
   3.5929414084453487`*^9}, {3.592941466960638*^9, 3.592941467588809*^9}, 
   3.592941522333321*^9, {3.59303459491505*^9, 3.593034595926106*^9}, {
   3.5953890114688787`*^9, 3.5953890155368156`*^9}, {3.596207728456328*^9, 
   3.596207734942552*^9}, 3.6110472912020435`*^9, {3.6111997745947304`*^9, 
   3.611199775862803*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`firstplayer$$ = 
    "human", $CellContext`nimsum$$ = False, $CellContext`secondplayer$$ = 
    "human", $CellContext`x$$ = 7, $CellContext`y$$ = 7, $CellContext`z$$ = 7,
     Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`nimsum$$], False, "nim\[Hyphen]sum"}, {
      False, True}}, {{
       Hold[$CellContext`x$$], 7, ""}, 0, 7, 1}, {{
       Hold[$CellContext`y$$], 7, ""}, 0, 7, 1}, {{
       Hold[$CellContext`z$$], 7, ""}, 0, 7, 1}, {{
       Hold[$CellContext`firstplayer$$], "human", ""}, {
      "human", "computer"}}, {{
       Hold[$CellContext`secondplayer$$], "human", ""}, {
      "human", "computer"}}, {
      Hold[
       Column[{
         Manipulate`Place[1], "", 
         Style["dimensions relative to bitter square", Bold], "", 
         Grid[{{
            Row[{
              Text[
               Style["x", Italic, 10]], " left"}], 
            Manipulate`Place[2]}, {
            Row[{
              Text[
               Style["y", Italic, 10]], " above"}], 
            Manipulate`Place[3]}, {
            Row[{
              Text[
               Style["z", Italic, 10]], " right"}], 
            Manipulate`Place[4]}}], "", 
         Style["choice of players", Bold], "", 
         Grid[{{"first", 
            Manipulate`Place[5]}, {"second", 
            Manipulate`Place[6]}}], "", "", 
         Button[
         "new game", $CellContext`game1count = 0, 
          BaseStyle -> {"GenericButton", 10}, ImageSize -> {90, 28}], "", 
         Style["Click a line to make a move.", Bold]}, Alignment -> Center]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    646., {312., 319.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`nimsum$11250$$ = 
    False, $CellContext`x$11251$$ = 0, $CellContext`y$11252$$ = 
    0, $CellContext`z$11253$$ = 0, $CellContext`firstplayer$11254$$ = 
    False, $CellContext`secondplayer$11255$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`firstplayer$$ = 
        "human", $CellContext`nimsum$$ = False, $CellContext`secondplayer$$ = 
        "human", $CellContext`x$$ = 7, $CellContext`y$$ = 7, $CellContext`z$$ = 
        7}, "ControllerVariables" :> {
        Hold[$CellContext`nimsum$$, $CellContext`nimsum$11250$$, False], 
        Hold[$CellContext`x$$, $CellContext`x$11251$$, 0], 
        Hold[$CellContext`y$$, $CellContext`y$11252$$, 0], 
        Hold[$CellContext`z$$, $CellContext`z$11253$$, 0], 
        Hold[$CellContext`firstplayer$$, $CellContext`firstplayer$11254$$, 
         False], 
        Hold[$CellContext`secondplayer$$, $CellContext`secondplayer$11255$$, 
         False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Module[{$CellContext`ab$}, 
        Column[{
          Column[{
            
            If[{$CellContext`x$$, $CellContext`y$$, $CellContext`z$$} == {0, 
              0, 0}, 
             Text[
              Style[
               Row[{
                 If[Mod[$CellContext`game1count, 2] == 0, "second", "first"], 
                 " player won"}], Medium]], 
             Text[
              Style[
               Row[{
                 If[Mod[$CellContext`game1count, 2] == 0, "first", "second"], 
                 " player's turn"}], Medium]]], 
            EventHandler[
             Framed[
              Graphics[
               $CellContext`game1graphics[$CellContext`x$$, $CellContext`y$$, \
$CellContext`z$$], PlotRange -> {{-8, 9}, {-1, 9}}, ImageSize -> 
               1.2 {350, 200}, Background -> Black]], 
             If[
              And[
               Or[
                And[
                Mod[$CellContext`game1count, 2] == 
                 0, $CellContext`firstplayer$$ == "human"], 
                And[
                Mod[$CellContext`game1count, 2] == 
                 1, $CellContext`secondplayer$$ == "human"]], 
               Not[
                
                And[$CellContext`x$$ == 0, $CellContext`y$$ == 
                 0, $CellContext`z$$ == 0]]], 
              "MouseDown" :> ($CellContext`ab$ = 
                MousePosition[
                 "Graphics"]; {$CellContext`x$$, $CellContext`y$$, \
$CellContext`z$$, $CellContext`game1count} = \
$CellContext`cutplayer[$CellContext`ab$, $CellContext`x$$, $CellContext`y$$, \
$CellContext`z$$, $CellContext`game1count])]], 
            Button["click for computer to move", 
             If[
              And[
               Or[
                And[
                Mod[$CellContext`game1count, 2] == 
                 0, $CellContext`firstplayer$$ == "computer"], 
                And[
                Mod[$CellContext`game1count, 2] == 
                 1, $CellContext`secondplayer$$ == "computer"]], 
               Not[
                
                And[$CellContext`x$$ == 0, $CellContext`y$$ == 
                 0, $CellContext`z$$ == 
                 0]]], {$CellContext`x$$, $CellContext`y$$, $CellContext`z$$, \
$CellContext`game1count} = $CellContext`cutcomputer[$CellContext`x$$, \
$CellContext`y$$, $CellContext`z$$, $CellContext`game1count]], 
             BaseStyle -> {"GenericButton", 
               If[
                
                And[{$CellContext`x$$, $CellContext`y$$, $CellContext`z$$} != \
{0, 0, 0}, 
                 Or[
                  And[
                  Mod[$CellContext`game1count, 2] == 
                   0, $CellContext`firstplayer$$ == "computer"], 
                  And[
                  Mod[$CellContext`game1count, 2] == 
                   1, $CellContext`secondplayer$$ == "computer"]]], Bold, {
                Plain, Gray}]}, ImageSize -> {210, 30}]}, Center], 
          Text[
           If[$CellContext`nimsum$$, Identity, Invisible][
            Column[{
              Style[
               
               Row[{$CellContext`x$$, "\[CirclePlus]", $CellContext`y$$, 
                 "\[CirclePlus]", $CellContext`z$$, " = ", 
                 
                 BitXor[$CellContext`x$$, $CellContext`y$$, \
$CellContext`z$$]}], Medium], 
              Style[
               If[
               BitXor[$CellContext`x$$, $CellContext`y$$, $CellContext`z$$] == 
                0, "losing state", "winning state"]], 
              Grid[
               Prepend[
                Transpose[{{
                   HoldForm[2^2], 
                   HoldForm[2^1], 
                   HoldForm[2^0]}, 
                  IntegerDigits[$CellContext`x$$, 2, 3], 
                  IntegerDigits[$CellContext`y$$, 2, 3], 
                  IntegerDigits[$CellContext`z$$, 2, 3], 
                  IntegerDigits[
                   
                   BitXor[$CellContext`x$$, $CellContext`y$$, \
$CellContext`z$$], 2, 3]}], {"", 
                 Style["x", Italic], 
                 Style["y", Italic], 
                 Style["z", Italic], "nim\[Hyphen]sum"}], Frame -> All]}, 
             Alignment -> Center]]]}, Alignment -> Center]], 
      "Specifications" :> {{{$CellContext`nimsum$$, False, 
          "nim\[Hyphen]sum"}, {False, True}, ControlPlacement -> 
         1}, {{$CellContext`x$$, 7, ""}, 0, 7, 1, ImageSize -> Tiny, 
         Appearance -> "Labeled", ControlPlacement -> 
         2}, {{$CellContext`y$$, 7, ""}, 0, 7, 1, ImageSize -> Tiny, 
         Appearance -> "Labeled", ControlPlacement -> 
         3}, {{$CellContext`z$$, 7, ""}, 0, 7, 1, ImageSize -> Tiny, 
         Appearance -> "Labeled", ControlPlacement -> 
         4}, {{$CellContext`firstplayer$$, "human", ""}, {
         "human", "computer"}, ControlPlacement -> 
         5}, {{$CellContext`secondplayer$$, "human", ""}, {
         "human", "computer"}, ControlPlacement -> 6}, 
        Column[{
          Manipulate`Place[1], "", 
          Style["dimensions relative to bitter square", Bold], "", 
          Grid[{{
             Row[{
               Text[
                Style["x", Italic, 10]], " left"}], 
             Manipulate`Place[2]}, {
             Row[{
               Text[
                Style["y", Italic, 10]], " above"}], 
             Manipulate`Place[3]}, {
             Row[{
               Text[
                Style["z", Italic, 10]], " right"}], 
             Manipulate`Place[4]}}], "", 
          Style["choice of players", Bold], "", 
          Grid[{{"first", 
             Manipulate`Place[5]}, {"second", 
             Manipulate`Place[6]}}], "", "", 
          Button[
          "new game", $CellContext`game1count = 0, 
           BaseStyle -> {"GenericButton", 10}, ImageSize -> {90, 28}], "", 
          Style["Click a line to make a move.", Bold]}, Alignment -> Center]},
       "Options" :> {ControlPlacement -> Left}, "DefaultOptions" :> {}],
     ImageSizeCache->{1006., {356., 363.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`game1count = 0; $CellContext`game1graphics[
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           Blank[]], 
          Pattern[$CellContext`z, 
           Blank[]]] := {{Brown, 
           
           Polygon[{{-$CellContext`x, 0}, {-$CellContext`x, 
              1 + $CellContext`y}, {1 + $CellContext`z, 1 + $CellContext`y}, {
             1 + $CellContext`z, 0}}]}, {Blue, 
           Polygon[{{0, 0}, {0, 1}, {1, 1}, {1, 0}}]}, 
          Table[{Black, 
            
            Line[{{-$CellContext`k, 0}, {-$CellContext`k, 
               1 + $CellContext`y}}]}, {$CellContext`k, 0, $CellContext`x}], 
          Table[{Black, 
            
            Line[{{-$CellContext`x, $CellContext`k}, {
              1 + $CellContext`z, $CellContext`k}}]}, {$CellContext`k, 
            0, $CellContext`y + 1}], 
          Table[{Black, 
            
            Line[{{1 + $CellContext`k, 0}, {
              1 + $CellContext`k, 1 + $CellContext`y}}]}, {$CellContext`k, 
            0, $CellContext`z}]}; $CellContext`cutplayer[
          Pattern[$CellContext`ab, 
           Blank[]], 
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           Blank[]], 
          Pattern[$CellContext`z, 
           Blank[]], 
          Pattern[$CellContext`count, 
           Blank[]]] := 
        Block[{$CellContext`a, $CellContext`b, $CellContext`X, \
$CellContext`Y, $CellContext`Z, $CellContext`g}, {$CellContext`a, \
$CellContext`b} = $CellContext`ab; $CellContext`X = ($CellContext`Y = \
($CellContext`Z = 0)); $CellContext`g = 0.2; If[
            
            And[-$CellContext`x <= $CellContext`a <= 1 + $CellContext`z, 
             0 <= $CellContext`b <= 1 + $CellContext`y], Do[
              
              If[-$CellContext`n - $CellContext`g < $CellContext`a < \
-$CellContext`n + $CellContext`g, $CellContext`X = $CellContext`x - \
$CellContext`n], {$CellContext`n, 0, $CellContext`x - 1}]; Do[
              If[
              1 + $CellContext`n - $CellContext`g < $CellContext`b < 
               1 + $CellContext`n + $CellContext`g, $CellContext`Y = \
$CellContext`y - $CellContext`n], {$CellContext`n, 0, $CellContext`y - 1}]; Do[
              If[
              1 + $CellContext`n - $CellContext`g < $CellContext`a < 
               1 + $CellContext`n + $CellContext`g, $CellContext`Z = \
$CellContext`z - $CellContext`n], {$CellContext`n, 0, $CellContext`z}]; Null]; 
          If[
            And[$CellContext`X + $CellContext`Y + $CellContext`Z != 0, 
             
             Or[$CellContext`X + $CellContext`Y == 
              0, $CellContext`Y + $CellContext`Z == 
              0, $CellContext`Z + $CellContext`X == 
              0]], {$CellContext`x - $CellContext`X, $CellContext`y - \
$CellContext`Y, $CellContext`z - $CellContext`Z, $CellContext`count + 
             1}, {$CellContext`x, $CellContext`y, $CellContext`z, \
$CellContext`count}]]; $CellContext`cutcomputer[
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           Blank[]], 
          Pattern[$CellContext`z, 
           Blank[]], 
          Pattern[$CellContext`count, 
           Blank[]]] := 
        Block[{$CellContext`xyzc, $CellContext`randomway}, $CellContext`xyzc = \
{$CellContext`x, $CellContext`y, $CellContext`z, $CellContext`count}; \
$CellContext`randomway = 
           RandomInteger[{
             0, $CellContext`x + $CellContext`y + $CellContext`z - 1}]; 
          If[BitXor[$CellContext`x, $CellContext`y, $CellContext`z] != 0, {
             If[
             BitXor[$CellContext`x, $CellContext`y] < $CellContext`z, \
$CellContext`xyzc = {$CellContext`x, $CellContext`y, 
                BitXor[$CellContext`x, $CellContext`y], $CellContext`count + 
                1}], 
             If[
             BitXor[$CellContext`y, $CellContext`z] < $CellContext`x, \
$CellContext`xyzc = {
                
                BitXor[$CellContext`y, $CellContext`z], $CellContext`y, \
$CellContext`z, $CellContext`count + 1}], 
             If[
             BitXor[$CellContext`z, $CellContext`x] < $CellContext`y, \
$CellContext`xyzc = {$CellContext`x, 
                
                BitXor[$CellContext`z, $CellContext`x], $CellContext`z, \
$CellContext`count + 1}]}, {
             
             If[$CellContext`randomway <= $CellContext`x - 
               1, $CellContext`xyzc = {$CellContext`randomway, \
$CellContext`y, $CellContext`z, $CellContext`count + 1}], 
             
             If[$CellContext`x <= $CellContext`randomway <= $CellContext`x + \
$CellContext`y - 
               1, $CellContext`xyzc = {$CellContext`x, $CellContext`randomway - \
$CellContext`x, $CellContext`z, $CellContext`count + 1}], 
             
             If[$CellContext`x + $CellContext`y <= $CellContext`randomway, \
$CellContext`xyzc = {$CellContext`x, $CellContext`y, $CellContext`randomway - \
$CellContext`x - $CellContext`y, $CellContext`count + 
                1}]}]; $CellContext`xyzc]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.5906944769972343`*^9, {3.590695332116391*^9, 3.590695339866078*^9}, 
   3.590695477225441*^9, 3.59069564025681*^9, 3.5929409074068604`*^9, {
   3.592941095943694*^9, 3.592941203984153*^9}, 3.592941266853674*^9, 
   3.592941303839045*^9, 3.592941376829074*^9, 3.592941409615494*^9, 
   3.592941469765936*^9, 3.5929415247769203`*^9, 3.593370230190523*^9, 
   3.595389016921411*^9, 3.6109761133763785`*^9, 3.6110324767277036`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Creating formulas in a \[OpenCurlyDoubleQuote]Tab\[CloseCurlyDoubleQuote] - \
follow the instruction and try it out yourself!\
\>", "Section",
 CellChangeTimes->{
  3.610940691224347*^9, {3.61103432239727*^9, 3.611034348713775*^9}, {
   3.611034909337841*^9, 3.6110349258997884`*^9}, {3.6110417432867203`*^9, 
   3.6110417446097965`*^9}}],

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", "^", "6"}], "-", "1"}], ")"}]}], ",", "x"}], 
  "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.6110296945005693`*^9, 3.611029694530571*^9}, {
   3.6110320996751375`*^9, 3.6110321108807783`*^9}, {3.611032236668973*^9, 
   3.6110322458294973`*^9}, 3.6110329700959225`*^9, {3.611033044069154*^9, 
   3.611033070029639*^9}, 3.611033127539928*^9, {3.611033199123022*^9, 
   3.6110332011991415`*^9}, {3.6110332335549917`*^9, 3.611033259137455*^9}, {
   3.6110347791723957`*^9, 3.611034795066305*^9}, {3.611041777455675*^9, 
   3.6110418056802893`*^9}, 3.6110419168086452`*^9, {3.611199097988031*^9, 
   3.6111991304128857`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "12"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     SqrtBox["3"], " ", 
     RowBox[{"ArcTan", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "x"}]}], 
       SqrtBox["3"]], "]"}]}], "-", 
    RowBox[{"2", " ", 
     SqrtBox["3"], " ", 
     RowBox[{"ArcTan", "[", 
      FractionBox[
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "x"}]}], 
       SqrtBox["3"]], "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", "x"}], "]"}]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"Log", "[", 
      RowBox[{"1", "+", "x"}], "]"}]}], "+", 
    RowBox[{"Log", "[", 
     RowBox[{"1", "-", "x", "+", 
      SuperscriptBox["x", "2"]}], "]"}], "-", 
    RowBox[{"Log", "[", 
     RowBox[{"1", "+", "x", "+", 
      SuperscriptBox["x", "2"]}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.611034118260594*^9, 3.611199128168757*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.611034118260594*^9, {3.611064858182817*^9, 3.611064867994378*^9}, {
   3.611068633955779*^9, 3.61106864184123*^9}}],

Cell[CellGroupData[{

Cell["\<\
In the new blank cell above, press Ctrl-L (input right above), \
\[OpenCurlyDoubleQuote] = \[OpenCurlyDoubleQuote] , Ctrl-Shift-L (output \
right above). You should get this result:\
\>", "Subsubsubsubsection",
 CellChangeTimes->{
  3.61081924778518*^9, {3.6110332747083454`*^9, 3.611033344627345*^9}, {
   3.6110343619615326`*^9, 3.6110344629023066`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", "^", "6"}], "-", "1"}], ")"}]}], ",", "x"}], "]"}], "=", 
  RowBox[{
   FractionBox["1", "12"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      SqrtBox["3"], " ", 
      RowBox[{"ArcTan", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "x"}]}], 
        SqrtBox["3"]], "]"}]}], "-", 
     RowBox[{"2", " ", 
      SqrtBox["3"], " ", 
      RowBox[{"ArcTan", "[", 
       FractionBox[
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "x"}]}], 
        SqrtBox["3"]], "]"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", "x"}], "]"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"Log", "[", 
       RowBox[{"1", "+", "x"}], "]"}]}], "+", 
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", "x", "+", 
       SuperscriptBox["x", "2"]}], "]"}], "-", 
     RowBox[{"Log", "[", 
      RowBox[{"1", "+", "x", "+", 
       SuperscriptBox["x", "2"]}], "]"}]}], ")"}]}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.6110296945005693`*^9, 3.611029694530571*^9}, {
   3.6110320996751375`*^9, 3.6110321108807783`*^9}, {3.611032236668973*^9, 
   3.6110322458294973`*^9}, 3.6110329700959225`*^9, {3.611033044069154*^9, 
   3.611033070029639*^9}, 3.611033127539928*^9, {3.611033199123022*^9, 
   3.6110332011991415`*^9}, {3.6110332335549917`*^9, 
   3.6110332660828524`*^9}, {3.61103482906925*^9, 3.6110348405239053`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Put the cursor infront of the above cell, then press Tab to convert it to \
DisplayFormulaNumbered style, then Ctrl-Shift-T to display it in standard \
form aka \[OpenCurlyDoubleQuote]pretty math textbook\[CloseCurlyDoubleQuote] \
form. The result should look like this:\
\>", "Subsubsubsubsection",
 CellChangeTimes->{
  3.61081924778518*^9, {3.6110333198259263`*^9, 3.611033379905362*^9}, {
   3.6110334277050962`*^9, 3.611033449424339*^9}, {3.611034481620377*^9, 
   3.6110344818783917`*^9}, {3.61103488536547*^9, 3.61103490005431*^9}, {
   3.6110350014451094`*^9, 3.611035001869134*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[Integral]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{
       SuperscriptBox["x", "6"], "-", "1"}]], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "=", 
   RowBox[{
    FractionBox["1", "12"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"log", "(", 
       RowBox[{
        SuperscriptBox["x", "2"], "-", "x", "+", "1"}], ")"}], "-", 
      RowBox[{"log", "(", 
       RowBox[{
        SuperscriptBox["x", "2"], "+", "x", "+", "1"}], ")"}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"log", "(", 
        RowBox[{"1", "-", "x"}], ")"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"log", "(", 
        RowBox[{"x", "+", "1"}], ")"}]}], "-", 
      RowBox[{"2", " ", 
       SqrtBox["3"], " ", 
       RowBox[{
        SuperscriptBox["tan", 
         RowBox[{"-", "1"}]], "(", 
        FractionBox[
         RowBox[{
          RowBox[{"2", " ", "x"}], "-", "1"}], 
         SqrtBox["3"]], ")"}]}], "-", 
      RowBox[{"2", " ", 
       SqrtBox["3"], " ", 
       RowBox[{
        SuperscriptBox["tan", 
         RowBox[{"-", "1"}]], "(", 
        FractionBox[
         RowBox[{
          RowBox[{"2", " ", "x"}], "+", "1"}], 
         SqrtBox["3"]], ")"}]}]}], ")"}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.6110296945005693`*^9, 3.611029694530571*^9}, {
   3.6110320996751375`*^9, 3.6110321108807783`*^9}, {3.611032236668973*^9, 
   3.6110322458294973`*^9}, 3.6110329700959225`*^9, {3.611033044069154*^9, 
   3.611033070029639*^9}, 3.611033127539928*^9, {3.611033199123022*^9, 
   3.6110332011991415`*^9}, {3.6110332335549917`*^9, 
   3.6110332660828524`*^9}, {3.61103482906925*^9, 3.611034864423272*^9}, 
   3.6110648352055025`*^9}],

Cell["\<\
If you don\[CloseCurlyQuote]t want the number at the end, just put the cursor \
in front and press Tab again to convert it to DisplayFormula style (try it!). \
You should get this:\
\>", "Text",
 CellChangeTimes->{
  3.61081924778518*^9, {3.6110334559247103`*^9, 3.611033512074922*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[Integral]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{
       SuperscriptBox["x", "6"], "-", "1"}]], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "=", 
   RowBox[{
    FractionBox["1", "12"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"log", "(", 
        RowBox[{
         SuperscriptBox["x", "2"], "-", "x", "+", "1"}], ")"}], "-", 
       RowBox[{"log", "(", 
        RowBox[{
         SuperscriptBox["x", "2"], "+", "x", "+", "1"}], ")"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"log", "(", 
         RowBox[{"1", "-", "x"}], ")"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"log", "(", 
         RowBox[{"x", "+", "1"}], ")"}]}], "-", 
       RowBox[{"2", " ", 
        SqrtBox["3"], " ", 
        RowBox[{
         SuperscriptBox["tan", 
          RowBox[{"-", "1"}]], "(", 
         FractionBox[
          RowBox[{
           RowBox[{"2", " ", "x"}], "-", "1"}], 
          SqrtBox["3"]], ")"}]}]}], ",", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SqrtBox["3"], " ", 
       RowBox[{
        SuperscriptBox["tan", 
         RowBox[{"-", "1"}]], "(", 
        FractionBox[
         RowBox[{
          RowBox[{"2", " ", "x"}], "+", "1"}], 
         SqrtBox["3"]], ")"}]}]}], ")"}]}]}], 
  TraditionalForm]], "DisplayFormula",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.6110296945005693`*^9, 3.611029694530571*^9}, {
   3.6110320996751375`*^9, 3.6110321108807783`*^9}, {3.611032236668973*^9, 
   3.6110322458294973`*^9}, 3.6110329700959225`*^9, {3.611033044069154*^9, 
   3.611033070029639*^9}, 3.611033127539928*^9, {3.611033199123022*^9, 
   3.6110332011991415`*^9}, {3.6110332335549917`*^9, 
   3.6110332660828524`*^9}, {3.61103482906925*^9, 3.611034864423272*^9}, 
   3.61106498761122*^9}],

Cell["Voila!", "Text",
 CellChangeTimes->{
  3.61081924778518*^9, {3.6110333999805107`*^9, 3.611033405493826*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
ScreenStyleEnvironment->"Dark",
WindowToolbars->"EditBar",
WindowSize->{880, 690},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingPageRange->{Automatic, Automatic},
ShowSelection->True,
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (January 25, 2013)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell[
      "Solarized Mathematica", "Title", 
       CellChangeTimes -> {{3.6109826460750275`*^9, 3.6109826583167276`*^9}}], 
      Cell[
       TextData[{
         StyleBox["Disclaimer", FontWeight -> "Bold"], 
         ": please install the stylesheet at your own risk. If you have any \
question or feedback, please feel free contact me on Stackexchange: ", 
         ButtonBox[
         "http://mathematica.stackexchange.com/users/14587/seismatica", 
          BaseStyle -> "Hyperlink", ButtonData -> {
            URL[
            "http://mathematica.stackexchange.com/users/14587/seismatica"], 
            None}, ButtonNote -> 
          "http://mathematica.stackexchange.com/users/14587/seismatica"], 
         ". \n\nTo install this stylesheet (perhaps after you have tested and \
modfied it), click on the the \[OpenCurlyDoubleQuote]Install Stylesheet...\
\[CloseCurlyDoubleQuote] just to the top right of this and follow the \
instruction therein--just leave the Source field as the NotebookObject. I \
strongly suggest you test this stylesheet out first (by typing some codes in \
the notebook that it comes with) before installing it to your ", 
         StyleBox["Mathematica", FontSlant -> "Italic"], 
         " system as after that it\[CloseCurlyQuote]s kind of cumbersome to \
edit the stylesheet."}], "Text", 
       CellChangeTimes -> {
        3.6110352180855007`*^9, {3.611036344297916*^9, 3.611036346161023*^9}, 
         3.611039302209099*^9}], 
      Cell[
       CellGroupData[{
         Cell[
         "Ways to modify this stylesheet", "Section", 
          CellChangeTimes -> {{3.611035239769741*^9, 3.611035249916321*^9}}], 
         Cell[
          TextData[{
           "To modify the syntax highlighting, navigate to Working (Light) \
Environment > Codes and Formula, and edit the Input cell using the cell \
editor. RGB values of solarized palette could be found in that section. Note \
that you can use RGB values like this: ", 
            ButtonBox[
            "RGBColor", BaseStyle -> "Link", ButtonData -> 
             "paclet:ref/RGBColor"], 
            "[{224,133,113}/255.]. Some highly nested option structure, such \
as \[OpenCurlyDoubleQuote]System`\[CloseCurlyDoubleQuote] and \
\[OpenCurlyDoubleQuote]Global`\[CloseCurlyDoubleQuote] might not be too happy \
with that, so you might have to change it to RGBColor[224/255., 133/255., \
113/255.], preferably with a space after each comma in this case (otherwise \
don\[CloseCurlyQuote]t bother with the space).\n\nI have modified the hotkeys \
for the styles to enhance efficiency in typesetting your ", 
            StyleBox["Mathematica ", FontSlant -> "Italic"], 
            "notebook. Please see my post in ", 
            ButtonBox["this", BaseStyle -> "Hyperlink", ButtonData -> {
               URL[
               "http://mathematica.stackexchange.com/questions/5846/resources-\
for-beautiful-mathematica-stylesheets"], None}, ButtonNote -> 
             "http://mathematica.stackexchange.com/questions/5846/resources-\
for-beautiful-mathematica-stylesheets"], 
            " StackExchange post for more information. You can edit these \
hotkeys by editing MenuCommandKey. MenuCommandKey->\[CloseCurlyDoubleQuote]x\
\[CloseCurlyDoubleQuote] means pressing Alt+ or Command+x will trigger that \
style\n\nYou can look into StyleKeyMapping in the cell editor to learn how to \
modify the keypress to switch between styles. The two keypresses I \
use--please make sure that you put the cursor at the front of the cell \
first--are:\n\n1) Tab to move down a style: from (a) Title > Substitle > \
Subsubtitle > Sections > *various levels of subsections* > Text > SmallText > \
Item > ItemNumbered > ItemParagraph > sublevels of the same thing (bullet \
first, number second, paragraph third), and from (b) Input > \
DisplayFormulaNumbered > DisplayFormula > InlineFormula. Alternatively, from \
Input, you can press (c) Shift-Tab to convert it to Code, and Shift-Tab again \
to the Program style.\n\n2) Backspace to move up the 3 chains of style \
toggles. Be careful in some instances as your cursor might be moved to the \
end of the cell at some point and pressing Backspace would erase your work. \n\
The safeguard I\[CloseCurlyQuote]ve built to fix this is that you have to use \
Shift-Backspace to return from DisplayFormula to DisplayFormulaNumbered, and \
Code back to Input, as these are the two styles where cursor jumping occurs. \
That way if you accidentally press Backspace while at the end of the line, \
you would not be backspacing your way up the chain and thus can use the \
precious Undo to fix your mistake.\n\n", 
            StyleBox["Other tips", FontWeight -> "Bold"], 
            "\nUnder the cell editor, there\[CloseCurlyQuote]s a \
MenuSortingValue option: the higher the assigned value of this is, the \
highter in whatever list that option is. For example, my Title style has the \
MenuSortingValue of 1, while my Subtitle has the value of 2. Therefore, my \
Title style will appear above Subtitle on the cascading list when I click on \
Format > Style.\n\nIf you\[CloseCurlyQuote]re not a fan of the numbered \
headings, you can remove the CellDingbat option in the cell editor. For \
example, to remove numbering in your Section cells, select the cell, press \
Ctrl-Shift-E, and delete this:\n  \n", 
            StyleBox[
            " CellDingbat->Cell[\n   TextData[{\n     CounterBox[\
\[OpenCurlyDoubleQuote]Section\[CloseCurlyDoubleQuote]], \
\[OpenCurlyDoubleQuote].\[CloseCurlyDoubleQuote]}], FontWeight -> \
\[OpenCurlyDoubleQuote]Bold\[CloseCurlyDoubleQuote]], ", FontSlant -> 
             "Italic"], 
            "\n     \n, then press Ctrl-Shift-E again to exit the cell \
editor.\n\nIf you want your notebook to start with a section number different \
from 1. Select a cell with a style up the chain in your notebook (", 
            StyleBox["not", FontWeight -> "Bold"], 
            " stylesheet), press Ctrl+Shift+E, and append the \
CounterAssignment at the end of the cell. For example, if I want to start at \
Section 4 (with the number 4 in front of the cell), I should create a Title \
cell in my ", 
            StyleBox["notebook", FontWeight -> "Bold"], 
            ", select it and press Ctrl-Shift-E to edit the cell. I can then \
type this into the editor before exiting it:\n\n", 
            StyleBox[
            "Cell[\[OpenCurlyDoubleQuote]Files\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]Title\[CloseCurlyDoubleQuote],\n \
CounterAssignments->{{\[OpenCurlyDoubleQuote]Section\[CloseCurlyDoubleQuote], \
3}}]", FontSlant -> "Italic"], 
            "\n \n Notice that the section counter assignment is 1 less than \
the intended section numbering. You can also create this cell: \n \n ", 
            StyleBox[
            "Cell[\[OpenCurlyDoubleQuote]Files\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]Subsubtitle\[CloseCurlyDoubleQuote],\n \
CounterAssignments->{{\[OpenCurlyDoubleQuote]Section\[CloseCurlyDoubleQuote], \
3}}]", FontSlant -> "Italic"], 
            "\n \nand it would still work to create a Section 4 since \
Subsubtitle is above the chain to Section (recall that it goes from Title > \
Subtitle > Subsubtitle > Section >...)\n\nAnother example that will start \
your SubitemNumbered with 7 by editing the ItemNumbered cell up the chain:\n\n\
 ", 
            StyleBox[
            "Cell[\[OpenCurlyDoubleQuote]Files\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]ItemNumbered\[CloseCurlyDoubleQuote],\n \
CounterAssignments->{{\[OpenCurlyDoubleQuote]SubitemNumbered\
\[CloseCurlyDoubleQuote], 6}}]", FontSlant -> "Italic"], 
            
            "\n\nModifying the working environment will relay changes to the \
other environments, so you don\[CloseCurlyQuote]t have to modify each \
environment unless there\[CloseCurlyQuote]s a reason to. For example, you can \
only change the cell margin in your printout by modifying the style cells in \
the printout environment.\n\nThe fonts I use are Georgia for headlines, body \
texts, and formulas; Consolas for codes and outputs; and Verdana for small \
texts. Georgia should work across platforms. My Windows computer has Consolas \
when it shipped, but I\[CloseCurlyQuote]m not sure if other platforms have \
that font or not. Please change to the fonts you\[CloseCurlyQuote]d like, and \
if you want to change the font of multiple styles, just select them at once \
(using Shift or Ctrl) and just modify what needs to be modified while leaving \
the other options alone. Alternatively, you can go to the cell editor to edit \
your options.\n"}], "Text", 
          CellChangeTimes -> {{3.6109688650607986`*^9, 
            3.610969249149767*^9}, {3.6109829396758204`*^9, 
            3.6109830520552483`*^9}, {3.6110296097477217`*^9, 
            3.61102961145782*^9}, {3.6110311650186787`*^9, 
            3.611031189958105*^9}, {3.6110321401804543`*^9, 
            3.611032141561533*^9}, {3.611033588330284*^9, 
            3.611033622257224*^9}, {3.6110339698551054`*^9, 
            3.611034045032406*^9}, {3.6110351566879888`*^9, 
            3.611035223999839*^9}, {3.611035273414665*^9, 
            3.6110363565136147`*^9}, {3.611036396390896*^9, 
            3.6110364087146006`*^9}, {3.6110365061531734`*^9, 
            3.61103655818715*^9}, {3.6110366141813526`*^9, 
            3.6110366964240565`*^9}, {3.6110367561454725`*^9, 
            3.611037059824842*^9}, {3.6110371001641493`*^9, 
            3.611037115054001*^9}, {3.6110371523411336`*^9, 
            3.611037161804675*^9}, {3.6110372104954596`*^9, 
            3.611037239616125*^9}, {3.6110375456926317`*^9, 
            3.611037586459964*^9}, {3.6110643075213213`*^9, 
            3.6110643237202473`*^9}, {3.611064398121503*^9, 
            3.611064398925549*^9}, 3.611064455015757*^9, {
            3.6110698564697027`*^9, 3.6110699374333334`*^9}, {
            3.611069968443107*^9, 3.61107001237462*^9}, {
            3.6110701952980824`*^9, 3.6110701975372105`*^9}, {
            3.6110784511382895`*^9, 3.611078580485688*^9}, {
            3.6110788445497913`*^9, 3.6110788457248588`*^9}, {
            3.611078933587884*^9, 3.6110789423923874`*^9}, {
            3.611078976661348*^9, 3.6110790619922285`*^9}, {
            3.6110791038796244`*^9, 3.6110791193565097`*^9}, {
            3.611079214963978*^9, 3.6110792180021515`*^9}, {
            3.6110793040090714`*^9, 3.611079406040907*^9}, {
            3.611079568679209*^9, 3.6110795849661407`*^9}, {
            3.6110796665968103`*^9, 3.6110796773454247`*^9}}], 
         Cell[
          
          TextData[{
           "Below cell is needed to format input and output cells \
individually (for example, they could have different fonts). ", 
            ButtonBox["Reference", BaseStyle -> "Hyperlink", ButtonData -> {
               URL[
               "http://mathematica.stackexchange.com/questions/14536/how-do-i-\
set-the-font-for-output-in-my-stylesheet"], None}, ButtonNote -> 
             "http://mathematica.stackexchange.com/questions/14536/how-do-i-\
set-the-font-for-output-in-my-stylesheet"], "."}], "Text", 
          CellChangeTimes -> {{3.610929662445537*^9, 
            3.6109297264711995`*^9}, {3.6109297580800076`*^9, 
            3.6109297580840073`*^9}, 3.611034118260594*^9}], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["StandardForm"], 
             CellChangeTimes -> {3.611034118260594*^9}], 
            Cell[
             StyleData[StyleDefinitions -> "Default.nb"]]}, Open]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
         "Working (Light) Environment", "Section", 
          CellChangeTimes -> {{3.6109009754407344`*^9, 
           3.610900979489966*^9}, {3.610969286106881*^9, 
           3.6109692874249563`*^9}}], 
         Cell[
          StyleData["All", "Working"], MenuSortingValue -> 1, FontFamily -> 
          "Consolas", FontWeight -> Bold, Background -> 
          RGBColor[0.9, 0.9, 0.9]], 
         Cell[
          CellGroupData[{
            Cell[
            "Headings", "Subsection", 
             CellChangeTimes -> {{3.610900992596716*^9, 
               3.6109009935187683`*^9}, {3.610901149097667*^9, 
               3.6109011538189373`*^9}, 3.6109109809160147`*^9, 
               3.6109393164327135`*^9}], 
            Cell[
             TextData[{
               StyleBox[
               "Name", FontFamily -> "Arial", FontWeight -> "Bold", FontColor -> 
                RGBColor[0., 0., 0.]], 
               StyleBox[
               "\t\t\t\t", FontFamily -> "Arial", FontColor -> 
                RGBColor[0., 0., 0.]], 
               StyleBox[
               "RGB", FontFamily -> "Arial", FontWeight -> "Bold", FontColor -> 
                RGBColor[0., 0., 0.]], 
               StyleBox[
               "\t\t\t", FontFamily -> "Arial", FontColor -> 
                RGBColor[0., 0., 0.]], 
               StyleBox[
               "Hotkey", FontFamily -> "Arial", FontWeight -> "Bold", 
                FontColor -> RGBColor[0., 0., 0.]], 
               StyleBox[
               "\n", FontFamily -> "Arial", FontColor -> 
                RGBColor[0., 0., 0.]], 
               StyleBox[
               "Title\t\t\t\t103,163,216\t\tAlt-1\n", FontFamily -> "Arial", 
                FontColor -> 
                RGBColor[
                 0.403921568627451, 0.6392156862745098, 0.8470588235294118]], 
               StyleBox[
               "Subtitle\t\t\t0,0,0\t\t\tAlt-1\tTab\nSubsubtitle\t\t\t0,0,0\t\
\t\tAlt-1\tTab\tTab\n", FontFamily -> "Arial", FontColor -> 
                RGBColor[0., 0., 0.]], 
               StyleBox[
               "\nSection\t\t\t", FontFamily -> "Arial", FontColor -> 
                RGBColor[
                 0.403921568627451, 0.6392156862745098, 0.8470588235294118]], 
               StyleBox[
               "52,132,203\t\tAlt-2\nSubsection\t\t\t", FontFamily -> "Arial",
                 FontColor -> 
                RGBColor[
                 0.20392156862745098`, 0.5176470588235295, 
                  0.796078431372549]], 
               StyleBox[
               "39,99,152\t\tAlt-2\tTab", FontFamily -> "Arial", FontColor -> 
                RGBColor[
                 0.15294117647058825`, 0.38823529411764707`, 
                  0.596078431372549]], "\n", 
               StyleBox[
               "Subsubsection\t\t26,66,101\t\tAlt-2\tTab\tTab\n", FontFamily -> 
                "Arial", FontColor -> 
                RGBColor[
                 0.10196078431372549`, 0.25882352941176473`, 
                  0.396078431372549]], "\n", 
               StyleBox[
               "Subsubsubsection\t\t14,33,50\t\tAlt-3", FontFamily -> "Arial",
                 FontColor -> 
                RGBColor[
                 0.054901960784313725`, 0.12941176470588237`, 
                  0.19607843137254902`]], 
               "\nSubsubsubsubsection\t0,0,0\t\t\tAlt-3\tTab"}], "Text", 
             CellChangeTimes -> {{3.6109432949212704`*^9, 
              3.6109433216387987`*^9}, {3.6109457683007393`*^9, 
              3.6109459244206696`*^9}, {3.6109537470520983`*^9, 
              3.610953748149161*^9}}], 
            Cell[
             StyleData["Title"], CellMargins -> {{29, Inherited}, {0, 0}}, 
             TextAlignment -> Center, MenuSortingValue -> 1, MenuCommandKey -> 
             "1", FontFamily -> "Georgia", FontSize -> 40, FontWeight -> 
             "Bold", FontSlant -> "Plain", 
             FontVariations -> {
              "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
             RGBColor[{103, 163, 216}/255.]], 
            Cell[
             StyleData["Subtitle"], CellMargins -> {{29, Inherited}, {0, 0}}, 
             StyleKeyMapping -> {
              "Backspace" -> "Title", "Tab" -> "Subsubtitle"}, TextAlignment -> 
             Center, TextJustification -> 0., MenuSortingValue -> 2, 
             MenuCommandKey -> None, FontFamily -> "Georgia", FontWeight -> 
             "Bold", FontSlant -> "Plain", 
             FontVariations -> {
              "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
             RGBColor[0., 0., 0.]], 
            Cell[
             StyleData["Subsubtitle"], 
             CellMargins -> {{29, Inherited}, {10, 10}}, 
             StyleKeyMapping -> {
              "Backspace" -> "Subtitle", "Tab" -> "Section"}, TextAlignment -> 
             Center, TextJustification -> 0., MenuSortingValue -> 3, 
             MenuCommandKey -> None, FontFamily -> "Georgia", FontWeight -> 
             "Bold", FontSlant -> "Plain", 
             FontVariations -> {
              "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
             RGBColor[0., 0., 0.]], 
            Cell[
             StyleData["Section"], CellFrame -> {{0., 0.}, {0, 2}}, 
             CellDingbat -> Cell[
               TextData[{
                 CounterBox["Section"], "."}], FontWeight -> "Bold"], 
             CellMargins -> {{29, Inherited}, {5, 5}}, ReturnCreatesNewCell -> 
             True, StyleKeyMapping -> {
              "Backspace" -> "Subsubtitle", "Tab" -> "Subsection"}, 
             CellFrameColor -> RGBColor[{52, 132, 203}/255.], 
             CellFrameLabelMargins -> 4, 
             CellChangeTimes -> {3.610940691224347*^9}, MenuSortingValue -> 4,
              MenuCommandKey -> "2", FontFamily -> "Georgia", FontSize -> 27, 
             FontWeight -> "Bold", FontSlant -> "Plain", 
             FontVariations -> {
              "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
             RGBColor[{52, 132, 203}/255.]], 
            Cell[
             StyleData["Subsection"], CellDingbat -> Cell[
               TextData[{
                 CounterBox["Section"], ".", 
                 CounterBox["Subsection"], "."}], FontWeight -> "Bold"], 
             CellMargins -> {{34, Inherited}, {5, 5}}, ReturnCreatesNewCell -> 
             True, StyleKeyMapping -> {
              "Backspace" -> "Section", "Tab" -> "Subsubsection"}, 
             CellFrameLabelMargins -> 4, MenuSortingValue -> 5, 
             MenuCommandKey -> None, FontFamily -> "Georgia", FontSize -> 24, 
             FontWeight -> "Bold", FontSlant -> "Plain", 
             FontVariations -> {
              "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
             RGBColor[{39, 99, 152}/255.]], 
            Cell[
             StyleData["Subsubsection"], CellDingbat -> Cell[
               TextData[{
                 CounterBox["Section"], ".", 
                 CounterBox["Subsection"], ".", 
                 CounterBox["Subsubsection"], "."}], FontWeight -> "Bold"], 
             CellMargins -> {{39, Inherited}, {5, 5}}, ReturnCreatesNewCell -> 
             True, StyleKeyMapping -> {
              "Backspace" -> "Subsection", "Tab" -> "Subsubsubsection"}, 
             CellFrameLabelMargins -> 4, MenuSortingValue -> 6, 
             MenuCommandKey -> None, FontFamily -> "Georgia", FontSize -> 21, 
             FontWeight -> "Bold", FontSlant -> "Plain", 
             FontVariations -> {
              "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
             RGBColor[{26, 66, 101}/255.]], 
            Cell[
             StyleData["Subsubsubsection"], CellMargins -> {{63, 3.}, {5, 5}},
              ReturnCreatesNewCell -> True, 
             StyleKeyMapping -> {
              "Backspace" -> "Subsubsection", "Tab" -> "Subsubsubsubsection"},
              CellChangeTimes -> {3.6107053378349037`*^9}, MenuSortingValue -> 
             7, MenuCommandKey -> "3", FontFamily -> "Georgia", FontSize -> 
             18, FontWeight -> "Bold", FontSlant -> "Plain", 
             FontVariations -> {
              "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
             RGBColor[{14, 33, 50}/255.]], 
            Cell[
             StyleData["Subsubsubsubsection"], 
             CellMargins -> {{66, 3.}, {5, 5}}, ReturnCreatesNewCell -> True, 
             StyleKeyMapping -> {
              "Backspace" -> "Subsubsubsection", "Tab" -> "Text"}, 
             CellChangeTimes -> {3.6107053378349037`*^9}, MenuSortingValue -> 
             8, MenuCommandKey -> None, FontFamily -> "Georgia", FontSize -> 
             15, FontWeight -> "Bold", FontSlant -> "Plain", 
             FontVariations -> {
              "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
             RGBColor[0., 0., 0.]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
            "Texts", "Subsection", 
             CellChangeTimes -> {{3.610901050218012*^9, 
              3.6109010511170626`*^9}}], 
            Cell[
             TextData[{
               StyleBox["Name", FontWeight -> "Bold"], "\t\t\t\t", 
               StyleBox["Hotkey", FontWeight -> "Bold"], 
               "\nText\t\t\t\tAlt-4\nSmall text\t\t\tAlt-4\tTab\n\nItem\t\t\t\
\tAlt-5\nItemNumbered\t\tAlt-5\tTab\nItemParagraph\t\tAlt-5\tTab\tTab\n\n\
Subitem\t\t\tAlt-6\nSubitemNumbered\t\tAlt-6\tTab\t\nSubitemParagraph\t\t\
Alt-6\tTab\tTab\n\nSubsubitem\t\t\tAlt-7\tTab\t\nSubsubitemNumbered\tAlt-7\t\
Tab\nSubsubitemParagraph\tAlt-7\tTab\tTab\n"}], "Text", 
             CellChangeTimes -> {{3.610943390007709*^9, 
              3.61094345314132*^9}, {3.6109441505272083`*^9, 
              3.610944173240507*^9}, {3.6109456996988153`*^9, 
              3.610945761180332*^9}, {3.6109459112029133`*^9, 
              3.610945915720172*^9}, {3.610953553946053*^9, 
              3.6109535792394996`*^9}, {3.610953634055635*^9, 
              3.610953640728017*^9}, {3.6109537238387704`*^9, 
              3.6109537313221984`*^9}, {3.610954126780817*^9, 
              3.610954183851082*^9}}], 
            Cell[
             StyleData["Text"], CellMargins -> {{66, 10}, {7, 7}}, 
             StyleKeyMapping -> {
              "Backspace" -> "Subsubsubsubsection", "Tab" -> "SmallText", 
               KeyEvent["Tab", Modifiers -> {Shift}] -> "Input"}, 
             CellChangeTimes -> {3.61081924778518*^9}, MenuSortingValue -> 9, 
             MenuCommandKey -> "4", FontFamily -> "Georgia", FontSize -> 12, 
             FontWeight -> "Plain", FontSlant -> "Plain", 
             FontVariations -> {
              "StrikeThrough" -> False, "Underline" -> False}], 
            Cell[
             StyleData["SmallText"], CellMargins -> {{66, 10}, {7, 7}}, 
             StyleKeyMapping -> {"Backspace" -> "Text", "Tab" -> "Item"}, 
             MenuSortingValue -> 10, FontFamily -> "Verdana", FontSize -> 10, 
             FontWeight -> "Plain", FontSlant -> "Plain", 
             FontVariations -> {
              "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
             RGBColor[0., 0., 0.]], 
            Cell[
             StyleData["Item"], CellDingbat -> "\[FilledSmallCircle]", 
             CellMargins -> {{81, 10}, {7, 7}}, 
             StyleKeyMapping -> {
              "Backspace" -> "SmallText", "Tab" -> "ItemNumbered"}, 
             LineSpacing -> {1., 3.}, MenuSortingValue -> 11, MenuCommandKey -> 
             "5", FontFamily -> "Georgia", FontSize -> 12, FontWeight -> 
             "Plain", FontSlant -> "Plain", 
             FontVariations -> {
              "StrikeThrough" -> False, "Underline" -> False}], 
            Cell[
             StyleData["ItemNumbered"], CellMargins -> {{81, 10}, {7, 7}}, 
             StyleKeyMapping -> {
              "Backspace" -> "Item", "Tab" -> "ItemParagraph"}, 
             MenuSortingValue -> 12, FontFamily -> "Georgia", FontSize -> 12, 
             FontWeight -> "Plain", FontSlant -> "Plain", 
             FontVariations -> {
              "StrikeThrough" -> False, "Underline" -> False}], 
            Cell[
             StyleData["ItemParagraph"], CellMargins -> {{81, 10}, {7, 7}}, 
             StyleKeyMapping -> {
              "Backspace" -> "ItemNumbered", "Tab" -> "Subitem"}, 
             LineSpacing -> {1., 3.}, MenuSortingValue -> 13, FontFamily -> 
             "Georgia", FontSize -> 12, FontWeight -> "Plain", FontSlant -> 
             "Plain", 
             FontVariations -> {
              "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
             RGBColor[0., 0., 0.]], 
            Cell[
             StyleData["Subitem"], CellDingbat -> "\[FilledSmallCircle]", 
             CellMargins -> {{105, 12}, {7, 7}}, 
             StyleKeyMapping -> {
              "Backspace" -> "ItemParagraph", "Tab" -> "SubitemNumbered"}, 
             LineSpacing -> {1., 3.}, MenuSortingValue -> 14, MenuCommandKey -> 
             "6", FontFamily -> "Georgia", FontSize -> 12, FontWeight -> 
             "Plain", FontSlant -> "Plain", 
             FontVariations -> {
              "StrikeThrough" -> False, "Underline" -> False}], 
            Cell[
             StyleData["SubitemNumbered"], CellMargins -> {{105, 12}, {7, 7}},
              StyleKeyMapping -> {
              "Backspace" -> "Subitem", "Tab" -> "SubitemParagraph"}, 
             MenuSortingValue -> 15, FontFamily -> "Georgia", FontSize -> 12, 
             FontWeight -> "Plain", FontSlant -> "Plain", 
             FontVariations -> {
              "StrikeThrough" -> False, "Underline" -> False}], 
            Cell[
             StyleData["SubitemParagraph"], 
             CellMargins -> {{105, 12}, {7, 7}}, 
             StyleKeyMapping -> {
              "Backspace" -> "SubitemNumbered", "Tab" -> "Subsubitem"}, 
             LineSpacing -> {1., 3.}, MenuSortingValue -> 16, FontFamily -> 
             "Georgia", FontSize -> 12, FontWeight -> "Plain", FontSlant -> 
             "Plain", 
             FontVariations -> {
              "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
             RGBColor[0., 0., 0.]], 
            Cell[
             StyleData["Subsubitem"], CellDingbat -> "\[FilledSmallCircle]", 
             CellMargins -> {{129, 12}, {7, 7}}, 
             StyleKeyMapping -> {
              "Backspace" -> "SubitemParagraph", "Tab" -> 
               "SubsubitemNumbered"}, LineSpacing -> {1., 3.}, 
             MenuSortingValue -> 17, MenuCommandKey -> "7", FontFamily -> 
             "Georgia", FontSize -> 12, FontWeight -> "Plain", FontSlant -> 
             "Plain", 
             FontVariations -> {
              "StrikeThrough" -> False, "Underline" -> False}], 
            Cell[
             StyleData["SubsubitemNumbered"], 
             CellMargins -> {{129, 12}, {7, 7}}, 
             StyleKeyMapping -> {
              "Backspace" -> "Subsubitem", "Tab" -> "SubsubitemParagraph"}, 
             MenuSortingValue -> 18, FontFamily -> "Georgia", FontSize -> 12, 
             FontWeight -> "Plain", FontSlant -> "Plain", 
             FontVariations -> {
              "StrikeThrough" -> False, "Underline" -> False}], 
            Cell[
             StyleData["SubsubitemParagraph"], 
             CellMargins -> {{129, 12}, {7, 7}}, 
             StyleKeyMapping -> {"Backspace" -> "SubsubitemNumbered"}, 
             LineSpacing -> {1., 3.}, MenuSortingValue -> 19, FontFamily -> 
             "Georgia", FontSize -> 12, FontWeight -> "Plain", FontSlant -> 
             "Plain", 
             FontVariations -> {
              "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
             RGBColor[0., 0., 0.]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
            "Codes and Formulas", "Subsection", 
             CellChangeTimes -> {{3.6109010554403105`*^9, 
              3.6109010565993767`*^9}, {3.6109626081809254`*^9, 
              3.6109626104510555`*^9}, {3.6109626691254115`*^9, 
              3.6109626704724884`*^9}}], 
            Cell[
             TextData[{
               StyleBox["Name", FontWeight -> "Bold"], "\t\t\t\t\t", 
               StyleBox["Hotkey", FontWeight -> "Bold"], 
               "\nInput\t\t\t\t\tAlt-8\n\nDisplayFormulaNumbered\t\tAlt-8\t\t\
Tab\t\t\t\t\t\nDisplayFormula\t\t\tAlt-8\t\tTab\t\tTab\t\t\t\n", 
               StyleBox[
               "(Shift-Backspace to go back to DisplayFormulaNumbered. Be \
careful when moving back from InlineFormula as the cursor moves to the end of \
cell!)", FontSlant -> "Italic"], 
               "\nInlineFormula\t\t\t\tAlt-8\t\tTab\t\tTab\t\tTab\n\nCode\t\t\
\t\t\tAlt-8\t\tShift-Tab\t\t\t\t\n", 
               StyleBox[
               "(Shift-Backspace to go back to Input. Be careful when moving \
back from Formula as the cursor moves to the end of cell!)", FontSlant -> 
                "Italic"], "\nFormula\t\t\t\tAlt-8\t\tShift-Tab\tShift-Tab"}],
              "Text", 
             CellChangeTimes -> {{3.6109466173713036`*^9, 
              3.6109466400446005`*^9}, {3.610946777648471*^9, 
              3.610946781437688*^9}, {3.6109497464072742`*^9, 
              3.610949883876137*^9}, {3.6109523670751677`*^9, 
              3.6109524148148985`*^9}, {3.6109584158491383`*^9, 
              3.6109584752545357`*^9}, {3.610963792312654*^9, 
              3.6109638082905684`*^9}, {3.610983106022335*^9, 
              3.6109831088124948`*^9}, {3.6109831701060004`*^9, 
              3.610983170830042*^9}, {3.611029744258415*^9, 
              3.6110297674027395`*^9}, {3.6110298202447615`*^9, 
              3.611029824199988*^9}}], 
            Cell[
             TextData[{
               StyleBox["Option Name", FontWeight -> "Bold"], "\t\t\t", 
               StyleBox["RGB", FontWeight -> "Bold"], "\t\t\t", 
               StyleBox["Solarized Name", FontWeight -> "Bold"], "\t", 
               StyleBox["Description", FontWeight -> "Bold"], 
               "\t\t\t\t\t\t\nCommentStyle\t\t\t", 
               StyleBox[
               "131,148,150\t\tbase0", FontFamily -> "Arial", FontColor -> 
                RGBColor[
                 0.5137254901960784, 0.5803921568627451, 0.5882352941176471]],
                "\t\t\tComments\t\t\t\t\t\t\nFunctionLocalVariableStyle\t\t", 
               StyleBox[
               "133,153,0\t\tgreen", FontFamily -> "Arial", FontColor -> 
                RGBColor[0.5215686274509804, 0.6, 0.]], 
               "\t\t\tVariables made special by use in arguments\t\t\n\
LocalVariableStyle\t\t\t", 
               StyleBox[
               "211,54,130\t\tmagenta", FontFamily -> "Arial", FontColor -> 
                RGBColor[
                 0.8274509803921568, 0.21176470588235294`, 
                  0.5098039215686274]], 
               "\t\tThe local variables of Module and With\t\t\n\
PatternVariableStyle\t\t\t", 
               StyleBox[
               "255,128,0 *\t\torange", FontFamily -> "Arial", FontColor -> 
                RGBColor[1., 0.5019607843137255, 0.]], 
               "\t\tFunction arguments and pattern names\t\t\nStringStyle\t\t\
\t\t", 
               StyleBox[
               "181,137,0\t\tyellow", FontFamily -> "Arial", FontColor -> 
                RGBColor[0.7098039215686275, 0.5372549019607843, 0.]], 
               "\t\t\tStrings\t\t\t\t\t\t\nSystem`\t\t\t\t", 
               StyleBox[
               "42,161,152\t\tcyan", FontFamily -> "Arial", FontColor -> 
                RGBColor[
                 0.16470588235294117`, 0.6313725490196078, 
                  0.596078431372549]], 
               "\t\t\tDefined variables\t\t\t\t\t\nGlobal`\t\t\t\t", 
               StyleBox[
               "108,113,196\t\tviolet", FontFamily -> "Arial", FontColor -> 
                RGBColor[
                 0.4235294117647059, 0.44313725490196076`, 
                  0.7686274509803922]], 
               "\t\t\tGlobal/built-in functions and expressions\t\t\n\
UndefinedSymbolStyle\t\t", 
               StyleBox[
               "38,139,210\t\tblue", FontFamily -> "Arial", FontColor -> 
                RGBColor[
                 0.14901960784313725`, 0.5450980392156862, 
                  0.8235294117647058]], 
               "\t\t\tUndefined variables and functions\t\t\t\n\
(Input)-FontColor\t\t\t0,0,0\t\t\tblack*\t\t\tThe rest of input (signs, \
numbers, etc.)\t\nOutput\t\t\t\t\t", 
               StyleBox[
               "88,110,117", FontFamily -> "Arial", FontColor -> 
                RGBColor[
                 0.34509803921568627`, 0.43137254901960786`, 
                  0.4588235294117647]], 
               StyleBox[
               "\t\tbase01", FontFamily -> "Arial", FontColor -> 
                RGBColor[
                 0.396078431372549, 0.4823529411764706, 0.5137254901960784]], 
               "\t\tOutput cell\nBackground\t\t\t\t", 
               StyleBox[
               "245,245,245 **", FontFamily -> "Arial", FontColor -> 
                RGBColor[
                 0.9607843137254902, 0.9607843137254902, 0.9607843137254902], 
                Background -> GrayLevel[0]], 
               StyleBox[
               "\t", FontFamily -> "Arial", FontColor -> 
                RGBColor[
                 0.9607843137254902, 0.9607843137254902, 0.9607843137254902]], 
               StyleBox[
               "light gray*", FontFamily -> "Arial", FontColor -> 
                RGBColor[
                 0.9607843137254902, 0.9607843137254902, 0.9607843137254902], 
                Background -> GrayLevel[0]], 
               "\t\tNot quite a fan of the beige background of solarized\n\t\t\
\t\t\t", 
               StyleBox[
               "253,246,227", FontFamily -> "Arial", FontColor -> 
                RGBColor[
                 0.9921568627450981, 0.9647058823529412, 0.8901960784313725], 
                Background -> GrayLevel[0]], 
               StyleBox["\t\t", Background -> GrayLevel[0]], 
               StyleBox[
               "base3\t\t\t", FontFamily -> "Arial", FontColor -> 
                RGBColor[
                 0.9921568627450981, 0.9647058823529412, 0.8901960784313725], 
                Background -> GrayLevel[0]], 
               StyleBox[
               "Solarized\[CloseCurlyQuote]", FontFamily -> "Arial", 
                FontColor -> RGBColor[0., 0., 0.], Background -> None], 
               "s recommended background (not used)\n\n* modified from \
Solarized\[CloseCurlyQuote]s ", 
               StyleBox[
               "203,75,22", FontFamily -> "Arial", FontColor -> 
                RGBColor[
                 0.796078431372549, 0.29411764705882354`, 
                  0.08627450980392157]], 
               "\n** {237,237,237) for code, {229,229,229} for program"}], 
             "Text", CellChangeTimes -> {{3.6109442124937525`*^9, 
               3.6109442891761384`*^9}, {3.610949895258788*^9, 
               3.610949896319849*^9}, {3.610949926880597*^9, 
               3.6109499785975547`*^9}, {3.6109506366441927`*^9, 
               3.610950842820986*^9}, {3.6109509581105795`*^9, 
               3.6109509646989565`*^9}, {3.6109510002069874`*^9, 
               3.6109511187477674`*^9}, {3.610951870771781*^9, 
               3.6109519326013174`*^9}, 3.6109521575341825`*^9, {
               3.610956477386264*^9, 3.6109565932598915`*^9}, {
               3.6109566671551185`*^9, 3.610956773644209*^9}, {
               3.610956810268304*^9, 3.6109569103460283`*^9}, {
               3.6109569466031017`*^9, 3.610956988637506*^9}, {
               3.610967446284649*^9, 3.610967497396573*^9}, {
               3.6109832595521164`*^9, 3.6109832675675745`*^9}, {
               3.6110299422877417`*^9, 3.611029953633391*^9}, {
               3.6110414380142603`*^9, 3.6110414528341074`*^9}, {
               3.6110416573818073`*^9, 3.6110417014583282`*^9}}], 
            Cell[
             StyleData["Input"], CellFrame -> 0.5, 
             CellMargins -> {{66, 10}, {0, 7}}, 
             StyleKeyMapping -> {
              "Tab" -> "DisplayFormulaNumbered", 
               KeyEvent["Tab", Modifiers -> {Shift}] -> "Code", 
               KeyEvent["Backspace", Modifiers -> {Shift}] -> "Text"}, 
             AutoStyleOptions -> {
              "CommentStyle" -> {
                FontColor -> RGBColor[{220, 50, 47}/255.], ShowAutoStyles -> 
                 False, ShowSyntaxStyles -> False, AutoNumberFormatting -> 
                 False, FontFamily -> "OpenSans", FontWeight -> Bold, 
                 FontSize -> 12}, 
               "FunctionLocalVariableStyle" -> {
                FontColor -> RGBColor[{133, 153, 0}/255.]}, 
               "LocalVariableStyle" -> {
                FontColor -> RGBColor[{211, 54, 130}/255.]}, 
               "PatternVariableStyle" -> {
                FontColor -> RGBColor[{255, 128, 0}/255.]}, 
               "StringStyle" -> {
                FontColor -> RGBColor[{181, 143, 0}/255.], ShowAutoStyles -> 
                 False, ShowSyntaxStyles -> False, AutoNumberFormatting -> 
                 False}, 
               "SymbolContextStyles" -> {
                "System`" -> RGBColor[108./255, 113./255, 196./255], 
                 "Global`" -> RGBColor[42./255, 161./255, 152./255]}, 
               "UndefinedSymbolStyle" -> {
                FontColor -> RGBColor[{38, 139, 210}/255.]}}, 
             MenuSortingValue -> 20, MenuCommandKey -> "8", FontFamily -> 
             "Consolas", FontSize -> 12, FontWeight -> "Bold", FontSlant -> 
             "Plain", 
             FontVariations -> {
              "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
             RGBColor[{0, 43, 54}/255.], Background -> 
             RGBColor[{253, 246, 227}/255.]], 
            Cell[
             StyleData["Output"], CellFrame -> {{0.5, 0.5}, {0.5, 0}}, 
             CellMargins -> {{66, 10}, {7, -1}}, 
             StyleKeyMapping -> {"Tab" -> "DisplayFormulaNumbered"}, 
             MenuSortingValue -> 1550, FontFamily -> "Consolas", FontSize -> 
             12, FontWeight -> "Bold", FontSlant -> "Plain", 
             FontVariations -> {
              "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
             RGBColor[{88, 110, 117}/255.], Background -> GrayLevel[0.9999]], 
            Cell[
             StyleData["Code"], CellFrame -> 0.5, 
             CellMargins -> {{66, 10}, {0, 7}}, 
             StyleKeyMapping -> {
              KeyEvent["Backspace", Modifiers -> {Shift}] -> "Input", 
               KeyEvent["Tab", Modifiers -> {Shift}] -> "Program"}, 
             AutoStyleOptions -> {
              "CommentStyle" -> {
                FontColor -> RGBColor[{131, 148, 150}/255.], ShowAutoStyles -> 
                 False, ShowSyntaxStyles -> False, AutoNumberFormatting -> 
                 False}, 
               "FunctionLocalVariableStyle" -> {
                FontColor -> RGBColor[{133, 153, 0}/255.]}, 
               "LocalVariableStyle" -> {
                FontColor -> RGBColor[{211, 54, 130}/255.]}, 
               "PatternVariableStyle" -> {
                FontColor -> RGBColor[{255, 128, 0}/255.]}, 
               "StringStyle" -> {
                FontColor -> RGBColor[{181, 143, 0}/255.], ShowAutoStyles -> 
                 False, ShowSyntaxStyles -> False, AutoNumberFormatting -> 
                 False}, 
               "SymbolContextStyles" -> {
                "System`" -> RGBColor[108./255, 113./255, 196./255], 
                 "Global`" -> RGBColor[42./255, 161./255, 152./255]}, 
               "UndefinedSymbolStyle" -> {
                FontColor -> RGBColor[{38, 139, 210}/255.]}}, 
             MenuSortingValue -> 21, MenuCommandKey -> None, FontFamily -> 
             "Consolas", FontSize -> 12, FontWeight -> "Bold", FontSlant -> 
             "Plain", 
             FontVariations -> {
              "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
             RGBColor[0., 0., 0.], Background -> RGBColor[0.93, 0.93, 0.93]], 
            Cell[
             StyleData["Program"], CellFrame -> 0.5, 
             CellMargins -> {{66, 10}, {0, 7}}, 
             StyleKeyMapping -> {
              KeyEvent["Backspace", Modifiers -> {Shift}] -> "Code"}, 
             AutoStyleOptions -> {
              "CommentStyle" -> {
                FontColor -> RGBColor[{131, 148, 150}/255.], ShowAutoStyles -> 
                 False, ShowSyntaxStyles -> False, AutoNumberFormatting -> 
                 False}, 
               "FunctionLocalVariableStyle" -> {
                FontColor -> RGBColor[{133, 153, 0}/255.]}, 
               "LocalVariableStyle" -> {
                FontColor -> RGBColor[{211, 54, 130}/255.]}, 
               "PatternVariableStyle" -> {
                FontColor -> RGBColor[{255, 128, 0}/255.]}, 
               "StringStyle" -> {
                FontColor -> RGBColor[{181, 143, 0}/255.], ShowAutoStyles -> 
                 False, ShowSyntaxStyles -> False, AutoNumberFormatting -> 
                 False}, 
               "SymbolContextStyles" -> {
                "System`" -> RGBColor[108./255, 113./255, 196./255], 
                 "Global`" -> RGBColor[42./255, 161./255, 152./255]}, 
               "UndefinedSymbolStyle" -> {
                FontColor -> RGBColor[{38, 139, 210}/255.]}}, 
             MenuSortingValue -> 22, FontFamily -> "Consolas", FontSize -> 12,
              FontWeight -> "Bold", FontSlant -> "Plain", 
             FontVariations -> {
              "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
             RGBColor[0., 0., 0.], Background -> RGBColor[0.9, 0.9, 0.9]], 
            Cell[
             StyleData["DisplayFormulaNumbered"], CellFrame -> False, 
             CellMargins -> {{66, Inherited}, {0, 7}}, 
             StyleKeyMapping -> {
              KeyEvent["Backspace", Modifiers -> {Shift}] -> "Input", "Tab" -> 
               "DisplayFormula"}, MenuSortingValue -> 23, MenuCommandKey -> 
             None, FontFamily -> "Georgia", FontSize -> 12, FontWeight -> 
             "Bold", FontSlant -> "Plain", 
             FontVariations -> {
              "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
             RGBColor[0., 0., 0.]], 
            Cell[
             StyleData["DisplayFormula"], CellFrame -> False, 
             CellMargins -> {{66, Inherited}, {0, 7}}, 
             StyleKeyMapping -> {
              KeyEvent["Backspace", Modifiers -> {Shift}] -> 
               "DisplayFormulaNumbered", "Tab" -> "InlineFormula"}, 
             MenuSortingValue -> 24, MenuCommandKey -> None, FontFamily -> 
             "Georgia", FontSize -> 12, FontWeight -> "Bold", FontSlant -> 
             "Plain", 
             FontVariations -> {
              "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
             RGBColor[0., 0., 0.]], 
            Cell[
             StyleData["InlineFormula"], CellFrame -> False, 
             CellMargins -> {{66, Inherited}, {0, 7}}, 
             StyleKeyMapping -> {
              KeyEvent["Backspace", Modifiers -> {Shift}] -> 
               "DisplayFormula"}, CellChangeTimes -> {3.610900147119357*^9}, 
             MenuSortingValue -> 25, MenuCommandKey -> None, FontFamily -> 
             "Georgia", FontSize -> 12, FontWeight -> "Bold", FontSlant -> 
             "Plain", 
             FontVariations -> {
              "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
             RGBColor[0., 0., 0.]]}, Open]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
         "Printout Environment", "Section", 
          CellChangeTimes -> {{3.6109010731373224`*^9, 
           3.610901075696469*^9}}], 
         Cell[
          CellGroupData[{
            Cell[
            "Headings", "Subsection", 
             CellChangeTimes -> {{3.6109626297171574`*^9, 
              3.610962630673212*^9}}], 
            Cell[
             StyleData["Title", "Printout"], 
             CellMargins -> {{34, Inherited}, {Inherited, Inherited}}], 
            Cell[
             StyleData["Subtitle", "Printout"], 
             CellMargins -> {{34, Inherited}, {Inherited, Inherited}}], 
            Cell[
             StyleData["Subsubtitle", "Printout"], 
             CellMargins -> {{34, Inherited}, {Inherited, Inherited}}], 
            Cell[
             StyleData["Section", "Printout"], 
             CellMargins -> {{34, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 24], 
            Cell[
             StyleData["Subsection", "Printout"], 
             CellMargins -> {{34, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 20], 
            Cell[
             StyleData["Subsubsection", "Printout"], 
             CellMargins -> {{39, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 16], 
            Cell[
             StyleData["Subsubsubsection", "Printout"], 
             CellMargins -> {{47, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 14], 
            Cell[
             StyleData["Subsubsubsubsection", "Printout"], 
             CellMargins -> {{49, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 12]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
            "Texts", "Subsection", 
             CellChangeTimes -> {{3.6109626367945623`*^9, 
              3.6109626375646067`*^9}}], 
            Cell[
             StyleData["Text", "Printout"]], 
            Cell[
             StyleData["SmallText", "Printout"], 
             CellMargins -> {{49, Inherited}, {Inherited, Inherited}}], 
            Cell[
             StyleData["Item", "Printout"], CellDingbat -> 
             "\[FilledSmallCircle]"], 
            Cell[
             StyleData["ItemNumbered", "Printout"]], 
            Cell[
             StyleData["ItemParagraph", "Printout"]], 
            Cell[
             StyleData["Subitem", "Printout"], CellDingbat -> 
             "\[FilledSmallCircle]"], 
            Cell[
             StyleData["SubitemNumbered", "Printout"]], 
            Cell[
             StyleData["SubitemParagraph", "Printout"]], 
            Cell[
             StyleData["Subsubitem", "Printout"], CellDingbat -> 
             "\[FilledSmallCircle]"], 
            Cell[
             StyleData["SubsubitemNumbered", "Printout"]], 
            Cell[
             StyleData["SubsubitemParagraph", "Printout"]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
            "Codes and Formulas", "Subsection", 
             CellChangeTimes -> {{3.6109626433839393`*^9, 
              3.610962651828422*^9}}], 
            Cell[
            "Below cell needed to show syntax highlighting on printout", 
             "Text", CellChangeTimes -> {{3.6109016088869658`*^9, 
              3.6109016268399925`*^9}}], 
            Cell[
             StyleData[All, "Printout"], PageWidth -> PaperWidth, 
             ShowSyntaxStyles -> True], 
            Cell[
             StyleData["Input", "Printout"], 
             CellMargins -> {{49, Inherited}, {0, 7}}, Background -> 
             RGBColor[0.96, 0.96, 0.96]], 
            Cell[
             StyleData["Output", "Printout"], 
             CellMargins -> {{49, Inherited}, {7, -0.5}}], 
            Cell[
             StyleData["Code", "Printout"]], 
            Cell[
             StyleData["Program", "Printout"]], 
            Cell[
             StyleData["DisplayFormulaNumbered", "Printout"]], 
            Cell[
             StyleData["DisplayFormula", "Printout"]], 
            Cell[
             StyleData["InlineFormula", "Printout"]]}, Open]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
         "Dark Environment", "Section", 
          CellChangeTimes -> {{3.610964076930933*^9, 3.6109640879535637`*^9}, 
            3.6109643304624343`*^9}], 
         Cell[
          StyleData["All", "Dark"], MenuSortingValue -> 2, FontFamily -> 
          "Consolas", FontWeight -> Bold, FontColor -> 
          RGBColor[{88, 110, 117}/255.], Background -> 
          RGBColor[{50, 50, 50}/255.]], 
         Cell[
          TextData[{"Background\t\t\t", 
            StyleBox[
            "30,30,30", FontFamily -> "Arial", FontColor -> 
             RGBColor[
              0.027450980392156862`, 0.21176470588235294`, 
               0.25882352941176473`]]}], "Text", 
          CellChangeTimes -> {{3.6110450975745745`*^9, 
           3.611045103678924*^9}, {3.6110463370194674`*^9, 
           3.611046342960807*^9}, {3.611065140129944*^9, 
           3.6110651408329835`*^9}}], 
         Cell[
          CellGroupData[{
            Cell[
            "Headings", "Subsection", 
             CellChangeTimes -> {{3.6109678407342105`*^9, 
              3.6109678422222958`*^9}}], 
            Cell[
             TextData[{
               StyleBox["Name", FontWeight -> "Bold"], "\t\t\t\t", 
               StyleBox["RGB", FontWeight -> "Bold"], "\nTitle\t\t\t\t", 
               StyleBox[
               "103,163,216", FontFamily -> "Arial", FontColor -> 
                RGBColor[
                 0.403921568627451, 0.6392156862745098, 0.8470588235294118]], 
               "\nSection\t\t\t", 
               StyleBox[
               "103,163,216", FontFamily -> "Arial", FontColor -> 
                RGBColor[
                 0.403921568627451, 0.6392156862745098, 0.8470588235294118]], 
               "\nSubsection\t\t\t", 
               StyleBox[
               "120,172,220", FontFamily -> "Arial", FontColor -> 
                RGBColor[
                 0.47058823529411764`, 0.6745098039215687, 
                  0.8627450980392157]], "\nSubsubsection\t\t", 
               StyleBox[
               "154,193,228", FontFamily -> "Arial", FontColor -> 
                RGBColor[
                 0.6039215686274509, 0.7568627450980392, 0.8941176470588236]],
                "\nSubsubsubsection\t\t", 
               StyleBox[
               "187,214,238", FontFamily -> "Arial", FontColor -> 
                RGBColor[
                 0.7333333333333333, 0.8392156862745098, 0.9333333333333333]],
                "\nSubsubsubsubsection\t", 
               StyleBox[
               "221,235,247", FontFamily -> "Arial", FontColor -> 
                RGBColor[
                 0.8666666666666667, 0.9215686274509803, 0.9686274509803922]],
                "\n"}], "Text", 
             CellChangeTimes -> {{3.61096533201672*^9, 
               3.610965409920176*^9}, {3.6109663997167892`*^9, 
               3.6109664013318815`*^9}, {3.610966712970706*^9, 
               3.6109667334288764`*^9}, {3.6109667794755096`*^9, 
               3.6109668159915986`*^9}, {3.6109668473963947`*^9, 
               3.6109668509876003`*^9}, {3.610966914377226*^9, 
               3.6109669264479165`*^9}, {3.6109669804520054`*^9, 
               3.6109669888354845`*^9}, {3.6109675100022936`*^9, 
               3.6109675257681956`*^9}, {3.610967667618309*^9, 
               3.610967719529278*^9}, {3.610973186414966*^9, 
               3.6109732584930887`*^9}, {3.6109833267109575`*^9, 
               3.610983352154413*^9}, {3.6110436459295454`*^9, 
               3.611043652457919*^9}, 3.611045198108325*^9, {
               3.611045268595357*^9, 3.611045305803485*^9}, 
               3.611045344372691*^9}], 
            Cell[
             StyleData["Title", "Dark"]], 
            Cell[
             StyleData["Subtitle", "Dark"], FontColor -> 
             RGBColor[{238, 232, 213}/255.]], 
            Cell[
             StyleData["Subsubtitle", "Dark"], FontColor -> 
             RGBColor[{238, 232, 213}/255.]], 
            Cell[
             StyleData["Section", "Dark"], FontColor -> 
             RGBColor[{103, 163, 216}/255.]], 
            Cell[
             StyleData["Subsection", "Dark"], FontColor -> 
             RGBColor[{120, 172, 220}/255.]], 
            Cell[
             StyleData["Subsubsection", "Dark"], FontColor -> 
             RGBColor[{154, 193, 228}/255.]], 
            Cell[
             StyleData["Subsubsubsection", "Dark"], FontColor -> 
             RGBColor[{187, 214, 238}/255.]], 
            Cell[
             StyleData["Subsubsubsubsection", "Dark"], FontColor -> 
             RGBColor[{221, 235, 247}/255.]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
            "Texts", "Subsection", 
             CellChangeTimes -> {{3.6109678591112614`*^9, 
              3.6109678595792885`*^9}}], 
            Cell[
             TextData[{
               StyleBox["Name", FontWeight -> "Bold"], "\t\t\t\t", 
               StyleBox["RGB", FontWeight -> "Bold"], "\nMain text\t\t\t", 
               StyleBox[
               "238,232,213", FontFamily -> "Arial", FontColor -> 
                RGBColor[
                 0.9333333333333333, 0.9098039215686274, 0.8352941176470589], 
                Background -> GrayLevel[0]], " (base2)"}], "Text", 
             CellChangeTimes -> {{3.6109833316542406`*^9, 
               3.6109833426278677`*^9}, {3.610983395016865*^9, 
               3.610983406420517*^9}, {3.6110374582916327`*^9, 
               3.611037458634652*^9}, 3.6110452048907127`*^9}], 
            Cell[
             StyleData["Text", "Dark"], 
             CellChangeTimes -> {3.61103017880027*^9}, FontColor -> 
             RGBColor[{238, 232, 213}/255.]], 
            Cell[
             StyleData["SmallText", "Dark"], 
             CellChangeTimes -> {3.61103017880027*^9}, FontColor -> 
             RGBColor[{238, 232, 213}/255.]], 
            Cell[
             StyleData["Item", "Dark"], 
             CellChangeTimes -> {3.61103017880027*^9}, FontColor -> 
             RGBColor[{238, 232, 213}/255.]], 
            Cell[
             StyleData["ItemNumbered", "Dark"], 
             CellChangeTimes -> {3.61103017880027*^9}, FontColor -> 
             RGBColor[{238, 232, 213}/255.]], 
            Cell[
             StyleData["ItemParagraph", "Dark"], 
             CellChangeTimes -> {3.61103017880027*^9}, FontColor -> 
             RGBColor[{238, 232, 213}/255.]], 
            Cell[
             StyleData["Subitem", "Dark"], 
             CellChangeTimes -> {3.61103017880127*^9, 3.611030624195745*^9}, 
             FontColor -> RGBColor[{238, 232, 213}/255.]], 
            Cell[
             StyleData["SubitemNumbered", "Dark"], 
             CellChangeTimes -> {3.61103017880127*^9, 3.611030624195745*^9}, 
             FontColor -> RGBColor[{238, 232, 213}/255.]], 
            Cell[
             StyleData["SubitemParagraph", "Dark"], 
             CellChangeTimes -> {3.61103017880127*^9, 3.611030624195745*^9}, 
             FontColor -> RGBColor[{238, 232, 213}/255.]], 
            Cell[
             StyleData["Subsubitem", "Dark"], 
             CellChangeTimes -> {3.61103017880127*^9, 3.611030624196745*^9}, 
             FontColor -> RGBColor[{238, 232, 213}/255.]], 
            Cell[
             StyleData["SubsubitemNumbered", "Dark"], 
             CellChangeTimes -> {3.61103017880127*^9, 3.611030624196745*^9}, 
             FontColor -> RGBColor[{238, 232, 213}/255.]], 
            Cell[
             StyleData["SubsubitemParagraph", "Dark"], 
             CellChangeTimes -> {3.61103017880127*^9, 3.611030624196745*^9}, 
             FontColor -> RGBColor[{238, 232, 213}/255.]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
            "Codes and formulas", "Subsection", 
             CellChangeTimes -> {{3.610967862847475*^9, 
              3.6109678664356804`*^9}}], 
            Cell[
             TextData[{
               StyleBox["Name", FontWeight -> "Bold"], "\t\t\t\t\t\t", 
               StyleBox["RGB", FontWeight -> "Bold"], 
               "\nInput background\t\t\t\t20,20,20\nOutput background\t\t\t\t\
30,30,30\nCode background\t\t\t\t10,10,10\nProgram background\t\t\t\t5,5,5\n\
Code text (input, code & program)\t\t", 
               StyleBox[
               "147,161,161", FontFamily -> "Arial", FontColor -> 
                RGBColor[
                 0.9333333333333333, 0.9098039215686274, 0.8352941176470589], 
                Background -> GrayLevel[0]], 
               " (base1)\nOutput text\t\t\t\t\t", 
               StyleBox[
               "101,123,131", FontFamily -> "Arial", FontColor -> 
                RGBColor[
                 0.5137254901960784, 0.5803921568627451, 0.5882352941176471], 
                Background -> GrayLevel[0]], 
               "\n\n I can\[CloseCurlyQuote]t use white/bright text in output \
since axes and legends in output can be on a white background and makes white \
text on white background hard to see). Therefore, for the output text, I \
opted for the solarized base0 gray (", 
               StyleBox[
               "101,123,131\[AliasDelimiter]", FontFamily -> "Arial", 
                FontColor -> 
                RGBColor[
                 0.5137254901960784, 0.5803921568627451, 0.5882352941176471], 
                Background -> GrayLevel[0]], 
               "), and bolded it for increased contrast. That way it can be \
displayed in both dark and white backgrounds.\n \nIn the output cell, I have \
also added GraphicsBoxOptions and modified its background so that graphs with \
black axes and legends are displayed on a bright background instead of the \
usual dark background."}], "Text", CellChangeTimes -> CompressedData["
1:eJxTTMoPSmViYGAQBmIQHaZ5uzz9+SvHGbVHGkF0jojp6yogXSUX8RZEV1it
KKoD0ouvCZWB6Id+V6tA9LWQB9UgupI7ogFEe0n5tIDoWWXurPVAet/dSjC9
ZKXWuyYgnayt/wlEB7YsZGsG0qcip3KBaN3Vz/lBtNrT/1IgusN5YziIvsa3
KhpEP5kS1QWiI6r6e0D0xtXnpoDovOYlc0D036QVy0G0RuPD1SD6wB3vHSDa
ZZ3kLhBtmffFtw1I69154AeiuZ2+6PaD5I1W6oFooZPJliD6kgCPNYg2mH7I
FUTfia33ANFN5btEp4Pcf2KROIgGAPI1rNQ=
              "]], 
            Cell[
             StyleData["Input", "Dark"], CellFrameColor -> 
             RGBColor[{147, 161, 161}/255.], 
             CodeAssistOptions -> {
              "HeadHighlightStyle" -> {
                Background -> RGBColor[{7, 54, 66}/255.]}, 
               "MatchHighlightStyle" -> {
                Background -> RGBColor[{0, 100, 80}/255.]}}, FontColor -> 
             RGBColor[{147, 161, 161}/255.], Background -> 
             RGBColor[{20, 20, 20}/255.]], 
            Cell[
             StyleData["Output", "Dark"], 
             CellFrame -> {{0.5, 0.5}, {0.5, 0.}}, CellFrameColor -> 
             RGBColor[{147, 161, 161}/255.], 
             CodeAssistOptions -> {
              "HeadHighlightStyle" -> {
                Background -> RGBColor[{7, 54, 66}/255.]}, 
               "MatchHighlightStyle" -> {
                Background -> RGBColor[{0, 100, 80}/255.]}}, FontWeight -> 
             "Bold", FontColor -> RGBColor[{101, 123, 131}/255.], Background -> 
             RGBColor[{30, 30, 30.01}/255.], 
             GraphicsBoxOptions -> {
              Background -> RGBColor[{238, 222, 213}/255.]}], 
            Cell[
             StyleData["Code", "Dark"], CellFrameColor -> 
             RGBColor[{253, 246, 227}/255.], 
             CodeAssistOptions -> {
              "HeadHighlightStyle" -> {
                Background -> RGBColor[{7, 54, 66}/255.]}, 
               "MatchHighlightStyle" -> {
                Background -> RGBColor[{0, 100, 80}/255.]}}, FontColor -> 
             RGBColor[{147, 161, 161}/255.], Background -> 
             RGBColor[{10, 10, 10}/255.]], 
            Cell[
             StyleData["Program", "Dark"], CellFrameColor -> 
             RGBColor[{253, 246, 227}/255.], 
             CodeAssistOptions -> {
              "HeadHighlightStyle" -> {
                Background -> RGBColor[{7, 54, 66}/255.]}, 
               "MatchHighlightStyle" -> {
                Background -> RGBColor[{0, 43, 54}/255.]}}, FontColor -> 
             RGBColor[{147, 161, 161}/255.], Background -> 
             RGBColor[{5, 5, 5}/255.]], 
            Cell[
             StyleData["DisplayFormulaNumbered", "Dark"], 
             CodeAssistOptions -> {
              "HeadHighlightStyle" -> {
                Background -> RGBColor[{0, 0, 0}/255.]}, 
               "MatchHighlightStyle" -> {
                Background -> RGBColor[{0, 100, 80}/255.]}}, FontColor -> 
             RGBColor[{238, 232, 213}/255.]], 
            Cell[
             StyleData["DisplayFormula", "Dark"], 
             CodeAssistOptions -> {
              "HeadHighlightStyle" -> {
                Background -> RGBColor[{0, 0, 0}/255.]}, 
               "MatchHighlightStyle" -> {
                Background -> RGBColor[{0, 100, 80}/255.]}}, FontColor -> 
             RGBColor[{238, 232, 213}/255.]], 
            Cell[
             StyleData["InlineFormula", "Dark"], 
             CodeAssistOptions -> {
              "HeadHighlightStyle" -> {
                Background -> RGBColor[{0, 0, 0}/255.]}, 
               "MatchHighlightStyle" -> {
                Background -> RGBColor[{0, 100, 80}/255.]}}, FontColor -> 
             RGBColor[{238, 232, 213}/255.]]}, Open]]}, Open]]}, Open]]}, 
  WindowSize -> {707, 505}, 
  WindowMargins -> {{Automatic, 317}, {Automatic, -26}}, Visible -> False, 
  FrontEndVersion -> "9.0 for Microsoft Windows (64-bit) (January 25, 2013)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 468, 11, 93, "Text"],
Cell[CellGroupData[{
Cell[1050, 35, 122, 2, 69, "Title"],
Cell[1175, 39, 314, 4, 41, "Subtitle"],
Cell[1492, 45, 262, 3, 59, "Subsubtitle"],
Cell[CellGroupData[{
Cell[1779, 52, 330, 5, 71, "Section"],
Cell[CellGroupData[{
Cell[2134, 61, 244, 4, 56, "Subsection"],
Cell[CellGroupData[{
Cell[2403, 69, 222, 3, 53, "Subsubsection"],
Cell[CellGroupData[{
Cell[2650, 76, 247, 4, 46, "Subsubsubsection"],
Cell[CellGroupData[{
Cell[2922, 84, 259, 4, 42, "Subsubsubsubsection"],
Cell[3184, 90, 331, 5, 42, "Text"],
Cell[3518, 97, 112, 1, 39, "SmallText"],
Cell[CellGroupData[{
Cell[3655, 102, 324, 4, 42, "Item"],
Cell[3982, 108, 262, 3, 42, "ItemNumbered"],
Cell[4247, 113, 274, 3, 42, "ItemParagraph"],
Cell[CellGroupData[{
Cell[4546, 120, 208, 3, 42, "Subitem"],
Cell[4757, 125, 227, 3, 42, "SubitemNumbered"],
Cell[4987, 130, 231, 3, 42, "SubitemParagraph"],
Cell[CellGroupData[{
Cell[5243, 137, 161, 2, 42, "Subsubitem"],
Cell[5407, 141, 184, 2, 42, "SubsubitemNumbered"],
Cell[5594, 145, 189, 2, 42, "SubsubitemParagraph"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[5844, 154, 5088, 138, 590, "Input"],
Cell[10935, 294, 35198, 592, 518, "Output"]
}, Open  ]],
Cell[46148, 889, 5325, 140, 476, "DisplayFormulaNumbered"],
Cell[51476, 1031, 6020, 161, 530, "DisplayFormula"],
Cell[57499, 1194, 5341, 140, 210, "InlineFormula"],
Cell[CellGroupData[{
Cell[62865, 1338, 5009, 136, 201, "Code"],
Cell[67877, 1476, 35198, 592, 339, "Output"]
}, Open  ]],
Cell[103090, 2071, 1228, 21, 505, "Program"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[104415, 2102, 118, 2, 69, "Title"],
Cell[CellGroupData[{
Cell[104558, 2108, 520, 14, 171, "Section"],
Cell[CellGroupData[{
Cell[105103, 2126, 31479, 715, 3425, "Input"],
Cell[136585, 2843, 15045, 332, 754, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[151679, 3181, 348, 7, 171, "Section"],
Cell[152030, 3190, 793, 16, 58, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[152826, 3208, 1000, 33, 148, "Output"],
Cell[153829, 3243, 166, 3, 58, "Input"],
Cell[CellGroupData[{
Cell[154020, 3250, 366, 7, 99, "Subsubsubsubsection"],
Cell[154389, 3259, 1631, 46, 174, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[156057, 3310, 601, 10, 128, "Subsubsubsubsection"],
Cell[156661, 3322, 1792, 51, 134, "DisplayFormulaNumbered",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[158456, 3375, 296, 6, 68, "Text"],
Cell[158755, 3383, 1842, 53, 134, "DisplayFormula",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[160600, 3438, 114, 2, 42, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
