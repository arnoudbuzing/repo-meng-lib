(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    226699,       4421]
NotebookOptionsPosition[    220933,       4304]
NotebookOutlinePosition[    222086,       4336]
CellTagsIndexPosition[    221904,       4329]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ExternalEvaluate", "Title",ExpressionUUID->"7adac6b6-0dd7-4b2a-8b80-1283116d06ab"],

Cell[CellGroupData[{

Cell["Finding Python external evaluators", "Subsection",ExpressionUUID->"75307a0f-87a0-45b0-9ac9-55f4d54eab4d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FindExternalEvaluators"}]], "Input",ExpressionUUID->"f1d65c3e-e90e-433f-8a6e-68ef07e4411a"],

Cell[BoxData[
 RowBox[{"\<\"\\!\\(\\*RowBox[{\\\"FindExternalEvaluators\\\", \\\"[\\\", \
\\\"]\\\"}]\\) finds installed external evaluators that can be used with \
ExternalEvaluate, returning a dataset of the results \
found.\\n\\!\\(\\*RowBox[{\\\"FindExternalEvaluators\\\", \\\"[\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"sys\\\\\\\",\\\\\\\"TI\\\
\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\"]\\\"}]\\) finds \
only external evaluators for language or system \
\\!\\(\\*StyleBox[\\\"sys\\\", \\\"TI\\\"]\\).\"\>", "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/FindExternalEvaluators"]}]], "Print", "PrintUsage",
 
 CellTags->
  "Info1643714681949-6406583",ExpressionUUID->"f18a3bbf-5927-4fa2-911a-\
d6fc6afc5776"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindExternalEvaluators", "[", "\"\<Python\>\"", "]"}]], "Input",Expr\
essionUUID->"dd35f1ee-3acd-4abe-90fe-bd064b09b4c6"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 5, "Length" -> 5, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"Executable", "Version", "Registered"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["2.7.13", "3.6.2"]], TypeSystem`AnyType}],
           5], "Shape" -> TypeSystem`PackageScope`HeaderShape[
          Association[{All, 
             TypeSystem`PackageScope`KeyDummy[4]} -> 1, {All, "Executable"} -> 
           1, {All, "Version"} -> 1, {All, "Registered"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[345.6], 
             TypeSystem`PackageScope`RowShape[
              Association[
              "Executable" -> 
               TypeSystem`PackageScope`AtomShape[480.00000000000006`], 
               "Version" -> TypeSystem`PackageScope`AtomShape[54.], 
               "Registered" -> TypeSystem`PackageScope`UnknownShape]]]], 
           5, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1574377410], "Type" -> 
        TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"Executable", "Version", "Registered"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["2.7.13", "3.6.2"]], TypeSystem`AnyType}],
           5], "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1574377410]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 403229319][{
                    All, Keys}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[403229319][
                 
                  GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Executable\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Executable\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 403229319][{
                    All, "Executable"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[403229319][
                 
                  GeneralUtilities`Slice[All, "Executable"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Version\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Version\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 403229319][{
                    All, "Version"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[403229319][
                 
                  GeneralUtilities`Slice[All, "Version"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Registered\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Registered\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 403229319][{
                    All, "Registered"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[403229319][
                 
                  GeneralUtilities`Slice[All, "Registered"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["095eda78-cf1b-4c2c-a6f4-b4985f6ffd4f", 
                    Style[
                    "095eda78-cf1b-4c2c-a6f4-b4985f6ffd4f", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 403229319][{
                    
                    Key["095eda78-cf1b-4c2c-a6f4-b4985f6ffd4f"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[403229319][
                   GeneralUtilities`Slice[
                    Key["095eda78-cf1b-4c2c-a6f4-b4985f6ffd4f"]]], "Mouse"], 
                 ImageSize -> {{345.6, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["/usr/local/bin/python2", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[403229319][
                 
                  GeneralUtilities`Slice[
                   Key["095eda78-cf1b-4c2c-a6f4-b4985f6ffd4f"], 
                   Key["Executable"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2.7.13", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[403229319][
                 
                  GeneralUtilities`Slice[
                   Key["095eda78-cf1b-4c2c-a6f4-b4985f6ffd4f"], 
                   Key["Version"]]], "Mouse"], 
                ImageSize -> {{54., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "Automatic", FontFamily -> "Source Code Pro", FontSize -> 
                   13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[403229319][
                 
                  GeneralUtilities`Slice[
                   Key["095eda78-cf1b-4c2c-a6f4-b4985f6ffd4f"], 
                   Key["Registered"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["e0016952-dc94-4f67-9829-f83d1c444c4d", 
                    Style[
                    "e0016952-dc94-4f67-9829-f83d1c444c4d", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 403229319][{
                    
                    Key["e0016952-dc94-4f67-9829-f83d1c444c4d"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[403229319][
                   GeneralUtilities`Slice[
                    Key["e0016952-dc94-4f67-9829-f83d1c444c4d"]]], "Mouse"], 
                 ImageSize -> {{345.6, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["/usr/local/bin/python2.7", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[403229319][
                 
                  GeneralUtilities`Slice[
                   Key["e0016952-dc94-4f67-9829-f83d1c444c4d"], 
                   Key["Executable"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2.7.13", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[403229319][
                 
                  GeneralUtilities`Slice[
                   Key["e0016952-dc94-4f67-9829-f83d1c444c4d"], 
                   Key["Version"]]], "Mouse"], 
                ImageSize -> {{54., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "Automatic", FontFamily -> "Source Code Pro", FontSize -> 
                   13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[403229319][
                 
                  GeneralUtilities`Slice[
                   Key["e0016952-dc94-4f67-9829-f83d1c444c4d"], 
                   Key["Registered"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["81d8430b-a08f-4845-9291-f399c7723b31", 
                    Style[
                    "81d8430b-a08f-4845-9291-f399c7723b31", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 403229319][{
                    
                    Key["81d8430b-a08f-4845-9291-f399c7723b31"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[403229319][
                   GeneralUtilities`Slice[
                    Key["81d8430b-a08f-4845-9291-f399c7723b31"]]], "Mouse"], 
                 ImageSize -> {{345.6, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["/usr/local/bin/python3", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[403229319][
                 
                  GeneralUtilities`Slice[
                   Key["81d8430b-a08f-4845-9291-f399c7723b31"], 
                   Key["Executable"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["3.6.2", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[403229319][
                 
                  GeneralUtilities`Slice[
                   Key["81d8430b-a08f-4845-9291-f399c7723b31"], 
                   Key["Version"]]], "Mouse"], 
                ImageSize -> {{54., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "Automatic", FontFamily -> "Source Code Pro", FontSize -> 
                   13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[403229319][
                 
                  GeneralUtilities`Slice[
                   Key["81d8430b-a08f-4845-9291-f399c7723b31"], 
                   Key["Registered"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["3b86d8d4-124b-40fc-8554-9766de0dc367", 
                    Style[
                    "3b86d8d4-124b-40fc-8554-9766de0dc367", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 403229319][{
                    
                    Key["3b86d8d4-124b-40fc-8554-9766de0dc367"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[403229319][
                   GeneralUtilities`Slice[
                    Key["3b86d8d4-124b-40fc-8554-9766de0dc367"]]], "Mouse"], 
                 ImageSize -> {{345.6, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["/usr/local/bin/python3.6", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[403229319][
                 
                  GeneralUtilities`Slice[
                   Key["3b86d8d4-124b-40fc-8554-9766de0dc367"], 
                   Key["Executable"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["3.6.2", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[403229319][
                 
                  GeneralUtilities`Slice[
                   Key["3b86d8d4-124b-40fc-8554-9766de0dc367"], 
                   Key["Version"]]], "Mouse"], 
                ImageSize -> {{54., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "Automatic", FontFamily -> "Source Code Pro", FontSize -> 
                   13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[403229319][
                 
                  GeneralUtilities`Slice[
                   Key["3b86d8d4-124b-40fc-8554-9766de0dc367"], 
                   Key["Registered"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["6fcc3301-394e-4910-bdc6-eb2094c1bd12", 
                    Style[
                    "6fcc3301-394e-4910-bdc6-eb2094c1bd12", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 403229319][{
                    
                    Key["6fcc3301-394e-4910-bdc6-eb2094c1bd12"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[403229319][
                   GeneralUtilities`Slice[
                    Key["6fcc3301-394e-4910-bdc6-eb2094c1bd12"]]], "Mouse"], 
                 ImageSize -> {{345.6, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "/Users/meng/python_virtualenvs/virtualenv-test/bin/python2.\
7", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[403229319][
                 
                  GeneralUtilities`Slice[
                   Key["6fcc3301-394e-4910-bdc6-eb2094c1bd12"], 
                   Key["Executable"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2.7.13", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[403229319][
                 
                  GeneralUtilities`Slice[
                   Key["6fcc3301-394e-4910-bdc6-eb2094c1bd12"], 
                   Key["Version"]]], "Mouse"], 
                ImageSize -> {{54., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[403229319][
                 
                  GeneralUtilities`Slice[
                   Key["6fcc3301-394e-4910-bdc6-eb2094c1bd12"], 
                   Key["Registered"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 403229319][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 403229319]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[403229319][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[403229319][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {989., {79.634033203125, 85.365966796875}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",ExpressionUUID->\
"4018df10-c517-4e8f-9624-5818edd3f033"]
}, Open  ]],

Cell["\<\
Find Python external evaluators of a particular version and their paths:\
\>", "Text",ExpressionUUID->"1b8e363e-1a20-428b-b039-aa7ac0a80286"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FindExternalEvaluators", "[", "\"\<Python\>\"", "]"}], "[", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"#Version", "===", "\"\<3.6.2\>\""}], "&"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Append", "[", "\[IndentingNewLine]", 
     RowBox[{"#", ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<InstallLocation\>\"", "\[Rule]", 
       RowBox[{"ExternalEvaluate", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<Python\>\"", ",", 
           RowBox[{"\"\<Executable\>\"", "\[Rule]", "#Executable"}]}], "}"}], 
         ",", "\[IndentingNewLine]", "\"\<import sys; sys.executable\>\""}], 
        "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
    "&"}]}], "\[IndentingNewLine]", "]"}]], "Input",ExpressionUUID->"e3ddd1cc-\
680f-4c04-b52a-593d377230bc"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 2, "Length" -> 2, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          
          TypeSystem`Struct[{
           "Executable", "Version", "Registered", "InstallLocation"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Atom[String]}], 2], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, 
             TypeSystem`PackageScope`KeyDummy[8]} -> 1, {All, "Executable"} -> 
           1, {All, "Version"} -> 1, {All, "Registered"} -> 
           1, {All, "InstallLocation"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[345.6], 
             TypeSystem`PackageScope`RowShape[
              Association[
              "Executable" -> 
               TypeSystem`PackageScope`AtomShape[230.40000000000003`], 
               "Version" -> 
               TypeSystem`PackageScope`AtomShape[48.00000000000001], 
               "Registered" -> TypeSystem`PackageScope`UnknownShape, 
               "InstallLocation" -> 
               TypeSystem`PackageScope`AtomShape[345.6]]]]], 2, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[1038004527], 
        "Type" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          
          TypeSystem`Struct[{
           "Executable", "Version", "Registered", "InstallLocation"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Atom[String]}], 2], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[1038004527]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1007717436][{All, Keys}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007717436][
                  GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Executable\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Executable\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1007717436][{All, "Executable"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007717436][
                  GeneralUtilities`Slice[All, "Executable"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Version\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Version\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1007717436][{All, "Version"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007717436][
                  GeneralUtilities`Slice[All, "Version"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Registered\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Registered\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1007717436][{All, "Registered"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007717436][
                  GeneralUtilities`Slice[All, "Registered"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"InstallLocation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"InstallLocation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1007717436][{All, "InstallLocation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007717436][
                  GeneralUtilities`Slice[All, "InstallLocation"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["81d8430b-a08f-4845-9291-f399c7723b31", 
                    Style[
                    "81d8430b-a08f-4845-9291-f399c7723b31", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1007717436][{
                    Key["81d8430b-a08f-4845-9291-f399c7723b31"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1007717436][
                   GeneralUtilities`Slice[
                    Key["81d8430b-a08f-4845-9291-f399c7723b31"]]], "Mouse"], 
                 ImageSize -> {{345.6, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["/usr/local/bin/python3", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007717436][
                  GeneralUtilities`Slice[
                   Key["81d8430b-a08f-4845-9291-f399c7723b31"], 
                   Key["Executable"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["3.6.2", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007717436][
                  GeneralUtilities`Slice[
                   Key["81d8430b-a08f-4845-9291-f399c7723b31"], 
                   Key["Version"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "Automatic", FontFamily -> "Source Code Pro", FontSize -> 
                   13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007717436][
                  GeneralUtilities`Slice[
                   Key["81d8430b-a08f-4845-9291-f399c7723b31"], 
                   Key["Registered"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["/usr/local/opt/python3/bin/python3.6", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007717436][
                  GeneralUtilities`Slice[
                   Key["81d8430b-a08f-4845-9291-f399c7723b31"], 
                   Key["InstallLocation"]]], "Mouse"], 
                ImageSize -> {{345.6, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["3b86d8d4-124b-40fc-8554-9766de0dc367", 
                    Style[
                    "3b86d8d4-124b-40fc-8554-9766de0dc367", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1007717436][{
                    Key["3b86d8d4-124b-40fc-8554-9766de0dc367"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1007717436][
                   GeneralUtilities`Slice[
                    Key["3b86d8d4-124b-40fc-8554-9766de0dc367"]]], "Mouse"], 
                 ImageSize -> {{345.6, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["/usr/local/bin/python3.6", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007717436][
                  GeneralUtilities`Slice[
                   Key["3b86d8d4-124b-40fc-8554-9766de0dc367"], 
                   Key["Executable"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["3.6.2", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007717436][
                  GeneralUtilities`Slice[
                   Key["3b86d8d4-124b-40fc-8554-9766de0dc367"], 
                   Key["Version"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "Automatic", FontFamily -> "Source Code Pro", FontSize -> 
                   13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007717436][
                  GeneralUtilities`Slice[
                   Key["3b86d8d4-124b-40fc-8554-9766de0dc367"], 
                   Key["Registered"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["/usr/local/opt/python3/bin/python3.6", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007717436][
                  GeneralUtilities`Slice[
                   Key["3b86d8d4-124b-40fc-8554-9766de0dc367"], 
                   Key["InstallLocation"]]], "Mouse"], 
                ImageSize -> {{345.6, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1007717436][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1007717436]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007717436][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007717436][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {1089., {42.134033203125, 47.865966796875}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",ExpressionUUID->\
"5220ce9a-abf7-4728-990d-be11506da03e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Installing a Python interpreter in a virtualenv", "Subsubsection",ExpressionUUID->"dcfa5b04-9af7-4651-b38c-e1c71c08a935"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "RegisterExternalEvaluator"}]], "Input",ExpressionUUID->"57e3550f-837f-41c6-9e57-297770ef035c"],

Cell[BoxData[
 RowBox[{"\<\"\\!\\(\\*RowBox[{\\\"RegisterExternalEvaluator\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"sys\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"exec\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) registers the executable \
\\!\\(\\*StyleBox[\\\"exec\\\", \\\"TI\\\"]\\) for use as an external \
evaluator with the language or system \\!\\(\\*StyleBox[\\\"sys\\\", \\\"TI\\\
\"]\\).\"\>", "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/RegisterExternalEvaluator"]}]], "Print", \
"PrintUsage",
 CellTags->
  "Info3173714762266-8229228",ExpressionUUID->"2f3e5a2e-fcf7-4ac3-93a1-\
9e7b5a6ca4e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RunProcess", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\</Users/meng/python_virtualenvs/virtualenv-test/bin/python2.7\>\"", 
     ",", "\"\<--version\>\""}], "}"}], ",", "All"}], "]"}]], "Input",Expressi\
onUUID->"26235dfa-f91f-4429-aafc-50c60c6d8200"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ExitCode\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"StandardOutput\"\>", "\[Rule]", "\<\"\"\>"}], ",", 
   RowBox[{"\<\"StandardError\"\>", "\[Rule]", "\<\"Python 2.7.13\\n\"\>"}]}],
   "\[RightAssociation]"}]], "Output",ExpressionUUID->"adf8665a-c28c-4e4d-\
88db-8e478b4984c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "virtualenvPython", "=", 
     "\"\</Users/meng/python_virtualenvs/virtualenv-test/bin/python2.7\>\""}],
     "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"RegisterExternalEvaluator", "[", 
    RowBox[{"\"\<Python\>\"", ",", "virtualenvPython"}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",ExpressionUUID->"ec880d5a-e23f-4b42-\
ac2d-1cd4ea6e8eb5"],

Cell[BoxData["\<\"6fcc3301-394e-4910-bdc6-eb2094c1bd12\"\>"], "Output",ExpressionUUID->"42e4b2ed-cdbc-40e2-962a-faaa01c79286"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindExternalEvaluators", "[", "\"\<Python\>\"", "]"}]], "Input",Expr\
essionUUID->"11091934-0371-4bca-b7d5-f5c83afcd4ba"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 5, "Length" -> 5, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"Executable", "Version", "Registered"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["2.7.13", "3.6.2"]], TypeSystem`AnyType}],
           5], "Shape" -> TypeSystem`PackageScope`HeaderShape[
          Association[{All, 
             TypeSystem`PackageScope`KeyDummy[6]} -> 1, {All, "Executable"} -> 
           1, {All, "Version"} -> 1, {All, "Registered"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[345.6], 
             TypeSystem`PackageScope`RowShape[
              Association[
              "Executable" -> 
               TypeSystem`PackageScope`AtomShape[480.00000000000006`], 
               "Version" -> TypeSystem`PackageScope`AtomShape[54.], 
               "Registered" -> TypeSystem`PackageScope`UnknownShape]]]], 
           5, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1642757281], "Type" -> 
        TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"Executable", "Version", "Registered"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["2.7.13", "3.6.2"]], TypeSystem`AnyType}],
           5], "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1642757281]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1850682548][{All, Keys}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1850682548][
                  GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Executable\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Executable\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1850682548][{All, "Executable"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1850682548][
                  GeneralUtilities`Slice[All, "Executable"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Version\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Version\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1850682548][{All, "Version"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1850682548][
                  GeneralUtilities`Slice[All, "Version"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Registered\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Registered\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1850682548][{All, "Registered"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1850682548][
                  GeneralUtilities`Slice[All, "Registered"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["095eda78-cf1b-4c2c-a6f4-b4985f6ffd4f", 
                    Style[
                    "095eda78-cf1b-4c2c-a6f4-b4985f6ffd4f", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1850682548][{
                    Key["095eda78-cf1b-4c2c-a6f4-b4985f6ffd4f"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1850682548][
                   GeneralUtilities`Slice[
                    Key["095eda78-cf1b-4c2c-a6f4-b4985f6ffd4f"]]], "Mouse"], 
                 ImageSize -> {{345.6, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["/usr/local/bin/python2", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1850682548][
                  GeneralUtilities`Slice[
                   Key["095eda78-cf1b-4c2c-a6f4-b4985f6ffd4f"], 
                   Key["Executable"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2.7.13", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1850682548][
                  GeneralUtilities`Slice[
                   Key["095eda78-cf1b-4c2c-a6f4-b4985f6ffd4f"], 
                   Key["Version"]]], "Mouse"], 
                ImageSize -> {{54., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "Automatic", FontFamily -> "Source Code Pro", FontSize -> 
                   13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1850682548][
                  GeneralUtilities`Slice[
                   Key["095eda78-cf1b-4c2c-a6f4-b4985f6ffd4f"], 
                   Key["Registered"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["e0016952-dc94-4f67-9829-f83d1c444c4d", 
                    Style[
                    "e0016952-dc94-4f67-9829-f83d1c444c4d", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1850682548][{
                    Key["e0016952-dc94-4f67-9829-f83d1c444c4d"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1850682548][
                   GeneralUtilities`Slice[
                    Key["e0016952-dc94-4f67-9829-f83d1c444c4d"]]], "Mouse"], 
                 ImageSize -> {{345.6, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["/usr/local/bin/python2.7", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1850682548][
                  GeneralUtilities`Slice[
                   Key["e0016952-dc94-4f67-9829-f83d1c444c4d"], 
                   Key["Executable"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2.7.13", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1850682548][
                  GeneralUtilities`Slice[
                   Key["e0016952-dc94-4f67-9829-f83d1c444c4d"], 
                   Key["Version"]]], "Mouse"], 
                ImageSize -> {{54., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "Automatic", FontFamily -> "Source Code Pro", FontSize -> 
                   13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1850682548][
                  GeneralUtilities`Slice[
                   Key["e0016952-dc94-4f67-9829-f83d1c444c4d"], 
                   Key["Registered"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["81d8430b-a08f-4845-9291-f399c7723b31", 
                    Style[
                    "81d8430b-a08f-4845-9291-f399c7723b31", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1850682548][{
                    Key["81d8430b-a08f-4845-9291-f399c7723b31"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1850682548][
                   GeneralUtilities`Slice[
                    Key["81d8430b-a08f-4845-9291-f399c7723b31"]]], "Mouse"], 
                 ImageSize -> {{345.6, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["/usr/local/bin/python3", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1850682548][
                  GeneralUtilities`Slice[
                   Key["81d8430b-a08f-4845-9291-f399c7723b31"], 
                   Key["Executable"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["3.6.2", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1850682548][
                  GeneralUtilities`Slice[
                   Key["81d8430b-a08f-4845-9291-f399c7723b31"], 
                   Key["Version"]]], "Mouse"], 
                ImageSize -> {{54., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "Automatic", FontFamily -> "Source Code Pro", FontSize -> 
                   13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1850682548][
                  GeneralUtilities`Slice[
                   Key["81d8430b-a08f-4845-9291-f399c7723b31"], 
                   Key["Registered"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["3b86d8d4-124b-40fc-8554-9766de0dc367", 
                    Style[
                    "3b86d8d4-124b-40fc-8554-9766de0dc367", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1850682548][{
                    Key["3b86d8d4-124b-40fc-8554-9766de0dc367"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1850682548][
                   GeneralUtilities`Slice[
                    Key["3b86d8d4-124b-40fc-8554-9766de0dc367"]]], "Mouse"], 
                 ImageSize -> {{345.6, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["/usr/local/bin/python3.6", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1850682548][
                  GeneralUtilities`Slice[
                   Key["3b86d8d4-124b-40fc-8554-9766de0dc367"], 
                   Key["Executable"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["3.6.2", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1850682548][
                  GeneralUtilities`Slice[
                   Key["3b86d8d4-124b-40fc-8554-9766de0dc367"], 
                   Key["Version"]]], "Mouse"], 
                ImageSize -> {{54., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "Automatic", FontFamily -> "Source Code Pro", FontSize -> 
                   13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1850682548][
                  GeneralUtilities`Slice[
                   Key["3b86d8d4-124b-40fc-8554-9766de0dc367"], 
                   Key["Registered"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["6fcc3301-394e-4910-bdc6-eb2094c1bd12", 
                    Style[
                    "6fcc3301-394e-4910-bdc6-eb2094c1bd12", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1850682548][{
                    Key["6fcc3301-394e-4910-bdc6-eb2094c1bd12"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1850682548][
                   GeneralUtilities`Slice[
                    Key["6fcc3301-394e-4910-bdc6-eb2094c1bd12"]]], "Mouse"], 
                 ImageSize -> {{345.6, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "/Users/meng/python_virtualenvs/virtualenv-test/bin/python2.\
7", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1850682548][
                  GeneralUtilities`Slice[
                   Key["6fcc3301-394e-4910-bdc6-eb2094c1bd12"], 
                   Key["Executable"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2.7.13", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1850682548][
                  GeneralUtilities`Slice[
                   Key["6fcc3301-394e-4910-bdc6-eb2094c1bd12"], 
                   Key["Version"]]], "Mouse"], 
                ImageSize -> {{54., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1850682548][
                  GeneralUtilities`Slice[
                   Key["6fcc3301-394e-4910-bdc6-eb2094c1bd12"], 
                   Key["Registered"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = BoxObject[165489]}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1850682548][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1850682548]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1850682548][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1850682548][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {989., {79.634033203125, 85.365966796875}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",ExpressionUUID->\
"c6759550-d863-475f-a987-97e0d5cae618"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ExternalEvaluate`Private`findLangInstall", "Subsubsection",ExpressionUUID->"7c3cd816-2b09-4d56-a29f-7333edb66ea9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ExternalEvaluate`Private`findLangInstall"}]], "Input",Expressio\
nUUID->"5542fecd-0739-4c57-9c85-2c0d987db48b"],

Cell[CellGroupData[{

Cell["ExternalEvaluate`Private`findLangInstall", "Print", "PrintUsage",
 CellTags->
  "Info1333714679557-6406583",ExpressionUUID->"7dffa8b8-c6b0-4179-817d-\
1fc05bd5ac22"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"ExternalEvaluate`Private`findLangInstall", "[", 
          RowBox[{
          "ExternalEvaluate`Private`lang_", ",", 
           "ExternalEvaluate`Private`version_"}], "]"}], ":=", 
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"ExternalEvaluate`Private`paths", "=", 
              RowBox[{
               RowBox[{"ExternalEvaluate`Private`$LanguageHeuristics", "[", 
                RowBox[{
                "ExternalEvaluate`Private`lang", 
                 ",", "\<\"ExecutablePathFunction\"\>"}], "]"}], "[", 
               "ExternalEvaluate`Private`version", "]"}]}], ",", 
             RowBox[{"ExternalEvaluate`Private`executablePattern", "=", 
              RowBox[{
               RowBox[{"ExternalEvaluate`Private`$LanguageHeuristics", "[", 
                RowBox[{
                "ExternalEvaluate`Private`lang", 
                 ",", "\<\"ExecutablePatternFunction\"\>"}], "]"}], "[", 
               "ExternalEvaluate`Private`version", "]"}]}], ",", 
             "ExternalEvaluate`Private`possibleInstalls", ",", 
             "ExternalEvaluate`Private`validInstall"}], "}"}], ",", 
           RowBox[{
            RowBox[{"ExternalEvaluate`Private`possibleInstalls", "=", 
             RowBox[{"FileNames", "[", 
              RowBox[{
              "ExternalEvaluate`Private`executablePattern", ",", 
               "ExternalEvaluate`Private`paths"}], "]"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"ExternalEvaluate`Private`possibleInstalls", "===", 
               RowBox[{"{", "}"}]}], ",", 
              RowBox[{"Failure", "[", 
               RowBox[{"\<\"NoLanguage\"\>", ",", 
                RowBox[{"Association", "[", "]"}]}], "]"}], ",", 
              RowBox[{
               RowBox[{"ExternalEvaluate`Private`validInstall", "=", 
                RowBox[{
                 RowBox[{"SelectFirst", "[", 
                  RowBox[{
                   RowBox[{
                   "ExternalEvaluate`Private`validLangInstallQ", "[", 
                    RowBox[{"#1", ",", "ExternalEvaluate`Private`version"}], 
                    "]"}], "&"}], "]"}], "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    "ExternalEvaluate`Private`makeInstallEntryAssoc", "[", 
                    RowBox[{"ExternalEvaluate`Private`lang", ",", "#1"}], 
                    "]"}], "&"}], ")"}], "/@", 
                  "ExternalEvaluate`Private`possibleInstalls"}], "]"}]}], ";", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                 "MissingQ", "[", "ExternalEvaluate`Private`validInstall", 
                  "]"}], ",", 
                 RowBox[{"Failure", "[", 
                  RowBox[{"\<\"NoValid\"\>", ",", 
                   RowBox[{"Association", "[", "]"}]}], "]"}], ",", 
                 "ExternalEvaluate`Private`validInstall"}], "]"}]}]}], 
             "]"}]}]}], "]"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[ExternalEvaluate`Private`findLangInstall],
  Editable->False]], "Print",
 CellTags->
  "Info1333714679557-6406583",ExpressionUUID->"3abfd411-efc3-4b2f-914d-\
58bc9d07d038"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExternalEvaluate`Private`$LanguageHeuristics", "[", 
  RowBox[{"\"\<Python\>\"", ",", "\"\<ExecutablePathFunction\>\""}], 
  "]"}]], "Input",ExpressionUUID->"a62d9a81-29be-4ee5-89a6-bc3f1f45beca"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{
   RowBox[{"{", "ExternalEvaluate`Private`vers", "}"}], ",", 
   RowBox[{"Switch", "[", 
    RowBox[{
    "$OperatingSystem", ",", "\[IndentingNewLine]", "\<\"Windows\"\>", ",", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ExternalEvaluate`Private`maindrive", "=", 
         RowBox[{"First", "[", 
          RowBox[{"FileNameSplit", "[", 
           RowBox[{"Environment", "[", "\<\"PROGRAMFILES\"\>", "]"}], "]"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"FileNameJoin", "[", 
          RowBox[{"{", 
           RowBox[{
           "ExternalEvaluate`Private`maindrive", ",", "\<\"Python\"\>"}], 
           "}"}], "]"}], ",", 
         RowBox[{"FileNameJoin", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Environment", "[", "\<\"LOCALAPPDATA\"\>", "]"}], 
            ",", "\<\"Programs\"\>", ",", "\<\"Python\"\>", 
            ",", "\<\"Python\"\>"}], "}"}], "]"}], ",", 
         RowBox[{"FileNameJoin", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Environment", "[", "\<\"PROGRAMFILES\"\>", "]"}], 
            ",", "\<\"Python\"\>"}], "}"}], "]"}], ",", 
         RowBox[{"FileNameJoin", "[", 
          RowBox[{"{", 
           RowBox[{"ExternalEvaluate`Private`maindrive", ",", 
            RowBox[{"\<\"Python\"\>", "<>", 
             RowBox[{"StringJoin", "[", 
              RowBox[{"Take", "[", 
               RowBox[{
                RowBox[{"StringSplit", "[", 
                 RowBox[{"ExternalEvaluate`Private`vers", ",", "\<\".\"\>"}], 
                 "]"}], ",", 
                RowBox[{"UpTo", "[", "2", "]"}]}], "]"}], "]"}]}]}], "}"}], 
          "]"}], ",", 
         RowBox[{"FileNameJoin", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Environment", "[", "\<\"LOCALAPPDATA\"\>", "]"}], 
            ",", "\<\"Programs\"\>", ",", "\<\"Python\"\>", ",", 
            RowBox[{"\<\"Python\"\>", "<>", 
             RowBox[{"StringJoin", "[", 
              RowBox[{"Take", "[", 
               RowBox[{
                RowBox[{"StringSplit", "[", 
                 RowBox[{"ExternalEvaluate`Private`vers", ",", "\<\".\"\>"}], 
                 "]"}], ",", 
                RowBox[{"UpTo", "[", "2", "]"}]}], "]"}], "]"}]}]}], "}"}], 
          "]"}], ",", 
         RowBox[{"FileNameJoin", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Environment", "[", "\<\"PROGRAMFILES\"\>", "]"}], ",", 
            RowBox[{"\<\"Python\"\>", "<>", 
             RowBox[{"StringJoin", "[", 
              RowBox[{"Take", "[", 
               RowBox[{
                RowBox[{"StringSplit", "[", 
                 RowBox[{"ExternalEvaluate`Private`vers", ",", "\<\".\"\>"}], 
                 "]"}], ",", 
                RowBox[{"UpTo", "[", "2", "]"}]}], "]"}], "]"}]}]}], "}"}], 
          "]"}], ",", 
         RowBox[{"FileNameJoin", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Environment", "[", "\<\"PROGRAMFILES(X86)\"\>", "]"}], 
            ",", "\<\"Python-32\"\>"}], "}"}], "]"}], ",", 
         RowBox[{"FileNameJoin", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Environment", "[", "\<\"LOCALAPPDATA\"\>", "]"}], 
            ",", "\<\"Programs\"\>", ",", "\<\"Python\"\>", ",", 
            RowBox[{"\<\"Python\"\>", "<>", 
             RowBox[{"StringJoin", "[", 
              RowBox[{"Take", "[", 
               RowBox[{
                RowBox[{"StringSplit", "[", 
                 RowBox[{"ExternalEvaluate`Private`vers", ",", "\<\".\"\>"}], 
                 "]"}], ",", 
                RowBox[{"UpTo", "[", "2", "]"}]}], "]"}], "]"}], 
             "<>", "\<\"-32\"\>"}]}], "}"}], "]"}], ",", 
         RowBox[{"FileNameJoin", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Environment", "[", "\<\"PROGRAMFILES(X86)\"\>", "]"}], 
            ",", 
            RowBox[{"\<\"Python\"\>", "<>", 
             RowBox[{"StringJoin", "[", 
              RowBox[{"Take", "[", 
               RowBox[{
                RowBox[{"StringSplit", "[", 
                 RowBox[{"ExternalEvaluate`Private`vers", ",", "\<\".\"\>"}], 
                 "]"}], ",", 
                RowBox[{"UpTo", "[", "2", "]"}]}], "]"}], "]"}], 
             "<>", "\<\"-32\"\>"}]}], "}"}], "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", "\<\"MacOSX\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"/usr/bin\"\>", ",", "\<\"/usr/local/bin/\"\>", 
       ",", "\<\"/usr/local/sbin\"\>", ",", "\<\"/usr/local/Cellar/bin\"\>"}],
       "}"}], ",", "\[IndentingNewLine]", "\<\"Unix\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"/usr/bin\"\>", ",", "\<\"/usr/local/bin/\"\>", 
       ",", "\<\"/usr/local/sbin\"\>"}], "}"}]}], "]"}]}], "]"}]], "Output",Ex\
pressionUUID->"e59044a4-7cf1-4efc-af1a-972bd21b819c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Starting external evaluator sessions", "Subsection",ExpressionUUID->"11392249-55ea-499e-ba39-d6dc03f4c080"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"python", "=", 
  RowBox[{"StartExternalSession", "[", "\"\<Python\>\"", "]"}]}]], "Input",Exp\
ressionUUID->"c7b0268f-26b0-4035-8ce0-722c6eb7bf0a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ExternalSessionObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1: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
ARj8Ezj8P9xqSbg=
               "], {{0, 100}, {100, 0}}, {0, 255}, 
               ColorFunction -> RGBColor], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSizeRaw -> {100, 100}, PlotRange -> {{0, 100}, {0, 100}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"System: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Python\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"4b1ab499-9533-47c9-8a55-eb98a9371040\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"EvaluationCount: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    And[
                    ValueQ[ExternalEvaluate`Private`$Links], 
                    KeyExistsQ[
                    ExternalEvaluate`Private`$Links, 
                    "4b1ab499-9533-47c9-8a55-eb98a9371040"]], 
                    ExternalSessionObject[
                    "4b1ab499-9533-47c9-8a55-eb98a9371040"][
                    "EvaluationCount"], None], StandardForm]], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1: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
ARj8Ezj8P9xqSbg=
               "], {{0, 100}, {100, 0}}, {0, 255}, 
               ColorFunction -> RGBColor], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSizeRaw -> {100, 100}, PlotRange -> {{0, 100}, {0, 100}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"System: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Python\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"4b1ab499-9533-47c9-8a55-eb98a9371040\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"EvaluationCount: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    And[
                    ValueQ[ExternalEvaluate`Private`$Links], 
                    KeyExistsQ[
                    ExternalEvaluate`Private`$Links, 
                    "4b1ab499-9533-47c9-8a55-eb98a9371040"]], 
                    ExternalSessionObject[
                    "4b1ab499-9533-47c9-8a55-eb98a9371040"][
                    "EvaluationCount"], None], StandardForm]], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Process: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"ProcessObject", "[", "119", "]"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Epilog: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Prolog: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"2.7.13\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Executable: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"/usr/local/bin/python2\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ReturnType: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Expression\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Socket: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["SocketObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], 
                    PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"674f80d9-2f3f-4e90-9fa3-73c9e5aba1e2\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ZMQ_PAIR\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"DestinationIPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"IPAddress", "[", "\"127.0.0.1\"", "]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"DestinationPort: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"62713\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], 
                    PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"674f80d9-2f3f-4e90-9fa3-73c9e5aba1e2\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ZMQ_PAIR\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"DestinationIPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"IPAddress", "[", "\"127.0.0.1\"", "]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"DestinationPort: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"62713\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"SourceIPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    RowBox[{"IPAddress", "[", "\"::fc00:230e:2162:e547\"", 
                    "]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"SourcePort: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"0\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel", 
                    DisplayFunction -> (
                    ButtonBox[#, Active -> False, Alignment -> Left, 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> 7, BaseStyle -> {}, 
                    DefaultBaseStyle -> {"Panel", Background -> None}, 
                    BaselinePosition -> Baseline]& )], 
                    DynamicModuleValues :> {}], "]"}], 
                   SocketObject["674f80d9-2f3f-4e90-9fa3-73c9e5aba1e2"], 
                   Selectable -> False, Editable -> False, SelectWithContents -> 
                   True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"SessionTime: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    And[
                    ValueQ[ExternalEvaluate`Private`$Links], 
                    KeyExistsQ[
                    ExternalEvaluate`Private`$Links, 
                    "4b1ab499-9533-47c9-8a55-eb98a9371040"]], 
                    ExternalSessionObject[
                    "4b1ab499-9533-47c9-8a55-eb98a9371040"]["SessionTime"], 
                    None], StandardForm]], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel",
     DisplayFunction->(
      ButtonBox[#, Active -> False, Alignment -> Left, 
       Appearance -> {
        "Default" -> 
         FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
       FrameMargins -> 7, BaseStyle -> {}, 
       DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
       Baseline]& )],
    DynamicModuleValues:>{}], "]"}],
  ExternalSessionObject["4b1ab499-9533-47c9-8a55-eb98a9371040"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",ExpressionUUID->"94aba59f-168b-4e66-90d2-81f67b6343bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"virtualenvPython", "=", 
  RowBox[{"StartExternalSession", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<System\>\"", "\[Rule]", "\"\<Python\>\""}], ",", 
     RowBox[{
     "\"\<Executable\>\"", "\[Rule]", 
      "\"\</Users/meng/python_virtualenvs/virtualenv-test/bin/python2.7\>\""}]\
}], "|>"}], "]"}]}]], "Input",ExpressionUUID->"50a5554f-bae7-4bdb-9e73-\
1bf4675154f6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ExternalSessionObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1: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
ARj8Ezj8P9xqSbg=
               "], {{0, 100}, {100, 0}}, {0, 255}, 
               ColorFunction -> RGBColor], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSizeRaw -> {100, 100}, PlotRange -> {{0, 100}, {0, 100}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"System: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Python\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"8df3fe85-5a64-478b-b591-0af2540dffb2\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"EvaluationCount: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    And[
                    ValueQ[ExternalEvaluate`Private`$Links], 
                    KeyExistsQ[
                    ExternalEvaluate`Private`$Links, 
                    "8df3fe85-5a64-478b-b591-0af2540dffb2"]], 
                    ExternalSessionObject[
                    "8df3fe85-5a64-478b-b591-0af2540dffb2"][
                    "EvaluationCount"], None], StandardForm]], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1: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
ARj8Ezj8P9xqSbg=
               "], {{0, 100}, {100, 0}}, {0, 255}, 
               ColorFunction -> RGBColor], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSizeRaw -> {100, 100}, PlotRange -> {{0, 100}, {0, 100}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"System: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Python\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"8df3fe85-5a64-478b-b591-0af2540dffb2\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"EvaluationCount: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    And[
                    ValueQ[ExternalEvaluate`Private`$Links], 
                    KeyExistsQ[
                    ExternalEvaluate`Private`$Links, 
                    "8df3fe85-5a64-478b-b591-0af2540dffb2"]], 
                    ExternalSessionObject[
                    "8df3fe85-5a64-478b-b591-0af2540dffb2"][
                    "EvaluationCount"], None], StandardForm]], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Process: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"ProcessObject", "[", "154", "]"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Epilog: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Prolog: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"2.7.13\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Executable: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"/Users/meng/python_virtualenvs/virtualenv-test/bin/\
python2.7\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ReturnType: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Expression\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Socket: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["SocketObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], 
                    PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"f98b94e4-37f3-4f6c-a1e3-cefc34e5d7d8\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ZMQ_PAIR\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"DestinationIPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"IPAddress", "[", "\"127.0.0.1\"", "]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"DestinationPort: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"55244\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], 
                    PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"f98b94e4-37f3-4f6c-a1e3-cefc34e5d7d8\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ZMQ_PAIR\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"DestinationIPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"IPAddress", "[", "\"127.0.0.1\"", "]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"DestinationPort: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"55244\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"SourceIPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    RowBox[{"IPAddress", "[", "\"::fc00:230e:2162:e547\"", 
                    "]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"SourcePort: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"0\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel", 
                    DisplayFunction -> (
                    ButtonBox[#, Active -> False, Alignment -> Left, 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> 7, BaseStyle -> {}, 
                    DefaultBaseStyle -> {"Panel", Background -> None}, 
                    BaselinePosition -> Baseline]& )], 
                    DynamicModuleValues :> {}], "]"}], 
                   SocketObject["f98b94e4-37f3-4f6c-a1e3-cefc34e5d7d8"], 
                   Selectable -> False, Editable -> False, SelectWithContents -> 
                   True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"SessionTime: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    And[
                    ValueQ[ExternalEvaluate`Private`$Links], 
                    KeyExistsQ[
                    ExternalEvaluate`Private`$Links, 
                    "8df3fe85-5a64-478b-b591-0af2540dffb2"]], 
                    ExternalSessionObject[
                    "8df3fe85-5a64-478b-b591-0af2540dffb2"]["SessionTime"], 
                    None], StandardForm]], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel",
     DisplayFunction->(
      ButtonBox[#, Active -> False, Alignment -> Left, 
       Appearance -> {
        "Default" -> 
         FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
       FrameMargins -> 7, BaseStyle -> {}, 
       DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
       Baseline]& )],
    DynamicModuleValues:>{}], "]"}],
  ExternalSessionObject["8df3fe85-5a64-478b-b591-0af2540dffb2"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",ExpressionUUID->"cf1571ee-44a2-4cfc-afb4-e35793124df5"]
}, Open  ]],

Cell["Force the return type to be Wolfram Language String:", "Text",ExpressionUUID->"2117fc4b-eaff-4687-9798-17ead6993760"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"virtualenvPython2", "=", 
  RowBox[{"StartExternalSession", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<System\>\"", "\[Rule]", "\"\<Python\>\""}], ",", 
     RowBox[{
     "\"\<Executable\>\"", "\[Rule]", 
      "\"\</Users/meng/python_virtualenvs/virtualenv-test/bin/python2.7\>\""}]\
, ",", 
     RowBox[{"\"\<ReturnType\>\"", "\[Rule]", " ", "\"\<String\>\""}]}], 
    "|>"}], "]"}]}]], "Input",ExpressionUUID->"68ed0811-31b0-4fe6-a8f4-\
c77e74a289f3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ExternalSessionObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1: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
ARj8Ezj8P9xqSbg=
               "], {{0, 100}, {100, 0}}, {0, 255}, 
               ColorFunction -> RGBColor], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSizeRaw -> {100, 100}, PlotRange -> {{0, 100}, {0, 100}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"System: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Python\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"70b35aa6-263c-4a7c-8bba-ab9b7a6dcabc\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"EvaluationCount: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    And[
                    ValueQ[ExternalEvaluate`Private`$Links], 
                    KeyExistsQ[
                    ExternalEvaluate`Private`$Links, 
                    "70b35aa6-263c-4a7c-8bba-ab9b7a6dcabc"]], 
                    ExternalSessionObject[
                    "70b35aa6-263c-4a7c-8bba-ab9b7a6dcabc"][
                    "EvaluationCount"], None], StandardForm]], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1: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
ARj8Ezj8P9xqSbg=
               "], {{0, 100}, {100, 0}}, {0, 255}, 
               ColorFunction -> RGBColor], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSizeRaw -> {100, 100}, PlotRange -> {{0, 100}, {0, 100}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"System: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Python\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"70b35aa6-263c-4a7c-8bba-ab9b7a6dcabc\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"EvaluationCount: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    And[
                    ValueQ[ExternalEvaluate`Private`$Links], 
                    KeyExistsQ[
                    ExternalEvaluate`Private`$Links, 
                    "70b35aa6-263c-4a7c-8bba-ab9b7a6dcabc"]], 
                    ExternalSessionObject[
                    "70b35aa6-263c-4a7c-8bba-ab9b7a6dcabc"][
                    "EvaluationCount"], None], StandardForm]], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Process: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"ProcessObject", "[", "156", "]"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Epilog: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Prolog: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"2.7.13\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Executable: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"/Users/meng/python_virtualenvs/virtualenv-test/bin/\
python2.7\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ReturnType: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"String\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Socket: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["SocketObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], 
                    PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"9b43fa4c-7d2c-4faa-867f-264b9a811bc3\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ZMQ_PAIR\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"DestinationIPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"IPAddress", "[", "\"127.0.0.1\"", "]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"DestinationPort: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"56566\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], 
                    PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"9b43fa4c-7d2c-4faa-867f-264b9a811bc3\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ZMQ_PAIR\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"DestinationIPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"IPAddress", "[", "\"127.0.0.1\"", "]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"DestinationPort: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"56566\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"SourceIPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    RowBox[{"IPAddress", "[", "\"::fc00:230e:2162:e547\"", 
                    "]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"SourcePort: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"0\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel", 
                    DisplayFunction -> (
                    ButtonBox[#, Active -> False, Alignment -> Left, 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> 7, BaseStyle -> {}, 
                    DefaultBaseStyle -> {"Panel", Background -> None}, 
                    BaselinePosition -> Baseline]& )], 
                    DynamicModuleValues :> {}], "]"}], 
                   SocketObject["9b43fa4c-7d2c-4faa-867f-264b9a811bc3"], 
                   Selectable -> False, Editable -> False, SelectWithContents -> 
                   True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"SessionTime: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    And[
                    ValueQ[ExternalEvaluate`Private`$Links], 
                    KeyExistsQ[
                    ExternalEvaluate`Private`$Links, 
                    "70b35aa6-263c-4a7c-8bba-ab9b7a6dcabc"]], 
                    ExternalSessionObject[
                    "70b35aa6-263c-4a7c-8bba-ab9b7a6dcabc"]["SessionTime"], 
                    None], StandardForm]], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel",
     DisplayFunction->(
      ButtonBox[#, Active -> False, Alignment -> Left, 
       Appearance -> {
        "Default" -> 
         FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
       FrameMargins -> 7, BaseStyle -> {}, 
       DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
       Baseline]& )],
    DynamicModuleValues:>{}], "]"}],
  ExternalSessionObject["70b35aa6-263c-4a7c-8bba-ab9b7a6dcabc"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",ExpressionUUID->"b537de45-89e9-4805-86c2-786e4de77b49"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ExternalEvaluate", "Subsection",ExpressionUUID->"90c2a7a6-d4a5-4d51-8abb-5eaf1f66940c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExternalEvaluate", "[", 
  RowBox[{"python", ",", "\"\<print(3)\>\""}], "]"}]], "Input",ExpressionUUID-\
>"6ee225de-d5d6-4ce5-b2e5-281abb1cd99d"],

Cell[BoxData["3"], "Output",ExpressionUUID->"6f1ea885-febc-425a-8bc5-c69c427bb90b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExternalEvaluate", "[", 
  RowBox[{
  "virtualenvPython", ",", "\"\<import sys; print(sys.version_info)\>\""}], 
  "]"}]], "Input",ExpressionUUID->"bf47f2d0-a8a1-4daa-91e7-1c298d443f11"],

Cell[BoxData[
 TemplateBox[{
  "ExternalEvaluate","interpFail",
   "\"The result \\!\\(\\*RowBox[{\\\"\\\\\\\"sys.version_info(major=2, \
minor=7, micro=13, releaselevel='final', serial=0)\\\\\\\"\\\"}]\\) failed to \
be interpreted as a WL expression. Use \\\"ReturnType\\\"->\\\"String\\\" \
instead.\"",2,341,25,21945406691709682381,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"7a796766-c173-41b4-8684-d1b30cdf1b8d"],

Cell[BoxData["$Failed"], "Output",ExpressionUUID->"ab3db69a-dbce-4425-97b6-c8b776e50d74"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExternalEvaluate", "[", 
  RowBox[{
  "virtualenvPython2", ",", "\"\<import sys; print(sys.version_info)\>\""}], 
  "]"}]], "Input",ExpressionUUID->"6ca11dc2-98b5-4b57-ace3-aada3b6d0c41"],

Cell[BoxData["\<\"sys.version_info(major=2, minor=7, micro=13, \
releaselevel='final', serial=0)\"\>"], "Output",ExpressionUUID->"34505250-\
534d-4b94-873b-2663d5b27341"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440, 851},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 6, \
2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info1333714679557-6406583"->{
  Cell[87757, 1748, 171, 3, 45, "Print",ExpressionUUID->"7dffa8b8-c6b0-4179-817d-1fc05bd5ac22",
   CellTags->"Info1333714679557-6406583"],
  Cell[87931, 1753, 3847, 86, 196, "Print",ExpressionUUID->"3abfd411-efc3-4b2f-914d-58bc9d07d038",
   CellTags->"Info1333714679557-6406583"]},
 "Info1643714681949-6406583"->{
  Cell[952, 33, 846, 17, 70, "Print",ExpressionUUID->"f18a3bbf-5927-4fa2-911a-d6fc6afc5776",
   CellTags->"Info1643714681949-6406583"]},
 "Info3173714762266-8229228"->{
  Cell[56263, 1120, 692, 15, 47, "Print",ExpressionUUID->"2f3e5a2e-fcf7-4ac3-93a1-9e7b5a6ca4e7",
   CellTags->"Info3173714762266-8229228"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info1333714679557-6406583", 221257, 4315},
 {"Info1643714681949-6406583", 221571, 4320},
 {"Info3173714762266-8229228", 221740, 4323}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 88, 0, 98, "Title",ExpressionUUID->"7adac6b6-0dd7-4b2a-8b80-1283116d06ab"],
Cell[CellGroupData[{
Cell[693, 26, 111, 0, 54, "Subsection",ExpressionUUID->"75307a0f-87a0-45b0-9ac9-55f4d54eab4d"],
Cell[CellGroupData[{
Cell[829, 30, 120, 1, 30, "Input",ExpressionUUID->"f1d65c3e-e90e-433f-8a6e-68ef07e4411a"],
Cell[952, 33, 846, 17, 70, "Print",ExpressionUUID->"f18a3bbf-5927-4fa2-911a-d6fc6afc5776",
 CellTags->"Info1643714681949-6406583"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1835, 55, 145, 2, 30, "Input",ExpressionUUID->"dd35f1ee-3acd-4abe-90fe-bd064b09b4c6"],
Cell[1983, 59, 29253, 568, 185, "Output",ExpressionUUID->"4018df10-c517-4e8f-9624-5818edd3f033"]
}, Open  ]],
Cell[31251, 630, 151, 2, 35, "Text",ExpressionUUID->"1b8e363e-1a20-428b-b039-aa7ac0a80286"],
Cell[CellGroupData[{
Cell[31427, 636, 919, 21, 220, "Input",ExpressionUUID->"e3ddd1cc-680f-4c04-b52a-593d377230bc"],
Cell[32349, 659, 23599, 449, 109, "Output",ExpressionUUID->"5220ce9a-abf7-4728-990d-be11506da03e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55985, 1113, 127, 0, 45, "Subsubsection",ExpressionUUID->"dcfa5b04-9af7-4651-b38c-e1c71c08a935"],
Cell[CellGroupData[{
Cell[56137, 1117, 123, 1, 30, "Input",ExpressionUUID->"57e3550f-837f-41c6-9e57-297770ef035c"],
Cell[56263, 1120, 692, 15, 47, "Print",ExpressionUUID->"2f3e5a2e-fcf7-4ac3-93a1-9e7b5a6ca4e7",
 CellTags->"Info3173714762266-8229228"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56992, 1140, 288, 7, 30, "Input",ExpressionUUID->"26235dfa-f91f-4429-aafc-50c60c6d8200"],
Cell[57283, 1149, 354, 7, 60, "Output",ExpressionUUID->"adf8665a-c28c-4e4d-88db-8e478b4984c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57674, 1161, 462, 11, 94, "Input",ExpressionUUID->"ec880d5a-e23f-4b42-ac2d-1cd4ea6e8eb5"],
Cell[58139, 1174, 126, 0, 34, "Output",ExpressionUUID->"42e4b2ed-cdbc-40e2-962a-faaa01c79286"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58302, 1179, 145, 2, 30, "Input",ExpressionUUID->"11091934-0371-4bca-b7d5-f5c83afcd4ba"],
Cell[58450, 1183, 28948, 549, 185, "Output",ExpressionUUID->"c6759550-d863-475f-a987-97e0d5cae618"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[87447, 1738, 120, 0, 45, "Subsubsection",ExpressionUUID->"7c3cd816-2b09-4d56-a29f-7333edb66ea9"],
Cell[CellGroupData[{
Cell[87592, 1742, 140, 2, 30, "Input",ExpressionUUID->"5542fecd-0739-4c57-9c85-2c0d987db48b"],
Cell[CellGroupData[{
Cell[87757, 1748, 171, 3, 45, "Print",ExpressionUUID->"7dffa8b8-c6b0-4179-817d-1fc05bd5ac22",
 CellTags->"Info1333714679557-6406583"],
Cell[87931, 1753, 3847, 86, 196, "Print",ExpressionUUID->"3abfd411-efc3-4b2f-914d-58bc9d07d038",
 CellTags->"Info1333714679557-6406583"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[91827, 1845, 220, 3, 30, "Input",ExpressionUUID->"a62d9a81-29be-4ee5-89a6-bc3f1f45beca"],
Cell[92050, 1850, 4941, 113, 245, "Output",ExpressionUUID->"e59044a4-7cf1-4efc-af1a-972bd21b819c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[97052, 1970, 113, 0, 54, "Subsection",ExpressionUUID->"11392249-55ea-499e-ba39-d6dc03f4c080"],
Cell[CellGroupData[{
Cell[97190, 1974, 171, 3, 30, "Input",ExpressionUUID->"c7b0268f-26b0-4035-8ce0-722c6eb7bf0a"],
Cell[97364, 1979, 40228, 743, 87, "Output",ExpressionUUID->"94aba59f-168b-4e66-90d2-81f67b6343bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137629, 2727, 408, 10, 30, "Input",ExpressionUUID->"50a5554f-bae7-4bdb-9e73-1bf4675154f6"],
Cell[138040, 2739, 40286, 745, 87, "Output",ExpressionUUID->"cf1571ee-44a2-4cfc-afb4-e35793124df5"]
}, Open  ]],
Cell[178341, 3487, 123, 0, 35, "Text",ExpressionUUID->"2117fc4b-eaff-4687-9798-17ead6993760"],
Cell[CellGroupData[{
Cell[178489, 3491, 491, 12, 30, "Input",ExpressionUUID->"68ed0811-31b0-4fe6-a8f4-c77e74a289f3"],
Cell[178983, 3505, 40282, 745, 87, "Output",ExpressionUUID->"b537de45-89e9-4805-86c2-786e4de77b49"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[219314, 4256, 93, 0, 54, "Subsection",ExpressionUUID->"90c2a7a6-d4a5-4d51-8abb-5eaf1f66940c"],
Cell[CellGroupData[{
Cell[219432, 4260, 169, 3, 30, "Input",ExpressionUUID->"6ee225de-d5d6-4ce5-b2e5-281abb1cd99d"],
Cell[219604, 4265, 83, 0, 34, "Output",ExpressionUUID->"6f1ea885-febc-425a-8bc5-c69c427bb90b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[219724, 4270, 210, 4, 30, "Input",ExpressionUUID->"bf47f2d0-a8a1-4daa-91e7-1c298d443f11"],
Cell[219937, 4276, 443, 8, 24, "Message",ExpressionUUID->"7a796766-c173-41b4-8684-d1b30cdf1b8d"],
Cell[220383, 4286, 89, 0, 34, "Output",ExpressionUUID->"ab3db69a-dbce-4425-97b6-c8b776e50d74"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220509, 4291, 211, 4, 30, "Input",ExpressionUUID->"6ca11dc2-98b5-4b57-ace3-aada3b6d0c41"],
Cell[220723, 4297, 170, 2, 34, "Output",ExpressionUUID->"34505250-534d-4b94-873b-2663d5b27341"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

